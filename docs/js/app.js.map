{"version":3,"sources":["webpack:///js/app.js","webpack:///webpack/bootstrap 14d6d14066f8bc7c3a98","webpack:///external \"d3\"","webpack:///./src/public/js/data.ts","webpack:///./node_modules/topojson-client/src/transform.js","webpack:///./node_modules/topojson-client/src/feature.js","webpack:///./node_modules/topojson-server/src/hash/hashmap.js","webpack:///./node_modules/topojson-simplify/src/planar.js","webpack:///external \"jQuery\"","webpack:///./node_modules/color/index.js","webpack:///./node_modules/color-name/index.js","webpack:///./node_modules/color-convert/conversions.js","webpack:///./node_modules/topojson-client/src/bbox.js","webpack:///./node_modules/topojson-client/src/identity.js","webpack:///./node_modules/topojson-client/src/stitch.js","webpack:///./node_modules/topojson-client/src/untransform.js","webpack:///./node_modules/topojson-server/src/hash/point-equal.js","webpack:///./node_modules/topojson-server/src/hash/point-hash.js","webpack:///./node_modules/topojson-simplify/src/filterAttached.js","webpack:///./node_modules/topojson-simplify/src/filterWeight.js","webpack:///./src/public/js/app.ts","webpack:///./src/public/js/totals.ts","webpack:///./src/public/js/categories.json","webpack:///./src/public/js/departments.json","webpack:///./src/public/js/sources.json","webpack:///./src/public/js/projectTotals.json","webpack:///./src/public/js/sourceTotalsByDepartment.json","webpack:///./src/public/js/bubble.ts","webpack:///./node_modules/color-string/index.js","webpack:///./node_modules/simple-swizzle/index.js","webpack:///./node_modules/is-arrayish/index.js","webpack:///./node_modules/color-convert/index.js","webpack:///./node_modules/color-convert/route.js","webpack:///./src/public/js/sources.ts","webpack:///./src/public/utils/common.ts","webpack:///./src/public/js/map.ts","webpack:///./node_modules/topojson-client/src/reverse.js","webpack:///./node_modules/topojson-client/src/mesh.js","webpack:///./node_modules/topojson-client/src/merge.js","webpack:///./node_modules/topojson-client/src/neighbors.js","webpack:///./node_modules/topojson-client/src/bisect.js","webpack:///./node_modules/topojson-client/src/quantize.js","webpack:///./node_modules/topojson-server/src/topology.js","webpack:///./node_modules/topojson-server/src/bounds.js","webpack:///./node_modules/topojson-server/src/cut.js","webpack:///./node_modules/topojson-server/src/join.js","webpack:///./node_modules/topojson-server/src/hash/hashset.js","webpack:///./node_modules/topojson-server/src/dedup.js","webpack:///./node_modules/topojson-server/src/delta.js","webpack:///./node_modules/topojson-server/src/extract.js","webpack:///./node_modules/topojson-server/src/geometry.js","webpack:///./node_modules/topojson-server/src/prequantize.js","webpack:///./node_modules/topojson-simplify/src/filter.js","webpack:///./node_modules/topojson-simplify/src/prune.js","webpack:///./node_modules/topojson-simplify/src/filterAttachedWeight.js","webpack:///./node_modules/topojson-simplify/src/presimplify.js","webpack:///./node_modules/topojson-simplify/src/heap.js","webpack:///./node_modules/topojson-simplify/src/quantile.js","webpack:///./node_modules/topojson-simplify/src/simplify.js","webpack:///./node_modules/topojson-simplify/src/spherical.js","webpack:///./src/public/js/map-data.json","webpack:///./src/public/js/map-geo.json","webpack:///./src/public/js/map-counties-ca-topo.json"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","d3","getDepartments","departments","slice","getSources","sources","getSourceTotals","sourceTotals","getCategories","categories","getProjects","projects","getSelectedCategory","selectedCategory","setSelectedCategory","category","index","findIndex","events","forEach","e","onSelectedCategoryChanged","func","push","__assign","this","assign","t","arguments","length","value","departmentJson","keys","map","k","categoryKey","categoryIndex","key","filter","sourceJson","parentSourceName","projectJson","dept","project","departmentKey","total","sourceTotalsByDepartmentJson","_i","_a","sourceKey","totals","source","find","undefined","console","info","result","byDeparment","byCategory","department","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__src_bbox__","__WEBPACK_IMPORTED_MODULE_1__src_feature__","__WEBPACK_IMPORTED_MODULE_2__src_mesh__","__WEBPACK_IMPORTED_MODULE_3__src_merge__","__WEBPACK_IMPORTED_MODULE_4__src_neighbors__","__WEBPACK_IMPORTED_MODULE_5__src_quantize__","__WEBPACK_IMPORTED_MODULE_6__src_transform__","__WEBPACK_IMPORTED_MODULE_7__src_untransform__","__WEBPACK_IMPORTED_MODULE_0__identity__","transform","x0","y0","kx","scale","ky","dx","translate","dy","input","j","output","Array","feature","topology","id","bbox","properties","geometry","type","arc","points","pop","a","arcs","transformPoint","__WEBPACK_IMPORTED_MODULE_0__reverse__","point","line","ring","polygon","coordinates","geometries","__WEBPACK_IMPORTED_MODULE_1__transform__","features","size","hash","equal","keyType","keyEmpty","valueType","set","mask","matchKey","keystore","collisions","valstore","Error","maybeSet","missingValue","Math","max","ceil","log","LN2","planarTriangleArea","triangle","b","abs","planarRingArea","area","jQuery","Color","obj","model","skippedModels","convert","channels","color","valpha","colorString","newArr","_slice","zeroArray","splice","indexOf","alpha","hashedKeys","sort","join","hashedModelKeys","JSON","stringify","labels","limiters","limit","min","freeze","roundTo","num","places","Number","toFixed","roundToPlace","getset","channel","modifier","isArray","val","maxfn","v","assertArray","arr","toString","string","toJSON","self","to","rgb","round","args","concat","percentString","percent","array","unitArray","unitObject","r","g","red","green","blue","hue","saturationl","lightness","saturationv","chroma","gray","white","wblack","cyan","magenta","yellow","black","x","y","z","keyword","hex","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","ratio","hsl","darken","saturate","desaturate","whiten","hwb","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w","w1","w2","newAlpha","raw","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellowgreen","comparativeDistance","cssKeywords","reverseKeywords","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","h","delta","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","t1","t2","t3","sv","smin","lmin","hi","floor","f","q","sl","vmin","wh","bl","y2","x2","z2","hr","atan2","PI","sqrt","cos","sin","ansi","mult","rem","integer","toUpperCase","substring","match","split","char","parseInt","pure","mg","__WEBPACK_IMPORTED_MODULE_0__transform__","bboxPoint","x1","y1","bboxGeometry","objects","ends","p1","p0","dp","flush","fragmentByEnd","fragmentByStart","start","end","stitchedArcs","fragments","emptyIndex","fg","unshift","gf","pointA","pointB","buffer","ArrayBuffer","floats","Float64Array","uints","Uint32Array","testGeometry","testArcs","ownerIndex","owner","ownerByArc","__WEBPACK_IMPORTED_MODULE_0_topojson_client__","__WEBPACK_IMPORTED_MODULE_1__planar__","minWeight","MIN_VALUE","interior","smoothScroll","href","target","$","offset","top","$topicBar","height","$root","animate","scrollTop","handleTopicChanged","topic","data_1","data","each","addClass","removeClass","setupTopicSelector","click","showRandomArticle","preventDefault","setupScroll","startTop","position","handleScroll","window","scroll","setupSlideshow","$carousel","slick","variableWidth","arrows","autoplay","autoplaySpeed","setupArticleSelect","on","$articleLinks","$articles","hide","attr","show","article","$topicArticles","articleIndex","random","$articleLink","ready","getTotal","reduce","prev","getCategoryTopic","setTotals","millions","totalSpans","span","innerText","setAttribute","document","getElementsByClassName","addEventListener","icon","ARE","BAE","PLS","PLB","PPA","ASC","HCE","TXC","ESP","ENM","ETX","LAW","WFB","VIT","FST","NTR","MCB","EVE","MIC","NPB","f201","f202","f203","f204","f205","f219","f209","f310","f308","f311","f316","f312","f313","f314","f315","f318","f220","f22F","f221","f222","f223","f231","f332","f233","f234","getCircleColor","getCircleStroke","getCircleRadius","getTargetX","width","center","getTargetY","getTargetRadius","getStrengthMultiplier","maxTotal","buildSimulation","simulation","force","forceSimulation","forceCollide","strength","iterations","forceCenter","forceRadial","forceX","forceY","circles","d3_1","timeout","easeCollision","collisionTimer","timer","elapsed","dt","newStrength","stop","sumTotal","svg","select","append","selectAll","enter","mouseoverChart","datum","transition","duration","classed","text","totalChart","count","clamp","hexDouble","str","colorNames","swizzle","reverseNames","cs","prefix","toLowerCase","hexAlpha","abbr","rgba","per","i2","parseFloat","isNaN","hsla","hwba","isArrayish","results","len","arg","wrap","fn","Function","getOwnPropertyDescriptor","constructor","wrapRaw","wrappedFn","conversion","wrapRounded","conversions","route","fromModel","routes","toModel","buildGraph","graph","models","parent","deriveBFS","queue","current","adjacents","adjacent","node","link","from","wrapConversion","path","cur","getSelectedTotal","getTotalLabelColor","word","words","reverse","lineNumber","tspan","getComputedTextLength","common_1","charts","sourceTotal","chart","label","simulations","debounce","element","parentElement","clientHeight","wait","clearTimeout","setTimeout","geo","topojson","state_data","counties_data","projection","geoMercator","geoPath","insert","states","counties","tooltip","style","getTotalLength","positions","delay","ease","easeElasticInOut","Name","html","event","pageY","__WEBPACK_IMPORTED_MODULE_1_topojson_server__","__WEBPACK_IMPORTED_MODULE_2_topojson_simplify__","meshArcs","extractArcs","__WEBPACK_IMPORTED_MODULE_1__stitch__","extract0","geomsByArc","geom","extract1","extract2","extract3","geoms","__WEBPACK_IMPORTED_MODULE_0__feature__","apply","mergeArcs","extract","polygonsByArc","polygons","groups","_","group","neighbors","ki","__WEBPACK_IMPORTED_MODULE_0__bisect__","indexesByArc","geometryType","LineString","MultiLineString","Polygon","MultiPolygon","indexes","ij","ik","lo","mid","__WEBPACK_IMPORTED_MODULE_0__bbox__","__WEBPACK_IMPORTED_MODULE_1__untransform__","quantizePoint","quantizeGeometry","quantizeArc","box","inputs","outputs","__WEBPACK_IMPORTED_MODULE_0__src_topology__","hashArc","equalArc","arcA","arcB","ia","ja","ib","jb","__WEBPACK_IMPORTED_MODULE_0__bounds__","__WEBPACK_IMPORTED_MODULE_1__cut__","__WEBPACK_IMPORTED_MODULE_2__dedup__","__WEBPACK_IMPORTED_MODULE_3__delta__","__WEBPACK_IMPORTED_MODULE_4__extract__","__WEBPACK_IMPORTED_MODULE_5__geometry__","__WEBPACK_IMPORTED_MODULE_6__hash_hashmap__","__WEBPACK_IMPORTED_MODULE_7__prequantize__","quantization","indexGeometry","indexGeometryType","indexArcs","indexByArc","next","indexMultiArcs","GeometryCollection","boundGeometry","boundGeometryType","boundPoint","boundLine","boundMultiLine","Point","MultiPoint","rotateArray","__WEBPACK_IMPORTED_MODULE_0__join__","junctions","lines","rings","lineMid","lineEnd","has","0","1","ringStart","ringMid","ringEnd","ringFixed","__WEBPACK_IMPORTED_MODULE_0__hash_hashset__","__WEBPACK_IMPORTED_MODULE_1__hash_hashmap__","__WEBPACK_IMPORTED_MODULE_2__hash_point_equal__","__WEBPACK_IMPORTED_MODULE_3__hash_point_hash__","sequence","previousIndex","currentIndex","nextIndex","visitedByIndex","leftIndex","leftByIndex","rightIndex","rightByIndex","junctionCount","junctionByIndex","hashIndex","equalIndex","indexByPoint","Int32Array","Int8Array","lineStart","junctionByPoint","add","empty","store","values","__WEBPACK_IMPORTED_MODULE_0__hash_hashmap__","__WEBPACK_IMPORTED_MODULE_1__hash_point_equal__","__WEBPACK_IMPORTED_MODULE_2__hash_point_hash__","dedupLine","startPoint","endPoint","startArcs","startArc","endArcs","endArc","arcsByEnd","equalLine","reverseEqualLine","equalRing","ka","findMinimumOffset","kb","reverseEqualRing","minimum","minimumPoint","arcCount","extractGeometry","extractGeometryType","extractLine","extractRing","extractMultiRing","geomifyObject","geomifyFeatureCollection","geomifyFeature","geomifyGeometry","quantizePoints","pi","px","py","quantizeLine","quantizeRing","quantizePolygon","quantizeGeometryType","__WEBPACK_IMPORTED_MODULE_0__src_filter__","__WEBPACK_IMPORTED_MODULE_1__src_filterAttached__","__WEBPACK_IMPORTED_MODULE_2__src_filterAttachedWeight__","__WEBPACK_IMPORTED_MODULE_3__src_filterWeight__","__WEBPACK_IMPORTED_MODULE_4__src_planar__","__WEBPACK_IMPORTED_MODULE_5__src_presimplify__","__WEBPACK_IMPORTED_MODULE_6__src_quantile__","__WEBPACK_IMPORTED_MODULE_7__src_simplify__","__WEBPACK_IMPORTED_MODULE_8__src_spherical__","filterTrue","filterIdentity","filterNotNull","__WEBPACK_IMPORTED_MODULE_0__prune__","filterGeometry","filterRings","filterExteriorRing","filterInteriorRing","oldObjects","newObjects","scanGeometry","scanArcs","scanMultiArcs","scanArc","newIndexByOldIndex","newArcsLength","reindexGeometry","reindexArcs","reindexMultiArcs","reindexArc","oldIndex","newArcs","oldArcs","oldArcsLength","newIndex","__WEBPACK_IMPORTED_MODULE_0__filterAttached__","__WEBPACK_IMPORTED_MODULE_1__filterWeight__","copy","__WEBPACK_IMPORTED_MODULE_1__heap__","__WEBPACK_IMPORTED_MODULE_2__planar__","update","heap","remove","triangles","maxWeight","previous","compare","up","down","child","removed","quantile","descending","isFinite","halfArea","closed","lambda0","cosPhi0","sinPhi0","sum","lambda1","radians","phi1","quarterPi","cosPhi1","sinPhi1","dLambda","sdLambda","adLambda","u","sphericalRingArea","tau","sphericalTriangleArea","crs","description","timestamp","begin","altitudeMode","tessellate","extrude","visibility","drawOrder","GEO_ID","STATE","COUNTY","NAME","LSAD","CENSUSAREA"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,IAGAzB,IAAA0B,EAAA,MDMM,SAAUtB,EAAQD,GEnExBC,EAAAD,QAAAwB,IFyEM,SAAUvB,EAAQD,EAASH,GAEjC,YG2EA,SAAA4B,KACI,MAAWC,GAAWC,QAG1B,QAAAC,KACI,MAAWC,GAAOF,QAGtB,QAAAG,KACI,MAAWC,GAAYJ,QAG3B,QAAAK,KACI,MAAWC,GAAUN,QAGzB,QAAAO,KACI,MAAWC,GAAQR,QAIvB,QAAAS,KACI,MAAOC,GAGX,QAAAC,GAAoCC,GAChC,GAAMC,GAAQP,EAAWQ,UAAU,SAAAnC,GAAK,MAAAA,GAAEE,OAAS+B,GAOnD,OANAF,GAAmBG,EAEnBE,EAAOC,QAAQ,SAAAC,GACXA,EAAEJ,KAGCH,EAQX,QAAAQ,GAA0CC,GACtCJ,EAAOK,KAAKD,GHnHhB,GAAIE,GAAYC,MAAQA,KAAKD,UAAarC,OAAOuC,QAAU,SAASC,GAChE,IAAK,GAAI5B,GAAGrB,EAAI,EAAGc,EAAIoC,UAAUC,OAAQnD,EAAIc,EAAGd,IAAK,CACjDqB,EAAI6B,UAAUlD,EACd,KAAK,GAAIoB,KAAKC,GAAOZ,OAAOS,UAAUC,eAAejB,KAAKmB,EAAGD,KACzD6B,EAAE7B,GAAKC,EAAED,IAEjB,MAAO6B,GAEXxC,QAAOC,eAAeZ,EAAS,cAAgBsD,OAAO,GGzCtD,KAAwB,GA1ClBrB,GAA0BpC,EAAQ,IAGlC0D,EAAsB1D,EAAQ,IAC9B6B,EAA6Bf,OAAO6C,KAAKD,GAAgBE,IAAI,SAACC,GAChE,GAAMC,GAAcJ,EAAeG,GAAGnB,SAChCqB,EAAgB3B,EAAWQ,UAAU,SAAAnC,GAAK,MAAAA,GAAEuD,MAAQF,GAC1D,QACIE,IAAKH,EACLlD,KAAM+C,EAAeG,GAAGlD,KACxBmD,YAAaA,EACbC,cAAeA,KAEpBE,OAAO,SAAAvD,GAAK,MAAAA,GAAEqD,eAAiB,IAG5BG,EAAkBlE,EAAQ,IAC1BgC,EAAqBlB,OAAO6C,KAAKO,GAAYN,IAAI,SAACC,GACpD,OACIG,IAAKH,EACLlD,KAAMuD,EAAWL,GAAGlD,KACpBwD,iBAAkBD,EAAWL,GAAGnB,YAKlC0B,EAAqBpE,EAAQ,IAC7BsC,EAAuB8B,EAAYR,IAAI,SAAAnC,GACzC,GAAMqC,GAAcJ,EAAejC,EAAE4C,MAAM3B,SACrCqB,EAAgB3B,EAAWQ,UAAU,SAAAnC,GAAK,MAAAA,GAAEuD,MAAQF,GAC1D,QACIE,IAAKvC,EAAE6C,QACP3D,KAAMc,EAAE6C,QACRR,YAAaA,EACbC,cAAeA,EACfQ,cAAe9C,EAAE4C,KACjBG,MAAO/C,EAAE+C,SAEdP,OAAO,SAAAxC,GAAK,MAAAA,GAAEsC,eAAiB,IAE5BU,EAAoCzE,EAAQ,IAC5CkC,KACkBwC,EAAA,EAAAC,EAAA7D,OAAO6C,KAAKc,GAAZC,EAAAC,EAAAnB,OAAAkB,IAAyC,CAA5D,GAAME,GAASD,EAAAD,IHgFN,SGhFHE,GAEP,GAAMC,GAASJ,EAA6BG,GACtCE,EAAS9C,EAAQ+C,KAAK,SAAArD,GAAK,MAAAA,GAAEsC,MAAQY,GAE3C,QAAeI,KAAXF,EHgFA,MG/EAG,SAAQC,KAAK,0BAA2BN,GH+EjC,UGlEX,KAA4B,GATtBO,IACFnB,IAAKY,EACLE,OAAQA,EACRM,eACAC,WAAYjD,EAAWwB,IAAI,SAAAnD,GAAO,MAAM0C,MAAM1C,GAAG+D,MAAO,MACxDA,MAAO,GAIiBE,EAAA,EAAAC,EAAA7D,OAAO6C,KAAKkB,GAAZH,EAAAC,EAAAnB,OAAAkB,IAAmB,CAA1C,GAAMH,GAAaI,EAAAD,IH2EV,SG3EHH,GACP,GAAMe,GAAazD,EAAYkD,KAAK,SAAArE,GAAK,MAAAA,GAAEsD,MAAQO,GACnD,QAAmBS,KAAfM,EH6EA,MG5EAL,SAAQC,KAAK,8BAA+BX,GH4ErC,UGxEX,IAAMC,GAAgBK,EAAON,IAAkB,CAG/C,IAAIC,GAAS,EH0ET,MAAO,UGrEXW,GAAOC,YAAYlC,KAAIC,KAChBmC,GACHd,MAAKA,IAIT,IAAM9B,GAAWyC,EAAOE,WAAWN,KAAK,SAAAtE,GAAK,MAAAA,GAAEuD,MAAQsB,EAAWxB,aAClE,QAAiBkB,KAAbtC,EHsEA,MGrEAuC,SAAQC,KAAK,4BAA6BI,EAAWxB,aHqE9C,UGlEXpB,GAAS8B,OAASA,EAGlBW,EAAOX,OAASA,GA7BTD,GAiCX,GAAIY,EAAOX,OAAS,EHwEhB,MAAO,UGpEXtC,GAAagB,KAAKiC,IAxDXP,GA0GXzE,EAAAyB,iBAIAzB,EAAA4B,aAIA5B,EAAA8B,kBAIA9B,EAAAgC,gBAIAhC,EAAAkC,aAIA,IAAIG,IAAoB,CACxBrC,GAAAoC,sBAIApC,EAAAsC,qBAeA,IAAMI,KACN1C,GAAA6C,6BH4BM,SAAU5C,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIwF,GAA0CxF,EAAoB,GACtDA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOC,GAA2C,GAC3H,IAAIC,GAA6CzF,EAAoB,EACzDA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOE,GAA8C,GAC9H,IAAIC,GAA0C1F,EAAoB,GACtDA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOG,GAA2C,IAC/G1F,EAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOG,GAA2C,GAC3H,IAAIC,GAA2C3F,EAAoB,GACvDA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOI,GAA4C,IAChH3F,EAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOI,GAA4C,GAC5H,IAAIC,GAA+C5F,EAAoB,GAC3DA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOK,GAAgD,GAChI,IAAIC,GAA8C7F,EAAoB,GAC1DA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOM,GAA+C,GAC/H,IAAIC,GAA+C9F,EAAoB,EAC3DA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOO,GAAgD,GAChI,IAAIC,GAAiD/F,EAAoB,GAC7DA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOQ,GAAkD,KAajJ,SAAU3F,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIgG,GAA0ChG,EAAoB,GI7PvFuF,GAAA,WAAAU,GACA,SAAAA,EAAA,MAAAD,GAAA,CACA,IAAAE,GACAC,EACAC,EAAAH,EAAAI,MAAA,GACAC,EAAAL,EAAAI,MAAA,GACAE,EAAAN,EAAAO,UAAA,GACAC,EAAAR,EAAAO,UAAA,EACA,iBAAAE,EAAArG,GACAA,IAAA6F,EAAAC,EAAA,EACA,IAAAQ,GAAA,EAAAxF,EAAAuF,EAAAlD,OAAAoD,EAAA,GAAAC,OAAA1F,EAGA,KAFAyF,EAAA,IAAAV,GAAAQ,EAAA,IAAAN,EAAAG,EACAK,EAAA,IAAAT,GAAAO,EAAA,IAAAJ,EAAAG,EACAE,EAAAxF,GAAAyF,EAAAD,GAAAD,EAAAC,MACA,OAAAC,MJuQM,SAAUxG,EAAQmF,EAAqBvF,GAE7C,YKhRA,SAAA8G,GAAAC,EAAAlG,GACA,GAAAmG,GAAAnG,EAAAmG,GACAC,EAAApG,EAAAoG,KACAC,EAAA,MAAArG,EAAAqG,cAA4CrG,EAAAqG,WAC5CC,EAAA9F,EAAA0F,EAAAlG,EACA,cAAAmG,GAAA,MAAAC,GAAuCG,KAAA,UAAAF,aAAAC,YACvC,MAAAF,GAAwBG,KAAA,UAAAJ,KAAAE,aAAAC,aACfC,KAAA,UAAAJ,KAAAC,OAAAC,aAAAC,YAGT,QAAA9F,GAAA0F,EAAAlG,GAIA,QAAAwG,GAAAhH,EAAAiH,GACAA,EAAA9D,QAAA8D,EAAAC,KACA,QAAAC,GAAAC,EAAApH,EAAA,GAAAA,KAAAwD,EAAA,EAAA1C,EAAAqG,EAAAhE,OAA2DK,EAAA1C,IAAO0C,EAClEyD,EAAApE,KAAAwE,EAAAF,EAAA3D,MAEAxD,GAAA,GAAAS,OAAA6G,EAAA,GAAAL,EAAAnG,GAGA,QAAAyG,GAAAnG,GACA,MAAAiG,GAAAjG,GAGA,QAAAoG,GAAAJ,GAEA,OADAH,MACAjH,EAAA,EAAAc,EAAAsG,EAAAjE,OAAoCnD,EAAAc,IAAOd,EAAAgH,EAAAI,EAAApH,GAAAiH,EAE3C,OADAA,GAAA9D,OAAA,GAAA8D,EAAApE,KAAAoE,EAAA,IACAA,EAGA,QAAAQ,GAAAL,GAEA,IADA,GAAAH,GAAAO,EAAAJ,GACAH,EAAA9D,OAAA,GAAA8D,EAAApE,KAAAoE,EAAA,GACA,OAAAA,GAGA,QAAAS,GAAAN,GACA,MAAAA,GAAA7D,IAAAkE,GAGA,QAAAX,GAAAtG,GACA,GAAAmH,GAAAZ,EAAAvG,EAAAuG,IACA,QAAAA,GACA,gCAAyCA,OAAAa,WAAApH,EAAAoH,WAAArE,IAAAuD,GACzC,aAAAa,EAAAJ,EAAA/G,EAAAmH,YAAuD,MACvD,kBAAAA,EAAAnH,EAAAmH,YAAApE,IAAAgE,EAAgE,MAChE,kBAAAI,EAAAH,EAAAhH,EAAA4G,KAAoD,MACpD,uBAAAO,EAAAnH,EAAA4G,KAAA7D,IAAAiE,EAA6D,MAC7D,eAAAG,EAAAD,EAAAlH,EAAA4G,KAAoD,MACpD,oBAAAO,EAAAnH,EAAA4G,KAAA7D,IAAAmE,EAA6D,MAC7D,qBAEA,OAAYX,OAAAY,eA5CZ,GAAAN,GAAA5G,OAAAoH,EAAA,GAAAnB,EAAAd,WACAwB,EAAAV,EAAAU,IA8CA,OAAAN,GAAAtG,GLwNiC0E,EAAuB,EAAIlE,CACvC,IAAIsG,GAAyC3H,EAAoB,IAC7DkI,EAA2ClI,EAAoB,EAI3DuF,GAAuB,EAAI,SK9RxDwB,EAAAlG,GACA,6BAAAA,EAAAuG,MACSA,KAAA,oBAAAe,SAAAtH,EAAAoH,WAAArE,IAAA,SAAA/C,GAAmE,MAAAiG,GAAAC,EAAAlG,MAC5EiG,EAAAC,EAAAlG,KLiWM,SAAUT,EAAQmF,EAAqBvF,GAE7C,YMzWAuF,GAAA,WAAA6C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAcA,QAAAC,GAAA1E,EAAAP,GAIA,IAHA,GAAAd,GAAA0F,EAAArE,GAAA2E,EACAC,EAAAC,EAAAlG,GACAmG,EAAA,EACAF,GAAAJ,GAAA,CACA,GAAAF,EAAAM,EAAA5E,GAAA,MAAA+E,GAAApG,GAAAc,CACA,MAAAqF,GAAAV,EAAA,SAAAY,OAAA,eACAJ,GAAAC,EAAAlG,IAAA,EAAAgG,GAIA,MAFAE,GAAAlG,GAAAqB,EACA+E,EAAApG,GAAAc,EACAA,EAGA,QAAAwF,GAAAjF,EAAAP,GAIA,IAHA,GAAAd,GAAA0F,EAAArE,GAAA2E,EACAC,EAAAC,EAAAlG,GACAmG,EAAA,EACAF,GAAAJ,GAAA,CACA,GAAAF,EAAAM,EAAA5E,GAAA,MAAA+E,GAAApG,EACA,MAAAmG,GAAAV,EAAA,SAAAY,OAAA,eACAJ,GAAAC,EAAAlG,IAAA,EAAAgG,GAIA,MAFAE,GAAAlG,GAAAqB,EACA+E,EAAApG,GAAAc,EACAA,EAGA,QAAAvC,GAAA8C,EAAAkF,GAIA,IAHA,GAAAvG,GAAA0F,EAAArE,GAAA2E,EACAC,EAAAC,EAAAlG,GACAmG,EAAA,EACAF,GAAAJ,GAAA,CACA,GAAAF,EAAAM,EAAA5E,GAAA,MAAA+E,GAAApG,EACA,MAAAmG,GAAAV,EAAA,KACAQ,GAAAC,EAAAlG,IAAA,EAAAgG,GAEA,MAAAO,GAGA,QAAAvF,KAEA,OADAA,MACAtD,EAAA,EAAAc,EAAA0H,EAAArF,OAAwCnD,EAAAc,IAAOd,EAAA,CAC/C,GAAAuI,GAAAC,EAAAxI,EACAuI,IAAAJ,GAAA7E,EAAAT,KAAA0F,GAEA,MAAAjF,GA3DA,IAAAJ,UAAAC,SACA+E,EAAAE,EAAA5B,MACA2B,EAAA,KAOA,QAJAK,GAAA,GAAAN,GAAAH,EAAA,GAAAe,KAAAC,IAAA,EAAAD,KAAAE,KAAAF,KAAAG,IAAAlB,GAAAe,KAAAI,OACAR,EAAA,GAAAN,GAAAL,GACAO,EAAAP,EAAA,EAEA/H,EAAA,EAAiBA,EAAA+H,IAAU/H,EAC3BwI,EAAAxI,GAAAmI,CAoDA,QACAE,MACAO,WACA/H,MACAyC,UNiXM,SAAUvD,EAAQmF,EAAqBvF,GAE7C,YOtbA,SAAAwJ,GAAAC,GACA,GAAAjC,GAAAiC,EAAA,GAAAC,EAAAD,EAAA,GAAAhJ,EAAAgJ,EAAA,EACA,OAAAN,MAAAQ,KAAAnC,EAAA,GAAA/G,EAAA,KAAAiJ,EAAA,GAAAlC,EAAA,KAAAA,EAAA,GAAAkC,EAAA,KAAAjJ,EAAA,GAAA+G,EAAA,OAGA,QAAAoC,GAAA9B,GAEA,IADA,GAAAN,GAAAnH,GAAA,EAAAc,EAAA2G,EAAAtE,OAAAkG,EAAA5B,EAAA3G,EAAA,GAAA0I,EAAA,IACAxJ,EAAAc,GAAAqG,EAAAkC,IAAA5B,EAAAzH,GAAAwJ,GAAArC,EAAA,GAAAkC,EAAA,GAAAlC,EAAA,GAAAkC,EAAA,EACA,OAAAP,MAAAQ,IAAAE,GAAA,EP+aiCtE,EAAuB,EAAIiE,EAC3BjE,EAAuB,EAAIqE,GAetD,SAAUxJ,EAAQD,GQvcxBC,EAAAD,QAAA2J,QR6cM,SAAU1J,EAAQD,EAASH,GAEjC,YStbA,SAAA+J,GAAAC,EAAAC,GACA,KAAA7G,eAAA2G,IACA,UAAAA,GAAAC,EAAAC,EAOA,IAJAA,OAAAC,KACAD,EAAA,MAGAA,SAAAE,IACA,SAAAnB,OAAA,kBAAAiB,EAGA,IAAA5J,GACA+J,CAEA,IAAAJ,EAIE,GAAAA,YAAAD,GACF3G,KAAA6G,MAAAD,EAAAC,MACA7G,KAAAiH,MAAAL,EAAAK,MAAAvI,QACAsB,KAAAkH,OAAAN,EAAAM,WACE,oBAAAN,GAAA,CACF,GAAA7E,GAAAoF,EAAArJ,IAAA8I,EACA,WAAA7E,EACA,SAAA6D,OAAA,sCAAAgB,EAGA5G,MAAA6G,MAAA9E,EAAA8E,MACAG,EAAAD,EAAA/G,KAAA6G,OAAAG,SACAhH,KAAAiH,MAAAlF,EAAA1B,MAAA3B,MAAA,EAAAsI,GACAhH,KAAAkH,OAAA,gBAAAnF,GAAA1B,MAAA2G,GAAAjF,EAAA1B,MAAA2G,GAAA,MACE,IAAAJ,EAAAxG,OAAA,CACFJ,KAAA6G,SAAA,MACAG,EAAAD,EAAA/G,KAAA6G,OAAAG,QACA,IAAAI,GAAAC,EAAAlK,KAAAyJ,EAAA,EAAAI,EACAhH,MAAAiH,MAAAK,EAAAF,EAAAJ,GACAhH,KAAAkH,OAAA,gBAAAN,GAAAI,GAAAJ,EAAAI,GAAA,MACE,oBAAAJ,GAEFA,GAAA,SACA5G,KAAA6G,MAAA,MACA7G,KAAAiH,OACAL,GAAA,OACAA,GAAA,MACA,IAAAA,GAEA5G,KAAAkH,OAAA,MACE,CACFlH,KAAAkH,OAAA,CAEA,IAAA3G,GAAA7C,OAAA6C,KAAAqG,EACA,UAAAA,KACArG,EAAAgH,OAAAhH,EAAAiH,QAAA,YACAxH,KAAAkH,OAAA,gBAAAN,GAAAa,MAAAb,EAAAa,MAAA,EAGA,IAAAC,GAAAnH,EAAAoH,OAAAC,KAAA,GACA,MAAAF,IAAAG,IACA,SAAAjC,OAAA,sCAAAkC,KAAAC,UAAAnB,GAGA5G,MAAA6G,MAAAgB,EAAAH,EAEA,IAAAM,GAAAjB,EAAA/G,KAAA6G,OAAAmB,OACAf,IACA,KAAAhK,EAAA,EAAaA,EAAA+K,EAAA5H,OAAmBnD,IAChCgK,EAAAnH,KAAA8G,EAAAoB,EAAA/K,IAGA+C,MAAAiH,MAAAK,EAAAL,OAvDAjH,MAAA6G,MAAA,MACA7G,KAAAiH,OAAA,OACAjH,KAAAkH,OAAA,CAyDA,IAAAe,EAAAjI,KAAA6G,OAEA,IADAG,EAAAD,EAAA/G,KAAA6G,OAAAG,SACA/J,EAAA,EAAaA,EAAA+J,EAAc/J,IAAA,CAC3B,GAAAiL,GAAAD,EAAAjI,KAAA6G,OAAA5J,EACAiL,KACAlI,KAAAiH,MAAAhK,GAAAiL,EAAAlI,KAAAiH,MAAAhK,KAKA+C,KAAAkH,OAAAnB,KAAAC,IAAA,EAAAD,KAAAoC,IAAA,EAAAnI,KAAAkH,SAEAxJ,OAAA0K,QACA1K,OAAA0K,OAAApI,MA+SA,QAAAqI,GAAAC,EAAAC,GACA,MAAAC,QAAAF,EAAAG,QAAAF,IAGA,QAAAG,GAAAH,GACA,gBAAAD,GACA,MAAAD,GAAAC,EAAAC,IAIA,QAAAI,GAAA9B,EAAA+B,EAAAC,GASA,MARAhC,GAAApD,MAAAqF,QAAAjC,SAEAA,EAAAnH,QAAA,SAAAtC,IACA6K,EAAA7K,KAAA6K,EAAA7K,QAAAwL,GAAAC,IAGAhC,IAAA,GAEA,SAAAkC,GACA,GAAAhH,EAEA,OAAA5B,WAAAC,QACAyI,IACAE,EAAAF,EAAAE,IAGAhH,EAAA/B,KAAA6G,KACA9E,EAAAkF,MAAA2B,GAAAG,EACAhH,IAGAA,EAAA/B,KAAA6G,KAAAI,MAAA2B,GACAC,IACA9G,EAAA8G,EAAA9G,IAGAA,IAIA,QAAAiH,GAAAhD,GACA,gBAAAiD,GACA,MAAAlD,MAAAC,IAAA,EAAAD,KAAAoC,IAAAnC,EAAAiD,KAIA,QAAAC,GAAAH,GACA,MAAAtF,OAAAqF,QAAAC,SAGA,QAAAzB,GAAA6B,EAAA/I,GACA,OAAAnD,GAAA,EAAgBA,EAAAmD,EAAYnD,IAC5B,gBAAAkM,GAAAlM,KACAkM,EAAAlM,GAAA,EAIA,OAAAkM,GAzdA,GAAAhC,GAAAvK,EAAA,IACAmK,EAAAnK,EAAA,IAEAyK,KAAA3I,MAEAoI,GAEA,UAGA,OAGA,OAGAe,IACAnK,QAAA6C,KAAAwG,GAAArH,QAAA,SAAAmH,GACAgB,EAAAR,EAAAlK,KAAA4J,EAAAF,GAAAmB,QAAAL,OAAAC,KAAA,KAAAf,GAGA,IAAAoB,KA+FAtB,GAAAxI,WACAiL,SAAA,WACA,MAAApJ,MAAAqJ,UAGAC,OAAA,WACA,MAAAtJ,WAAA6G,UAGAwC,OAAA,SAAAd,GACA,GAAAgB,GAAAvJ,KAAA6G,QAAAM,GAAAqC,GAAAxJ,UAAAyJ,KACAF,KAAAG,MAAA,gBAAAnB,KAAA,EACA,IAAAoB,GAAA,IAAAJ,EAAArC,OAAAqC,EAAAtC,MAAAsC,EAAAtC,MAAA2C,OAAA5J,KAAAkH,OACA,OAAAC,GAAAqC,GAAAD,EAAA1C,OAAA8C,IAGAE,cAAA,SAAAtB,GACA,GAAAgB,GAAAvJ,KAAAyJ,MAAAC,MAAA,gBAAAnB,KAAA,GACAoB,EAAA,IAAAJ,EAAArC,OAAAqC,EAAAtC,MAAAsC,EAAAtC,MAAA2C,OAAA5J,KAAAkH,OACA,OAAAC,GAAAqC,GAAAC,IAAAK,QAAAH,IAGAI,MAAA,WACA,WAAA/J,KAAAkH,OAAAlH,KAAAiH,MAAAvI,QAAAsB,KAAAiH,MAAA2C,OAAA5J,KAAAkH,SAGAjJ,OAAA,WAKA,OAJA8D,MACAiF,EAAAD,EAAA/G,KAAA6G,OAAAG,SACAgB,EAAAjB,EAAA/G,KAAA6G,OAAAmB,OAEA/K,EAAA,EAAiBA,EAAA+J,EAAc/J,IAC/B8E,EAAAiG,EAAA/K,IAAA+C,KAAAiH,MAAAhK,EAOA,OAJA,KAAA+C,KAAAkH,SACAnF,EAAA0F,MAAAzH,KAAAkH,QAGAnF,GAGAiI,UAAA,WACA,GAAAP,GAAAzJ,KAAAyJ,MAAAxC,KASA,OARAwC,GAAA,QACAA,EAAA,QACAA,EAAA,QAEA,IAAAzJ,KAAAkH,QACAuC,EAAA3J,KAAAE,KAAAkH,QAGAuC,GAGAQ,WAAA,WACA,GAAAR,GAAAzJ,KAAAyJ,MAAAxL,QASA,OARAwL,GAAAS,GAAA,IACAT,EAAAU,GAAA,IACAV,EAAAnD,GAAA,IAEA,IAAAtG,KAAAkH,SACAuC,EAAAhC,MAAAzH,KAAAkH,QAGAuC,GAGAC,MAAA,SAAAnB,GAEA,MADAA,GAAAxC,KAAAC,IAAAuC,GAAA,KACA,GAAA5B,GAAA3G,KAAAiH,MAAAzG,IAAAkI,EAAAH,IAAAqB,OAAA5J,KAAAkH,QAAAlH,KAAA6G,QAGAY,MAAA,SAAAsB,GACA,MAAA5I,WAAAC,OACA,GAAAuG,GAAA3G,KAAAiH,MAAA2C,OAAA7D,KAAAC,IAAA,EAAAD,KAAAoC,IAAA,EAAAY,KAAA/I,KAAA6G,OAGA7G,KAAAkH,QAIAkD,IAAAzB,EAAA,QAAAK,EAAA,MACAqB,MAAA1B,EAAA,QAAAK,EAAA,MACAsB,KAAA3B,EAAA,QAAAK,EAAA,MAEAuB,IAAA5B,GAAA,0CAAAI,GAAqE,OAAAA,EAAA,eAErEyB,YAAA7B,EAAA,QAAAK,EAAA,MACAyB,UAAA9B,EAAA,QAAAK,EAAA,MAEA0B,YAAA/B,EAAA,QAAAK,EAAA,MACA3I,MAAAsI,EAAA,QAAAK,EAAA,MAEA2B,OAAAhC,EAAA,QAAAK,EAAA,MACA4B,KAAAjC,EAAA,QAAAK,EAAA,MAEA6B,MAAAlC,EAAA,QAAAK,EAAA,MACA8B,OAAAnC,EAAA,QAAAK,EAAA,MAEA+B,KAAApC,EAAA,SAAAK,EAAA,MACAgC,QAAArC,EAAA,SAAAK,EAAA,MACAiC,OAAAtC,EAAA,SAAAK,EAAA,MACAkC,MAAAvC,EAAA,SAAAK,EAAA,MAEAmC,EAAAxC,EAAA,QAAAK,EAAA,MACAoC,EAAAzC,EAAA,QAAAK,EAAA,MACAqC,EAAA1C,EAAA,QAAAK,EAAA,MAEA9L,EAAAyL,EAAA,QAAAK,EAAA,MACA5E,EAAAuE,EAAA,SACArC,EAAAqC,EAAA,SAEA2C,QAAA,SAAAvC,GACA,MAAA5I,WAAAC,OACA,GAAAuG,GAAAoC,GAGAhC,EAAA/G,KAAA6G,OAAAyE,QAAAtL,KAAAiH,QAGAsE,IAAA,SAAAxC,GACA,MAAA5I,WAAAC,OACA,GAAAuG,GAAAoC,GAGA5B,EAAAqC,GAAA+B,IAAAvL,KAAAyJ,MAAAC,QAAAzC,QAGAuE,UAAA,WACA,GAAA/B,GAAAzJ,KAAAyJ,MAAAxC,KACA,YAAAwC,EAAA,aAAAA,EAAA,WAAAA,EAAA,IAGAgC,WAAA,WAKA,OAHAhC,GAAAzJ,KAAAyJ,MAAAxC,MAEAyE,KACAzO,EAAA,EAAiBA,EAAAwM,EAAArJ,OAAgBnD,IAAA,CACjC,GAAA0O,GAAAlC,EAAAxM,GAAA,GACAyO,GAAAzO,GAAA0O,GAAA,OAAAA,EAAA,MAAA5F,KAAA6F,KAAAD,EAAA,iBAGA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAGAG,SAAA,SAAAC,GAEA,GAAAC,GAAA/L,KAAAyL,aACAO,EAAAF,EAAAL,YAEA,OAAAM,GAAAC,GACAD,EAAA,MAAAC,EAAA,MAGAA,EAAA,MAAAD,EAAA,MAGAE,MAAA,SAAAH,GACA,GAAAI,GAAAlM,KAAA6L,SAAAC,EACA,OAAAI,IAAA,IACA,MAGAA,GAAA,aAGAC,OAAA,WAEA,GAAA1C,GAAAzJ,KAAAyJ,MAAAxC,KAEA,QADA,IAAAwC,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,KAGA2C,QAAA,WACA,OAAApM,KAAAmM,UAGAE,OAAA,WAEA,OADA5C,GAAAzJ,KAAAyJ,MACAxM,EAAA,EAAiBA,EAAA,EAAOA,IACxBwM,EAAAxC,MAAAhK,GAAA,IAAAwM,EAAAxC,MAAAhK,EAEA,OAAAwM,IAGA6C,QAAA,SAAAC,GACA,GAAAC,GAAAxM,KAAAwM,KAEA,OADAA,GAAAvF,MAAA,IAAAuF,EAAAvF,MAAA,GAAAsF,EACAC,GAGAC,OAAA,SAAAF,GACA,GAAAC,GAAAxM,KAAAwM,KAEA,OADAA,GAAAvF,MAAA,IAAAuF,EAAAvF,MAAA,GAAAsF,EACAC,GAGAE,SAAA,SAAAH,GACA,GAAAC,GAAAxM,KAAAwM,KAEA,OADAA,GAAAvF,MAAA,IAAAuF,EAAAvF,MAAA,GAAAsF,EACAC,GAGAG,WAAA,SAAAJ,GACA,GAAAC,GAAAxM,KAAAwM,KAEA,OADAA,GAAAvF,MAAA,IAAAuF,EAAAvF,MAAA,GAAAsF,EACAC,GAGAI,OAAA,SAAAL,GACA,GAAAM,GAAA7M,KAAA6M,KAEA,OADAA,GAAA5F,MAAA,IAAA4F,EAAA5F,MAAA,GAAAsF,EACAM,GAGAC,QAAA,SAAAP,GACA,GAAAM,GAAA7M,KAAA6M,KAEA,OADAA,GAAA5F,MAAA,IAAA4F,EAAA5F,MAAA,GAAAsF,EACAM,GAGAE,UAAA,WAEA,GAAAtD,GAAAzJ,KAAAyJ,MAAAxC,MACA8B,EAAA,GAAAU,EAAA,OAAAA,EAAA,OAAAA,EAAA,EACA,OAAA9C,GAAA8C,IAAAV,QAGAiE,KAAA,SAAAT,GACA,MAAAvM,MAAAyH,MAAAzH,KAAAkH,OAAAlH,KAAAkH,OAAAqF,IAGAU,QAAA,SAAAV,GACA,MAAAvM,MAAAyH,MAAAzH,KAAAkH,OAAAlH,KAAAkH,OAAAqF,IAGAW,OAAA,SAAAC,GACA,GAAAX,GAAAxM,KAAAwM,MACAjC,EAAAiC,EAAAvF,MAAA,EAIA,OAHAsD,MAAA4C,GAAA,IACA5C,IAAA,MAAAA,IACAiC,EAAAvF,MAAA,GAAAsD,EACAiC,GAGAY,IAAA,SAAAC,EAAAC,GAGA,GAAAC,GAAAF,EAAA5D,MACAqC,EAAA9L,KAAAyJ,MACApL,MAAAuD,KAAA0L,EAAA,GAAAA,EAEAE,EAAA,EAAAnP,EAAA,EACA+F,EAAAmJ,EAAA9F,QAAAqE,EAAArE,QAEAgG,IAAAD,EAAApJ,IAAA,EAAAoJ,KAAApJ,IAAA,EAAAoJ,EAAApJ,IAAA,KACAsJ,EAAA,EAAAD,CAEA,OAAA9G,GAAA8C,IACAgE,EAAAF,EAAAnD,MAAAsD,EAAA5B,EAAA1B,MACAqD,EAAAF,EAAAlD,QAAAqD,EAAA5B,EAAAzB,QACAoD,EAAAF,EAAAjD,OAAAoD,EAAA5B,EAAAxB,OACAiD,EAAA9F,QAAApJ,EAAAyN,EAAArE,SAAA,EAAApJ,MAKAX,OAAA6C,KAAAwG,GAAArH,QAAA,SAAAmH,GACA,QAAAC,EAAAU,QAAAX,GAAA,CAIA,GAAAG,GAAAD,EAAAF,GAAAG,QAGAL,GAAAxI,UAAA0I,GAAA,WACA,GAAA7G,KAAA6G,UACA,UAAAF,GAAA3G,KAGA,IAAAG,UAAAC,OACA,UAAAuG,GAAAxG,UAAA0G,EAGA,IAAA8G,GAAA,gBAAAxN,WAAA6G,KAAAhH,KAAAkH,MACA,WAAAP,GAAAuC,EAAAnC,EAAA/G,KAAA6G,UAAA+G,IAAA5N,KAAAiH,QAAA2C,OAAA+D,GAAA9G,IAIAF,EAAAE,GAAA,SAAAI,GAIA,MAHA,gBAAAA,KACAA,EAAAK,EAAAD,EAAAlK,KAAAgD,WAAA6G,IAEA,GAAAL,GAAAM,EAAAJ,OAiEA7J,EAAAD,QAAA4J,GTqdM,SAAU3J,EAAQD,EAASH,GAEjC,YUn7BAI,GAAAD,SACA8Q,WAAA,aACAC,cAAA,aACAC,MAAA,WACAC,YAAA,aACAC,OAAA,aACAC,OAAA,aACAC,QAAA,aACAjD,OAAA,OACAkD,gBAAA,aACA9D,MAAA,SACA+D,YAAA,YACAC,OAAA,WACAC,WAAA,aACAC,WAAA,YACAC,YAAA,WACAC,WAAA,YACAC,OAAA,YACAC,gBAAA,aACAC,UAAA,aACAC,SAAA,WACA/D,MAAA,WACAgE,UAAA,SACAC,UAAA,WACAC,eAAA,YACAC,UAAA,aACAC,WAAA,SACAC,UAAA,aACAC,WAAA,aACAC,aAAA,WACAC,gBAAA,WACAC,YAAA,WACAC,YAAA,YACAC,SAAA,SACAC,YAAA,aACAC,cAAA,aACAC,eAAA,WACAC,eAAA,UACAC,eAAA,UACAC,eAAA,WACAC,YAAA,WACAC,UAAA,YACAC,aAAA,WACAC,SAAA,aACAC,SAAA,aACAC,YAAA,YACAC,WAAA,WACAC,aAAA,aACAC,aAAA,WACAC,SAAA,WACAC,WAAA,aACAC,YAAA,aACAC,MAAA,WACAC,WAAA,YACAlG,MAAA,aACAP,OAAA,SACA0G,aAAA,YACAC,MAAA,aACAC,UAAA,aACAC,SAAA,aACAC,WAAA,WACAC,QAAA,UACAC,OAAA,aACAC,OAAA,aACAC,UAAA,aACAC,eAAA,aACAC,WAAA,WACAC,cAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,sBAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,WAAA,aACAC,aAAA,aACAC,eAAA,YACAC,cAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,aACAC,MAAA,SACAC,WAAA,WACAC,OAAA,aACA5H,SAAA,WACA6H,QAAA,SACAC,kBAAA,aACAC,YAAA,SACAC,cAAA,YACAC,cAAA,aACAC,gBAAA,YACAC,iBAAA,aACAC,mBAAA,WACAC,iBAAA,YACAC,iBAAA,YACAC,cAAA,WACAC,WAAA,aACAC,WAAA,aACAC,UAAA,aACAC,aAAA,aACAC,MAAA,SACAC,SAAA,aACAC,OAAA,WACAC,WAAA,YACAC,QAAA,WACAC,WAAA,UACAC,QAAA,aACAC,eAAA,aACAC,WAAA,aACAC,eAAA,aACAC,eAAA,aACAC,YAAA,aACAC,WAAA,aACAC,MAAA,YACAC,MAAA,aACAC,MAAA,aACAC,YAAA,aACAC,QAAA,WACAC,eAAA,YACA1K,KAAA,SACA2K,WAAA,aACAC,WAAA,YACAC,aAAA,WACAC,QAAA,aACAC,YAAA,YACAC,UAAA,WACAC,UAAA,aACAC,QAAA,WACAC,QAAA,aACAC,SAAA,aACAC,WAAA,YACAC,WAAA,aACAC,WAAA,aACAC,MAAA,aACAC,aAAA,WACAC,WAAA,YACAC,KAAA,aACAC,MAAA,WACAC,SAAA,aACAC,QAAA,WACAC,WAAA,YACAC,QAAA,aACAC,OAAA,aACAxL,OAAA,aACAyL,YAAA,aACArL,QAAA,WACAsL,aAAA,cV47BM,SAAUvZ,EAAQD,EAASH,GW56BjC,QAAA4Z,GAAArL,EAAAC,GACA,MACArF,MAAA6F,IAAAT,EAAA,GAAAC,EAAA,MACArF,KAAA6F,IAAAT,EAAA,GAAAC,EAAA,MACArF,KAAA6F,IAAAT,EAAA,GAAAC,EAAA,MAzKA,GAAAqL,GAAA7Z,EAAA,GAMA8Z,IACA,QAAA9V,KAAA6V,GACAA,EAAArY,eAAAwC,KACA8V,EAAAD,EAAA7V,MAIA,IAAAmG,GAAA/J,EAAAD,SACA0M,KAAOzC,SAAA,EAAAgB,OAAA,OACPwE,KAAOxF,SAAA,EAAAgB,OAAA,OACP2O,KAAO3P,SAAA,EAAAgB,OAAA,OACP6E,KAAO7F,SAAA,EAAAgB,OAAA,OACP4O,MAAQ5P,SAAA,EAAAgB,OAAA,QACR6O,KAAO7P,SAAA,EAAAgB,OAAA,OACP8O,KAAO9P,SAAA,EAAAgB,OAAA,OACP+O,KAAO/P,SAAA,EAAAgB,OAAA,OACPuD,KAAOvE,SAAA,EAAAgB,QAAA,QACPsD,SAAWtE,SAAA,EAAAgB,QAAA,YACXgP,QAAUhQ,SAAA,EAAAgB,QAAA,WACViP,SAAWjQ,SAAA,EAAAgB,QAAA,YACXkP,KAAOlQ,SAAA,EAAAgB,QAAA,cACPmP,OAASnQ,SAAA,EAAAgB,QAAA,oBACT4C,MAAQ5D,SAAA,EAAAgB,QAAA,SAIR,QAAAnB,KAAAE,GACA,GAAAA,EAAA3I,eAAAyI,GAAA,CACA,iBAAAE,GAAAF,IACA,SAAAjB,OAAA,8BAAAiB,EAGA,gBAAAE,GAAAF,IACA,SAAAjB,OAAA,oCAAAiB,EAGA,IAAAE,EAAAF,GAAAmB,OAAA5H,SAAA2G,EAAAF,GAAAG,SACA,SAAApB,OAAA,sCAAAiB,EAGA,IAAAG,GAAAD,EAAAF,GAAAG,SACAgB,EAAAjB,EAAAF,GAAAmB,aACAjB,GAAAF,GAAAG,eACAD,GAAAF,GAAAmB,OACAtK,OAAAC,eAAAoJ,EAAAF,GAAA,YAAqDxG,MAAA2G,IACrDtJ,OAAAC,eAAAoJ,EAAAF,GAAA,UAAmDxG,MAAA2H,IAInDjB,EAAA0C,IAAA+C,IAAA,SAAA/C,GACA,GAMA2N,GACA9Y,EACApB,EARAgN,EAAAT,EAAA,OACAU,EAAAV,EAAA,OACAnD,EAAAmD,EAAA,OACAtB,EAAApC,KAAAoC,IAAA+B,EAAAC,EAAA7D,GACAN,EAAAD,KAAAC,IAAAkE,EAAAC,EAAA7D,GACA+Q,EAAArR,EAAAmC,CA+BA,OA1BAnC,KAAAmC,EACAiP,EAAA,EACElN,IAAAlE,EACFoR,GAAAjN,EAAA7D,GAAA+Q,EACElN,IAAAnE,EACFoR,EAAA,GAAA9Q,EAAA4D,GAAAmN,EACE/Q,IAAAN,IACFoR,EAAA,GAAAlN,EAAAC,GAAAkN,GAGAD,EAAArR,KAAAoC,IAAA,GAAAiP,EAAA,KAEAA,EAAA,IACAA,GAAA,KAGAla,GAAAiL,EAAAnC,GAAA,EAGA1H,EADA0H,IAAAmC,EACA,EACEjL,GAAA,GACFma,GAAArR,EAAAmC,GAEAkP,GAAA,EAAArR,EAAAmC,IAGAiP,EAAA,IAAA9Y,EAAA,IAAApB,IAGA6J,EAAA0C,IAAAkN,IAAA,SAAAlN,GACA,GAMA2N,GACA9Y,EACA2K,EARAiB,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAnD,EAAAmD,EAAA,GACAtB,EAAApC,KAAAoC,IAAA+B,EAAAC,EAAA7D,GACAN,EAAAD,KAAAC,IAAAkE,EAAAC,EAAA7D,GACA+Q,EAAArR,EAAAmC,CA6BA,OAvBA7J,GADA,IAAA0H,EACA,EAEAqR,EAAArR,EAAA,OAGAA,IAAAmC,EACAiP,EAAA,EACElN,IAAAlE,EACFoR,GAAAjN,EAAA7D,GAAA+Q,EACElN,IAAAnE,EACFoR,EAAA,GAAA9Q,EAAA4D,GAAAmN,EACE/Q,IAAAN,IACFoR,EAAA,GAAAlN,EAAAC,GAAAkN,GAGAD,EAAArR,KAAAoC,IAAA,GAAAiP,EAAA,KAEAA,EAAA,IACAA,GAAA,KAGAnO,EAAAjD,EAAA,YAEAoR,EAAA9Y,EAAA2K,IAGAlC,EAAA0C,IAAAoD,IAAA,SAAApD,GACA,GAAAS,GAAAT,EAAA,GACAU,EAAAV,EAAA,GACAnD,EAAAmD,EAAA,GACA2N,EAAArQ,EAAA0C,IAAA+C,IAAA/C,GAAA,GACA+D,EAAA,MAAAzH,KAAAoC,IAAA+B,EAAAnE,KAAAoC,IAAAgC,EAAA7D,GAIA,OAFAA,GAAA,QAAAP,KAAAC,IAAAkE,EAAAnE,KAAAC,IAAAmE,EAAA7D,KAEA8Q,EAAA,IAAA5J,EAAA,IAAAlH,IAGAS,EAAA0C,IAAAmN,KAAA,SAAAnN,GACA,GAGApM,GACAD,EACAgO,EACA3K,EANAyJ,EAAAT,EAAA,OACAU,EAAAV,EAAA,OACAnD,EAAAmD,EAAA,MAWA,OALAhJ,GAAAsF,KAAAoC,IAAA,EAAA+B,EAAA,EAAAC,EAAA,EAAA7D,GACAjJ,GAAA,EAAA6M,EAAAzJ,IAAA,EAAAA,IAAA,EACArD,GAAA,EAAA+M,EAAA1J,IAAA,EAAAA,IAAA,EACA2K,GAAA,EAAA9E,EAAA7F,IAAA,EAAAA,IAAA,GAEA,IAAApD,EAAA,IAAAD,EAAA,IAAAgO,EAAA,IAAA3K,IAcAsG,EAAA0C,IAAA6B,QAAA,SAAA7B,GACA,GAAA6N,GAAAZ,EAAAjN,EACA,IAAA6N,EACA,MAAAA,EAGA,IACAC,GADAC,EAAAC,GAGA,QAAAnM,KAAAmL,GACA,GAAAA,EAAArY,eAAAkN,GAAA,CACA,GAAAjL,GAAAoW,EAAAnL,GAGAoM,EAAAlB,EAAA/M,EAAApJ,EAGAqX,GAAAF,IACAA,EAAAE,EACAH,EAAAjM,GAKA,MAAAiM,IAGAxQ,EAAAuE,QAAA7B,IAAA,SAAA6B,GACA,MAAAmL,GAAAnL,IAGAvE,EAAA0C,IAAAoN,IAAA,SAAApN,GACA,GAAAS,GAAAT,EAAA,OACAU,EAAAV,EAAA,OACAnD,EAAAmD,EAAA,MAWA,OARAS,KAAA,OAAAnE,KAAA6F,KAAA1B,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAApE,KAAA6F,KAAAzB,EAAA,iBAAAA,EAAA,MACA7D,IAAA,OAAAP,KAAA6F,KAAAtF,EAAA,iBAAAA,EAAA,OAMA,KAJA,MAAA4D,EAAA,MAAAC,EAAA,MAAA7D,GAIA,KAHA,MAAA4D,EAAA,MAAAC,EAAA,MAAA7D,GAGA,KAFA,MAAA4D,EAAA,MAAAC,EAAA,MAAA7D,KAKAS,EAAA0C,IAAAqN,IAAA,SAAArN,GACA,GAIAvM,GACAkH,EACAkC,EANAuQ,EAAA9P,EAAA0C,IAAAoN,IAAApN,GACA0B,EAAA0L,EAAA,GACAzL,EAAAyL,EAAA,GACAxL,EAAAwL,EAAA,EAiBA,OAZA1L,IAAA,OACAC,GAAA,IACAC,GAAA,QAEAF,IAAA,QAAApF,KAAA6F,IAAAT,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAArF,KAAA6F,IAAAR,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAtF,KAAA6F,IAAAP,EAAA,WAAAA,EAAA,OAEAnO,EAAA,IAAAkO,EAAA,GACAhH,EAAA,KAAA+G,EAAAC,GACA9E,EAAA,KAAA8E,EAAAC,IAEAnO,EAAAkH,EAAAkC,IAGAS,EAAAyF,IAAA/C,IAAA,SAAA+C,GACA,GAGAmL,GACAC,EACAC,EACApO,EACAV,EAPAqO,EAAA5K,EAAA,OACAlO,EAAAkO,EAAA,OACAtP,EAAAsP,EAAA,MAOA,QAAAlO,EAEA,MADAyK,GAAA,IAAA7L,GACA6L,MAIA6O,GADA1a,EAAA,GACAA,GAAA,EAAAoB,GAEApB,EAAAoB,EAAApB,EAAAoB,EAGAqZ,EAAA,EAAAza,EAAA0a,EAEAnO,GAAA,MACA,QAAAxM,GAAA,EAAgBA,EAAA,EAAOA,IACvB4a,EAAAT,EAAA,MAAAna,EAAA,GACA4a,EAAA,GACAA,IAEAA,EAAA,GACAA,IAIA9O,EADA,EAAA8O,EAAA,EACAF,EAAA,GAAAC,EAAAD,GAAAE,EACG,EAAAA,EAAA,EACHD,EACG,EAAAC,EAAA,EACHF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAEAF,EAGAlO,EAAAxM,GAAA,IAAA8L,CAGA,OAAAU,IAGA1C,EAAAyF,IAAAmK,IAAA,SAAAnK,GACA,GAKAsL,GACA7O,EANAmO,EAAA5K,EAAA,GACAlO,EAAAkO,EAAA,OACAtP,EAAAsP,EAAA,OACAuL,EAAAzZ,EACA0Z,EAAAjS,KAAAC,IAAA9I,EAAA,IAUA,OANAA,IAAA,EACAoB,GAAApB,GAAA,EAAAA,EAAA,EAAAA,EACA6a,GAAAC,GAAA,EAAAA,EAAA,EAAAA,EACA/O,GAAA/L,EAAAoB,GAAA,EACAwZ,EAAA,IAAA5a,EAAA,EAAA6a,GAAAC,EAAAD,GAAA,EAAAzZ,GAAApB,EAAAoB,IAEA8Y,EAAA,IAAAU,EAAA,IAAA7O,IAGAlC,EAAA4P,IAAAlN,IAAA,SAAAkN,GACA,GAAAS,GAAAT,EAAA,MACArY,EAAAqY,EAAA,OACA1N,EAAA0N,EAAA,OACAsB,EAAAlS,KAAAmS,MAAAd,GAAA,EAEAe,EAAAf,EAAArR,KAAAmS,MAAAd,GACA/Y,EAAA,IAAA4K,GAAA,EAAA3K,GACA8Z,EAAA,IAAAnP,GAAA,EAAA3K,EAAA6Z,GACAjY,EAAA,IAAA+I,GAAA,EAAA3K,GAAA,EAAA6Z,GAGA,QAFAlP,GAAA,IAEAgP,GACA,OACA,OAAAhP,EAAA/I,EAAA7B,EACA,QACA,OAAA+Z,EAAAnP,EAAA5K,EACA,QACA,OAAAA,EAAA4K,EAAA/I,EACA,QACA,OAAA7B,EAAA+Z,EAAAnP,EACA,QACA,OAAA/I,EAAA7B,EAAA4K,EACA,QACA,OAAAA,EAAA5K,EAAA+Z,KAIArR,EAAA4P,IAAAnK,IAAA,SAAAmK,GACA,GAIAqB,GACAK,EACAnb,EANAka,EAAAT,EAAA,GACArY,EAAAqY,EAAA,OACA1N,EAAA0N,EAAA,OACA2B,EAAAvS,KAAAC,IAAAiD,EAAA,IAYA,OAPA/L,IAAA,EAAAoB,GAAA2K,EACA+O,GAAA,EAAA1Z,GAAAga,EACAD,EAAA/Z,EAAAga,EACAD,GAAAL,GAAA,EAAAA,EAAA,EAAAA,EACAK,KAAA,EACAnb,GAAA,GAEAka,EAAA,IAAAiB,EAAA,IAAAnb,IAIA6J,EAAA8F,IAAApD,IAAA,SAAAoD,GACA,GAIA5P,GACAgM,EACAkP,EACApa,EAPAqZ,EAAAvK,EAAA,OACA0L,EAAA1L,EAAA,OACA2L,EAAA3L,EAAA,OACAN,EAAAgM,EAAAC,CAOAjM,GAAA,IACAgM,GAAAhM,EACAiM,GAAAjM,GAGAtP,EAAA8I,KAAAmS,MAAA,EAAAd,GACAnO,EAAA,EAAAuP,EACAL,EAAA,EAAAf,EAAAna,EAEA,MAAAA,KACAkb,EAAA,EAAAA,GAGApa,EAAAwa,EAAAJ,GAAAlP,EAAAsP,EAEA,IAAArO,GACAC,EACA7D,CACA,QAAArJ,GACA,QACA,OACA,OAAAiN,EAAAjB,EAAgBkB,EAAApM,EAAOuI,EAAAiS,CAAQ,MAC/B,QAAArO,EAAAnM,EAAgBoM,EAAAlB,EAAO3C,EAAAiS,CAAQ,MAC/B,QAAArO,EAAAqO,EAAiBpO,EAAAlB,EAAO3C,EAAAvI,CAAO,MAC/B,QAAAmM,EAAAqO,EAAiBpO,EAAApM,EAAOuI,EAAA2C,CAAO,MAC/B,QAAAiB,EAAAnM,EAAgBoM,EAAAoO,EAAQjS,EAAA2C,CAAO,MAC/B,QAAAiB,EAAAjB,EAAgBkB,EAAAoO,EAAQjS,EAAAvI,EAGxB,WAAAmM,EAAA,IAAAC,EAAA,IAAA7D,IAGAS,EAAA6P,KAAAnN,IAAA,SAAAmN,GACA,GAIA1M,GACAC,EACA7D,EANAjJ,EAAAuZ,EAAA,OACAxZ,EAAAwZ,EAAA,OACAxL,EAAAwL,EAAA,OACAnW,EAAAmW,EAAA,MASA,OAJA1M,GAAA,EAAAnE,KAAAoC,IAAA,EAAA9K,GAAA,EAAAoD,MACA0J,EAAA,EAAApE,KAAAoC,IAAA,EAAA/K,GAAA,EAAAqD,MACA6F,EAAA,EAAAP,KAAAoC,IAAA,EAAAiD,GAAA,EAAA3K,OAEA,IAAAyJ,EAAA,IAAAC,EAAA,IAAA7D,IAGAS,EAAA8P,IAAApN,IAAA,SAAAoN,GACA,GAGA3M,GACAC,EACA7D,EALA6E,EAAA0L,EAAA,OACAzL,EAAAyL,EAAA,OACAxL,EAAAwL,EAAA,MA0BA,OArBA3M,GAAA,OAAAiB,GAAA,OAAAC,GAAA,MAAAC,EACAlB,GAAA,MAAAgB,EAAA,OAAAC,EAAA,MAAAC,EACA/E,EAAA,MAAA6E,GAAA,KAAAC,EAAA,MAAAC,EAGAnB,IAAA,SACA,MAAAnE,KAAA6F,IAAA1B,EAAA,YACA,MAAAA,EAEAC,IAAA,SACA,MAAApE,KAAA6F,IAAAzB,EAAA,YACA,MAAAA,EAEA7D,IAAA,SACA,MAAAP,KAAA6F,IAAAtF,EAAA,YACA,MAAAA,EAEA4D,EAAAnE,KAAAoC,IAAApC,KAAAC,IAAA,EAAAkE,GAAA,GACAC,EAAApE,KAAAoC,IAAApC,KAAAC,IAAA,EAAAmE,GAAA,GACA7D,EAAAP,KAAAoC,IAAApC,KAAAC,IAAA,EAAAM,GAAA,IAEA,IAAA4D,EAAA,IAAAC,EAAA,IAAA7D,IAGAS,EAAA8P,IAAAC,IAAA,SAAAD,GACA,GAGA3Z,GACAkH,EACAkC,EALA6E,EAAA0L,EAAA,GACAzL,EAAAyL,EAAA,GACAxL,EAAAwL,EAAA,EAiBA,OAZA1L,IAAA,OACAC,GAAA,IACAC,GAAA,QAEAF,IAAA,QAAApF,KAAA6F,IAAAT,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAArF,KAAA6F,IAAAR,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAtF,KAAA6F,IAAAP,EAAA,WAAAA,EAAA,OAEAnO,EAAA,IAAAkO,EAAA,GACAhH,EAAA,KAAA+G,EAAAC,GACA9E,EAAA,KAAA8E,EAAAC,IAEAnO,EAAAkH,EAAAkC,IAGAS,EAAA+P,IAAAD,IAAA,SAAAC,GACA,GAGA3L,GACAC,EACAC,EALAnO,EAAA4Z,EAAA,GACA1S,EAAA0S,EAAA,GACAxQ,EAAAwQ,EAAA,EAKA1L,IAAAlO,EAAA,QACAiO,EAAA/G,EAAA,IAAAgH,EACAC,EAAAD,EAAA9E,EAAA,GAEA,IAAAmS,GAAA1S,KAAA6F,IAAAR,EAAA,GACAsN,EAAA3S,KAAA6F,IAAAT,EAAA,GACAwN,EAAA5S,KAAA6F,IAAAP,EAAA,EASA,OARAD,GAAAqN,EAAA,QAAAA,GAAArN,EAAA,cACAD,EAAAuN,EAAA,QAAAA,GAAAvN,EAAA,cACAE,EAAAsN,EAAA,QAAAA,GAAAtN,EAAA,cAEAF,GAAA,OACAC,GAAA,IACAC,GAAA,SAEAF,EAAAC,EAAAC,IAGAtE,EAAA+P,IAAAC,IAAA,SAAAD,GACA,GAGA8B,GACAxB,EACA/Z,EALAH,EAAA4Z,EAAA,GACA1S,EAAA0S,EAAA,GACAxQ,EAAAwQ,EAAA,EAcA,OATA8B,GAAA7S,KAAA8S,MAAAvS,EAAAlC,GACAgT,EAAA,IAAAwB,EAAA,EAAA7S,KAAA+S,GAEA1B,EAAA,IACAA,GAAA,KAGA/Z,EAAA0I,KAAAgT,KAAA3U,IAAAkC,MAEApJ,EAAAG,EAAA+Z,IAGArQ,EAAAgQ,IAAAD,IAAA,SAAAC,GACA,GAGA3S,GACAkC,EACAsS,EALA1b,EAAA6Z,EAAA,GACA1Z,EAAA0Z,EAAA,GACAK,EAAAL,EAAA,EASA,OAJA6B,GAAAxB,EAAA,MAAArR,KAAA+S,GACA1U,EAAA/G,EAAA0I,KAAAiT,IAAAJ,GACAtS,EAAAjJ,EAAA0I,KAAAkT,IAAAL,IAEA1b,EAAAkH,EAAAkC,IAGAS,EAAA0C,IAAAuN,OAAA,SAAArN,GACA,GAAAO,GAAAP,EAAA,GACAQ,EAAAR,EAAA,GACArD,EAAAqD,EAAA,GACAtJ,EAAA,IAAAF,qBAAA,GAAA4G,EAAA0C,IAAAkN,IAAAhN,GAAA,EAIA,SAFAtJ,EAAA0F,KAAA2D,MAAArJ,EAAA,KAGA,SAGA,IAAA6Y,GAAA,IACAnT,KAAA2D,MAAApD,EAAA,QACAP,KAAA2D,MAAAS,EAAA,QACApE,KAAA2D,MAAAQ,EAAA,KAMA,OAJA,KAAA7J,IACA6Y,GAAA,IAGAA,GAGAnS,EAAA4P,IAAAK,OAAA,SAAArN,GAGA,MAAA5C,GAAA0C,IAAAuN,OAAAjQ,EAAA4P,IAAAlN,IAAAE,KAAA,KAGA5C,EAAA0C,IAAAwN,QAAA,SAAAtN,GACA,GAAAO,GAAAP,EAAA,GACAQ,EAAAR,EAAA,GACArD,EAAAqD,EAAA,EAIA,OAAAO,KAAAC,OAAA7D,EACA4D,EAAA,EACA,GAGAA,EAAA,IACA,IAGAnE,KAAA2D,OAAAQ,EAAA,eAGA,GACA,GAAAnE,KAAA2D,MAAAQ,EAAA,OACA,EAAAnE,KAAA2D,MAAAS,EAAA,OACApE,KAAA2D,MAAApD,EAAA,QAKAS,EAAAiQ,OAAAvN,IAAA,SAAAE,GACA,GAAA1C,GAAA0C,EAAA,EAGA,QAAA1C,GAAA,IAAAA,EAOA,MANA0C,GAAA,KACA1C,GAAA,KAGAA,IAAA,UAEAA,MAGA,IAAAkS,GAAA,SAAAxP,EAAA,IAKA,SAJA,EAAA1C,GAAAkS,EAAA,KACAlS,GAAA,KAAAkS,EAAA,KACAlS,GAAA,KAAAkS,EAAA,MAKApS,EAAAkQ,QAAAxN,IAAA,SAAAE,GAEA,GAAAA,GAAA,KACA,GAAAtM,GAAA,IAAAsM,EAAA,MACA,QAAAtM,OAGAsM,GAAA,EAEA,IAAAyP,EAKA,QAJArT,KAAAmS,MAAAvO,EAAA,UACA5D,KAAAmS,OAAAkB,EAAAzP,EAAA,aACAyP,EAAA,UAKArS,EAAA0C,IAAA8B,IAAA,SAAA5B,GACA,GAAA0P,KAAA,IAAAtT,KAAA2D,MAAAC,EAAA,YACA,IAAA5D,KAAA2D,MAAAC,EAAA,UACA,IAAA5D,KAAA2D,MAAAC,EAAA,KAEAN,EAAAgQ,EAAAjQ,SAAA,IAAAkQ,aACA,gBAAAC,UAAAlQ,EAAAjJ,QAAAiJ,GAGAtC,EAAAwE,IAAA9B,IAAA,SAAAE,GACA,GAAA6P,GAAA7P,EAAAP,SAAA,IAAAoQ,MAAA,2BACA,KAAAA,EACA,aAGA,IAAArS,GAAAqS,EAAA,EAEA,KAAAA,EAAA,GAAApZ,SACA+G,IAAAsS,MAAA,IAAAjZ,IAAA,SAAAkZ,GACA,MAAAA,OACG9R,KAAA,IAGH,IAAAyR,GAAAM,SAAAxS,EAAA,GAKA,QAJAkS,GAAA,OACAA,GAAA,MACA,IAAAA,IAKAtS,EAAA0C,IAAAyN,IAAA,SAAAzN,GACA,GAMAsD,GACAxC,EAPAL,EAAAT,EAAA,OACAU,EAAAV,EAAA,OACAnD,EAAAmD,EAAA,OACAzD,EAAAD,KAAAC,IAAAD,KAAAC,IAAAkE,EAAAC,GAAA7D,GACA6B,EAAApC,KAAAoC,IAAApC,KAAAoC,IAAA+B,EAAAC,GAAA7D,GACAqE,EAAA3E,EAAAmC,CAyBA,OApBA4E,GADApC,EAAA,EACAxC,GAAA,EAAAwC,GAEA,EAIAJ,EADAI,GAAA,EACA,EAEA3E,IAAAkE,GACAC,EAAA7D,GAAAqE,EAAA,EAEA3E,IAAAmE,EACA,GAAA7D,EAAA4D,GAAAS,EAEA,GAAAT,EAAAC,GAAAQ,EAAA,EAGAJ,GAAA,EACAA,GAAA,GAEA,IAAAA,EAAA,IAAAI,EAAA,IAAAoC,IAGAhG,EAAAyF,IAAA0K,IAAA,SAAA1K,GACA,GAAAlO,GAAAkO,EAAA,OACAtP,EAAAsP,EAAA,OACAnP,EAAA,EACA8a,EAAA,CAYA,OATA9a,GADAH,EAAA,GACA,EAAAoB,EAAApB,EAEA,EAAAoB,GAAA,EAAApB,GAGAG,EAAA,IACA8a,GAAAjb,EAAA,GAAAG,IAAA,EAAAA,KAGAmP,EAAA,OAAAnP,EAAA,IAAA8a,IAGApR,EAAA4P,IAAAO,IAAA,SAAAP,GACA,GAAArY,GAAAqY,EAAA,OACA1N,EAAA0N,EAAA,OAEAtZ,EAAAiB,EAAA2K,EACAkP,EAAA,CAMA,OAJA9a,GAAA,IACA8a,GAAAlP,EAAA5L,IAAA,EAAAA,KAGAsZ,EAAA,OAAAtZ,EAAA,IAAA8a,IAGApR,EAAAmQ,IAAAzN,IAAA,SAAAyN,GACA,GAAAE,GAAAF,EAAA,OACA7Z,EAAA6Z,EAAA,OACA/M,EAAA+M,EAAA,MAEA,QAAA7Z,EACA,WAAA8M,EAAA,IAAAA,EAAA,IAAAA,EAGA,IAAAyP,IAAA,OACA3B,EAAAb,EAAA,IACAnO,EAAAgP,EAAA,EACAzK,EAAA,EAAAvE,EACA4Q,EAAA,CAEA,QAAA9T,KAAAmS,MAAAD,IACA,OACA2B,EAAA,KAAeA,EAAA,GAAA3Q,EAAa2Q,EAAA,IAAa,MACzC,QACAA,EAAA,GAAApM,EAAeoM,EAAA,KAAaA,EAAA,IAAa,MACzC,QACAA,EAAA,KAAeA,EAAA,KAAaA,EAAA,GAAA3Q,CAAa,MACzC,QACA2Q,EAAA,KAAeA,EAAA,GAAApM,EAAaoM,EAAA,IAAa,MACzC,QACAA,EAAA,GAAA3Q,EAAe2Q,EAAA,KAAaA,EAAA,IAAa,MACzC,SACAA,EAAA,KAAeA,EAAA,KAAaA,EAAA,GAAApM,EAK5B,MAFAqM,IAAA,EAAAxc,GAAA8M,GAGA,KAAA9M,EAAAuc,EAAA,GAAAC,GACA,KAAAxc,EAAAuc,EAAA,GAAAC,GACA,KAAAxc,EAAAuc,EAAA,GAAAC,KAIA9S,EAAAmQ,IAAAP,IAAA,SAAAO,GACA,GAAA7Z,GAAA6Z,EAAA,OACA/M,EAAA+M,EAAA,OAEAjO,EAAA5L,EAAA8M,GAAA,EAAA9M,GACA8a,EAAA,CAMA,OAJAlP,GAAA,IACAkP,EAAA9a,EAAA4L,IAGAiO,EAAA,OAAAiB,EAAA,IAAAlP,IAGAlC,EAAAmQ,IAAA1K,IAAA,SAAA0K,GACA,GAAA7Z,GAAA6Z,EAAA,OACA/M,EAAA+M,EAAA,OAEAha,EAAAiN,GAAA,EAAA9M,GAAA,GAAAA,EACAiB,EAAA,CASA,OAPApB,GAAA,GAAAA,EAAA,GACAoB,EAAAjB,GAAA,EAAAH,GAEAA,GAAA,IAAAA,EAAA,IACAoB,EAAAjB,GAAA,KAAAH,MAGAga,EAAA,OAAA5Y,EAAA,IAAApB,IAGA6J,EAAAmQ,IAAArK,IAAA,SAAAqK,GACA,GAAA7Z,GAAA6Z,EAAA,OACA/M,EAAA+M,EAAA,OACAjO,EAAA5L,EAAA8M,GAAA,EAAA9M,EACA,QAAA6Z,EAAA,QAAAjO,EAAA5L,GAAA,OAAA4L,KAGAlC,EAAA8F,IAAAqK,IAAA,SAAArK,GACA,GAAAW,GAAAX,EAAA,OACAvG,EAAAuG,EAAA,OACA5D,EAAA,EAAA3C,EACAjJ,EAAA4L,EAAAuE,EACArD,EAAA,CAMA,OAJA9M,GAAA,IACA8M,GAAAlB,EAAA5L,IAAA,EAAAA,KAGAwP,EAAA,OAAAxP,EAAA,IAAA8M,IAGApD,EAAAoQ,MAAA1N,IAAA,SAAA0N,GACA,OAAAA,EAAA,aAAAA,EAAA,aAAAA,EAAA,eAGApQ,EAAA0C,IAAA0N,MAAA,SAAA1N,GACA,OAAAA,EAAA,aAAAA,EAAA,aAAAA,EAAA,eAGA1C,EAAA6D,KAAAnB,IAAA,SAAAE,GACA,OAAAA,EAAA,WAAAA,EAAA,WAAAA,EAAA,aAGA5C,EAAA6D,KAAA4B,IAAAzF,EAAA6D,KAAA+L,IAAA,SAAAhN,GACA,WAAAA,EAAA,KAGA5C,EAAA6D,KAAAiC,IAAA,SAAAjC,GACA,aAAAA,EAAA,KAGA7D,EAAA6D,KAAAgM,KAAA,SAAAhM,GACA,aAAAA,EAAA,KAGA7D,EAAA6D,KAAAkM,IAAA,SAAAlM,GACA,OAAAA,EAAA,SAGA7D,EAAA6D,KAAAW,IAAA,SAAAX,GACA,GAAA7B,GAAA,IAAAhD,KAAA2D,MAAAkB,EAAA,YACAyO,GAAAtQ,GAAA,KAAAA,GAAA,GAAAA,EAEAM,EAAAgQ,EAAAjQ,SAAA,IAAAkQ,aACA,gBAAAC,UAAAlQ,EAAAjJ,QAAAiJ,GAGAtC,EAAA0C,IAAAmB,KAAA,SAAAnB,GAEA,QADAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACA,WX0lCM,SAAUzM,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIkd,GAA2Cld,EAAoB,EYt7DxFuF,GAAA,WAAAwB,GAIA,QAAAoW,GAAA1b,GACAA,EAAA6B,EAAA7B,GACAA,EAAA,GAAAyE,MAAAzE,EAAA,IACAA,EAAA,GAAA2b,MAAA3b,EAAA,IACAA,EAAA,GAAA0E,MAAA1E,EAAA,IACAA,EAAA,GAAA4b,MAAA5b,EAAA,IAGA,QAAA6b,GAAAzc,GACA,OAAAA,EAAAuG,MACA,yBAAAvG,EAAAoH,WAAAnF,QAAAwa,EAAoE,MACpE,aAAAH,EAAAtc,EAAAmH,YAA6C,MAC7C,kBAAAnH,EAAAmH,YAAAlF,QAAAqa,IAfA,GAAAnZ,GAAAV,EAAAxC,OAAAoc,EAAA,GAAAnW,EAAAd,WACAC,EAAA2U,IAAA1U,EAAAD,EAAAkX,GAAAlX,EAAAmX,GAAAnX,CAkBAa,GAAAU,KAAA3E,QAAA,SAAAuE,GAEA,IADA,GAAA5F,GAAApB,GAAA,EAAAc,EAAAkG,EAAA7D,SACAnD,EAAAc,GACAM,EAAA6B,EAAA+D,EAAAhH,MACAoB,EAAA,GAAAyE,MAAAzE,EAAA,IACAA,EAAA,GAAA2b,MAAA3b,EAAA,IACAA,EAAA,GAAA0E,MAAA1E,EAAA,IACAA,EAAA,GAAA4b,MAAA5b,EAAA,KAIA,KAAAuC,IAAA+C,GAAAwW,QACAD,EAAAvW,EAAAwW,QAAAvZ,GAGA,QAAAkC,EAAAC,EAAAiX,EAAAC,KZ+7DM,SAAUjd,EAAQmF,EAAqBvF,GAE7C,Yat+DAuF,GAAA,WAAAgJ,GACA,MAAAA,Kb6+DM,SAAUnO,EAAQmF,EAAqBvF,GAE7C,Ych/DAuF,GAAA,WAAAwB,EAAAU,GAiDA,QAAA+V,GAAAnd,GACA,GAAAod,GAAApW,EAAAN,EAAAU,KAAApH,EAAA,GAAAA,KAAAqd,EAAArW,EAAA,EAGA,OAFAN,GAAAd,WAAAwX,GAAA,KAAApW,EAAAvE,QAAA,SAAA6a,GAAmEF,EAAA,IAAAE,EAAA,GAAAF,EAAA,IAAAE,EAAA,MACnEF,EAAApW,IAAA7D,OAAA,GACAnD,EAAA,GAAAod,EAAAC,MAAAD,GAGA,QAAAG,GAAAC,EAAAC,GACA,OAAAja,KAAAga,GAAA,CACA,GAAAtC,GAAAsC,EAAAha,SACAia,GAAAvC,EAAAwC,aACAxC,GAAAwC,YACAxC,GAAAyC,IACAzC,EAAAzY,QAAA,SAAAzC,GAA6B4d,EAAA5d,EAAA,GAAAA,KAAA,IAC7B6d,EAAAhb,KAAAqY,IA9DA,GAAA0C,MACAH,KACAD,KACAK,KACAC,GAAA,CAkEA,OA/DA1W,GAAA3E,QAAA,SAAAzC,EAAAsG,GACA,GAAArD,GAAA+D,EAAAN,EAAAU,KAAApH,EAAA,GAAAA,IACAgH,GAAA7D,OAAA,IAAA6D,EAAA,QAAAA,EAAA,QACA/D,EAAAmE,IAAA0W,GAAA1W,EAAA0W,GAAA9d,EAAAoH,EAAAd,GAAArD,KAIAmE,EAAA3E,QAAA,SAAAzC,GACA,GAGAkb,GAAAhO,EAHAxK,EAAAya,EAAAnd,GACA0d,EAAAhb,EAAA,GACAib,EAAAjb,EAAA,EAGA,IAAAwY,EAAAsC,EAAAE,GAIA,SAHAF,GAAAtC,EAAAyC,KACAzC,EAAArY,KAAA7C,GACAkb,EAAAyC,MACAzQ,EAAAuQ,EAAAE,GAAA,OACAF,GAAAvQ,EAAAwQ,MACA,IAAAK,GAAA7Q,IAAAgO,MAAAvO,OAAAO,EACAuQ,GAAAM,EAAAL,MAAAxC,EAAAwC,OAAAF,EAAAO,EAAAJ,IAAAzQ,EAAAyQ,KAAAI,MAEAN,GAAAvC,EAAAwC,OAAAF,EAAAtC,EAAAyC,KAAAzC,MAEK,IAAAA,EAAAuC,EAAAE,GAIL,SAHAF,GAAAvC,EAAAwC,OACAxC,EAAA8C,QAAAhe,GACAkb,EAAAwC,QACAxQ,EAAAsQ,EAAAE,GAAA,OACAF,GAAAtQ,EAAAyQ,IACA,IAAAM,GAAA/Q,IAAAgO,IAAAhO,EAAAP,OAAAuO,EACAuC,GAAAQ,EAAAP,MAAAxQ,EAAAwQ,OAAAF,EAAAS,EAAAN,IAAAzC,EAAAyC,KAAAM,MAEAR,GAAAvC,EAAAwC,OAAAF,EAAAtC,EAAAyC,KAAAzC,MAGAA,IAAAlb,GACAyd,EAAAvC,EAAAwC,SAAAF,EAAAtC,EAAAyC,OAAAzC,IAsBAqC,EAAAC,EAAAC,GACAF,EAAAE,EAAAD,GACApW,EAAA3E,QAAA,SAAAzC,GAA4B4d,EAAA5d,EAAA,GAAAA,MAAA6d,EAAAhb,MAAA7C,MAE5B6d,Idu/DM,SAAU9d,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIgG,GAA0ChG,EAAoB,Ge/jEvFuF,GAAA,WAAAU,GACA,SAAAA,EAAA,MAAAD,GAAA,CACA,IAAAE,GACAC,EACAC,EAAAH,EAAAI,MAAA,GACAC,EAAAL,EAAAI,MAAA,GACAE,EAAAN,EAAAO,UAAA,GACAC,EAAAR,EAAAO,UAAA,EACA,iBAAAE,EAAArG,GACAA,IAAA6F,EAAAC,EAAA,EACA,IAAAQ,GAAA,EACAxF,EAAAuF,EAAAlD,OACAoD,EAAA,GAAAC,OAAA1F,GACAic,EAAAjU,KAAA2D,OAAApG,EAAA,GAAAH,GAAAH,GACAiX,EAAAlU,KAAA2D,OAAApG,EAAA,GAAAD,GAAAH,EAGA,KAFAM,EAAA,GAAAwW,EAAAlX,IAAAkX,EACAxW,EAAA,GAAAyW,EAAAlX,IAAAkX,EACA1W,EAAAxF,GAAAyF,EAAAD,GAAAD,EAAAC,MACA,OAAAC,MfykEM,SAAUxG,EAAQmF,EAAqBvF,GAE7C,YgB/lEAuF,GAAA,WAAAgZ,EAAAC,GACA,MAAAD,GAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,KhBsmEM,SAAUpe,EAAQmF,EAAqBvF,GAE7C,YiBvmEA,IAAAye,GAAA,GAAAC,aAAA,IACAC,EAAA,GAAAC,cAAAH,GACAI,EAAA,GAAAC,aAAAL,EAEAlZ,GAAA,WAAAqC,GACA+W,EAAA,GAAA/W,EAAA,GACA+W,EAAA,GAAA/W,EAAA,EACA,IAAAS,GAAAwW,EAAA,GAAAA,EAAA,EAEA,oBADAxW,KAAA,EAAAA,GAAA,EAAAwW,EAAA,GAAAA,EAAA,MjBinEM,SAAUze,EAAQmF,EAAqBvF,GAE7C,YkB7nEAuF,GAAA,WAAAwB,GAKA,QAAAgY,GAAAle,GACA,OAAAA,EAAAuG,MACA,yBAAAvG,EAAAoH,WAAAnF,QAAAic,EAAoE,MACpE,eAAAC,EAAAne,EAAA4G,KAAuC,MACvC,oBAAA5G,EAAA4G,KAAA3E,QAAAkc,IAIA,QAAAA,GAAAvX,GACA,OAAApH,GAAA,EAAAc,EAAAsG,EAAAjE,OAAoCnD,EAAAc,IAAOd,IAAA4e,EAC3C,OAAAnX,GAAAL,EAAApH,GAAAsG,EAAA,EAAAnG,EAAAsH,EAAAtE,OAAsDmD,EAAAnG,IAAOmG,EAAA,CAC7D,GAAAU,GAAAS,EAAAnB,EACAU,GAAA,IAAAA,KACA,IAAA6X,GAAAC,EAAA9X,EACA,OAAA6X,EAAAC,EAAA9X,GAAA4X,EACAC,IAAAD,IAAAE,EAAA9X,IAAA,IAnBA,GAEArD,GAFAmb,EAAA,GAAAtY,OAAAE,EAAAU,KAAAjE,QACAyb,EAAA,CAuBA,KAAAjb,IAAA+C,GAAAwW,QACAwB,EAAAhY,EAAAwW,QAAAvZ,GAGA,iBAAA8D,GACA,OAAAT,GAAAV,EAAA,EAAAnG,EAAAsH,EAAAtE,OAAyCmD,EAAAnG,IAAOmG,EAChD,QAAAwY,GAAA9X,EAAAS,EAAAnB,IAAA,GAAAU,KACA,QAGA,alBqoEM,SAAUjH,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIof,GAAgDpf,EAAoB,GACpEqf,EAAwCrf,EAAoB,EmBzqErFuF,GAAA,WAAAwB,EAAAuY,EAAA5O,GAKA,MAJA4O,GAAA,MAAAA,EAAA1T,OAAA2T,WAAAD,EAEA,MAAA5O,MAAA2O,EAAA,GAEA,SAAAvX,EAAA0X,GACA,MAAA9O,GAAA5P,OAAAse,EAAA,GAAArY,GAAqCK,KAAA,UAAAK,MAAAK,KAA8BX,SAAAa,YAAA,GAAAwX,IAAAF,KnBorE7D,SAAUlf,EAAQD,EAASH,GAEjC,YoBjrEA,SAAAyf,GAAsBC,GAClB,GAAMC,IAAUC,EAAEF,GAAMG,WAAcC,IAAK,IAAKA,IAC1CD,EAASE,EAAUC,UAAY,CAGrCC,GAAMC,SACFC,UAAWR,EAASE,EAHT,IAIZ,IAAK,cAKZ,QAAAO,GAA4BC,GACxBC,EAAA7d,oBAAoB4d,GAGpBJ,EAAMM,KAAK,QAASF,GAGpBT,EAAE,iBAAiBY,KAAK,WACVZ,EAAExc,MAAMmd,KAAK,WACbF,EACNT,EAAExc,MAAMqd,SAAS,UAEjBb,EAAExc,MAAMsd,YAAY,YAKhC,QAAAC,KAEIf,EAAE,iBAAiBgB,MAAM,WACrB,GAAMP,GAAQT,EAAExc,MAAMmd,KAAK,QAC3BH,GAAmBC,GACnBD,EAAmBC,GAEnBQ,EAAkBR,KAGtBT,EAAE,cAAcgB,MAAM,SAAS7d,GAC3BA,EAAE+d,iBACFV,EAAmB,IACnBS,EAAkB,MAI1B,QAAAE,KAEI,GAAMC,GAAW7X,KAAKE,KAAK0W,EAAUkB,WAAWnB,KAAO,CAGvDC,GAAUU,SAAS,aAGnB,IAAMS,GAAe,WACLnB,EAAUkB,WAAWnB,IACvBkB,EACNjB,EAAUU,SAAS,QAEnBV,EAAUW,YAAY,QAG9Bd,GAAEuB,QAAQC,OAAOF,GAGjBA,IAIJ,QAAAG,KACIC,EAAUC,OACNC,eAAe,EACfC,QAAQ,EACRC,UAAU,EACVC,cAAe,MAMvB,QAAAC,KACIhC,EAAE,kBAAkBiC,GAAG,QAAS,gBAAiB,SAAS9e,GACtDA,EAAE+d,iBAGFgB,EAAcpB,YAAY,UAC1Bd,EAAExc,MAAMqd,SAAS,UAGjBsB,EAAUC,MAGV,IAAMtC,GAAOE,EAAExc,MAAM6e,KAAK,SAAW,EACrCrC,GAAEF,GAAMwC,OACRzC,EAAaC,GAIbU,EADcR,EAAExc,MAAMmd,KAAK,YAKnC,QAAAM,GAA2BR,GAEvByB,EAAcpB,YAAY,UAC1BqB,EAAUC,MAEV,IAAIG,EACJ,IAAK9B,EAGE,CACH,GAAM+B,GAAiBL,EAAU9d,OAAO,WAEpC,MADU2b,GAAExc,MAAMmd,KAAK,WACVF,IAEXgC,EAAelZ,KAAKmS,MAAMnS,KAAKmZ,SAAWF,EAAe5e,OAC/D2e,GAAUC,EAAeC,OATjB,CACR,GAAMA,GAAelZ,KAAKmS,MAAMnS,KAAKmZ,SAAWP,EAAUve,OAC1D2e,GAAUJ,EAAUM,GAUxBzC,EAAEuC,GAASD,MAIX,KAAK,GADClb,GAAKmb,EAAQnb,GACV3G,EAAI,EAAGA,EAAIyhB,EAActe,OAAQnD,IAAK,CAC3C,GAAMkiB,GAAe3C,EAAEkC,EAAczhB,GACrC,IAAIkiB,EAAaN,KAAK,UAAY,IAAIjb,EAAM,CACxCub,EAAa9B,SAAS,UACtBa,EAAUC,MAAM,YAAalhB,EAC7B,SpBkjEZS,OAAOC,eAAeZ,EAAS,cAAgBsD,OAAO,IoBjsEtDzD,EAAA,GAEA,IAAA4f,GAAA5f,EAAA,EACAA,GAAA,GAEAA,EAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,GAEA,IAAAsgB,GAAAtgB,EAAA,GAEM+f,EAAYH,EAAE,cACdK,EAAQL,EAAE,cAqEV0B,EAAY1B,EAAE,kBAUdkC,EAAgBlC,EAAE,gCAClBmC,EAAYnC,EAAE,WAuDpBA,KAAI4C,MAAM,WACN7B,IACAI,IACAM,IACAO,IACAf,EAAkB,OpBkrEhB,SAAUzgB,EAAQD,KAMlB,SAAUC,EAAQD,EAASH,GAEjC,YqB90EA,SAAAyiB,KACI,GAAM1e,GAAgBuc,EAAA/d,qBACtB,IAAIwB,EAAgB,EAChB,MAAOzB,GAASogB,OAAO,SAACC,EAAMlhB,GAAM,MAAAkhB,GAAOlhB,EAAE+C,OAAO,EAGxD,IAAM9B,GAAWN,EAAW2B,EAK5B,OAJczB,GACT2B,OAAO,SAAAxC,GAAK,MAAAA,GAAEqC,aAAepB,EAASsB,MACtC0e,OAAO,SAACC,EAAMlhB,GAAM,MAAAkhB,GAAOlhB,EAAE+C,OAAO,GAK7C,QAAAoe,KACI,GAAM7e,GAAgBuc,EAAA/d,qBACtB,OAAIwB,GAAgB,EACT,GAEM3B,EAAW2B,GACZpD,KAKpB,QAAAkiB,KAKI,IAAK,GAJCre,GAAQie,IACRK,EAAWte,EAAQ,IACnB6b,EAAQuC,IAELviB,EAAI,EAAGA,EAAI0iB,EAAWvf,OAAQnD,IAAK,CACxC,GAAM2iB,GAAOD,EAAW1iB,EACxB2iB,GAAKC,UAAY,IAAIH,EAASjX,QAAQ,GAAE,WACxCmX,EAAKE,aAAa,aAAc7C,IrB+yExCvf,OAAOC,eAAeZ,EAAS,cAAgBsD,OAAO,GqBr1EtD,IAAA6c,GAAAtgB,EAAA,GAEMoC,EAAake,EAAAne,gBACbG,EAAWge,EAAAje,cAyBX0gB,EAAaI,SAASC,uBAAuB,aAcnDjC,QAAOkC,iBAAiB,OAAQR,GAEhCvC,EAAAtd,0BAA0B6f,IrBi1EpB,SAAUziB,EAAQD,GsB73ExBC,EAAAD,UAAmB6D,IAAA,KAAArD,KAAA,cAAA0J,MAAA,UAAAiZ,KAAA,0BAAmFtf,IAAA,MAAArD,KAAA,cAAA0J,MAAA,UAAAiZ,KAAA,0BAAoFtf,IAAA,QAAArD,KAAA,QAAA0J,MAAA,UAAAiZ,KAAA,4BtBm4EpL,SAAUljB,EAAQD,GuBn4ExBC,EAAAD,SAAkBojB,KAAO5iB,KAAA,oCAAA+B,SAAA,SAA8D8gB,KAAQ7iB,KAAA,wCAAA+B,SAAA,MAA+D+gB,KAAQ9iB,KAAA,iBAAA+B,SAAA,MAAwCghB,KAAQ/iB,KAAA,gBAAA+B,SAAA,OAAwCihB,KAAQhjB,KAAA,kBAAA+B,SAAA,MAAyCkhB,KAAQjjB,KAAA,iBAAA+B,SAAA,MAAwCmhB,KAAQljB,KAAA,gBAAA+B,SAAA,SAA0CohB,KAAQnjB,KAAA,sBAAA+B,SAAA,SAAgDqhB,KAAQpjB,KAAA,iCAAA+B,SAAA,OAAyDshB,KAAQrjB,KAAA,0BAAA+B,SAAA,MAAiDuhB,KAAQtjB,KAAA,2BAAA+B,SAAA,OAAmDwhB,KAAQvjB,KAAA,8BAAA+B,SAAA,OAAsDyhB,KAAQxjB,KAAA,wCAAA+B,SAAA,OAAgE0hB,KAAQzjB,KAAA,wBAAA+B,SAAA,MAA+C2hB,KAAQ1jB,KAAA,4BAAA+B,SAAA,SAAsD4hB,KAAQ3jB,KAAA,YAAA+B,SAAA,SAAsC6hB,KAAQ5jB,KAAA,+BAAA+B,SAAA,OAAuD8hB,KAAQ7jB,KAAA,sBAAA+B,SAAA,OAA8C+hB,KAAQ9jB,KAAA,oCAAA+B,SAAA,OAA4DgiB,KAAQ/jB,KAAA,sCAAA+B,SAAA,SvBy4ElmC,SAAUtC,EAAQD,GwBz4ExBC,EAAAD,SAAkBwkB,MAAQhkB,KAAA,cAAA+B,SAAA,uCAAsEkiB,MAASjkB,KAAA,6BAAA+B,SAAA,uCAAqFmiB,MAASlkB,KAAA,yBAAA+B,SAAA,uCAAiFoiB,MAASnkB,KAAA,8CAAA+B,SAAA,uCAAsGqiB,MAASpkB,KAAA,oDAAA+B,SAAA,uCAA4GsiB,MAASrkB,KAAA,yCAAA+B,SAAA,gCAA0FuiB,MAAStkB,KAAA,+BAAA+B,SAAA,gCAAgFwiB,MAASvkB,KAAA,uBAAA+B,SAAA,gCAAwEyiB,MAASxkB,KAAA,uCAAA+B,SAAA,gCAAwF0iB,MAASzkB,KAAA,wBAAA+B,SAAA,gCAAyE2iB,MAAS1kB,KAAA,gCAAA+B,SAAA,gCAAiF4iB,MAAS3kB,KAAA,wBAAA+B,SAAA,gCAAyE6iB,MAAS5kB,KAAA,4BAAA+B,SAAA,gCAA6E8iB,MAAS7kB,KAAA,uCAAA+B,SAAA,gCAAwF+iB,MAAS9kB,KAAA,6BAAA+B,SAAA,gCAA8EgjB,MAAS/kB,KAAA,iDAAA+B,SAAA,gCAAkGijB,MAAShlB,KAAA,uBAAA+B,SAAA,8BAAsEkjB,MAASjlB,KAAA,iBAAA+B,SAAA,8BAAgEmjB,MAASllB,KAAA,uBAAA+B,SAAA,8BAAsEojB,MAASnlB,KAAA,iCAAA+B,SAAA,8BAAgFqjB,MAASplB,KAAA,0BAAA+B,SAAA,gCxB+4EpyD,SAAUtC,EAAQD,GyB/4ExBC,EAAAD,UAAmBmE,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,aAA+DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,oBAAAD,KAAA,MAAAG,MAAA,YAA+DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,oBAAAD,KAAA,MAAAG,MAAA,YAA+DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,SAA0DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,SAA0DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,aAA+DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,aAA+DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,UAA2DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,SAA0DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,SAA0DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,oBAAAD,KAAA,MAAAG,MAAA,YAA+DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,SAA0DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,aAA+DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,aAA+DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,oBAAAD,KAAA,MAAAG,MAAA,YAA+DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,aAA+DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,oBAAAD,KAAA,MAAAG,MAAA,YAA+DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,SAA2DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,OAAyDF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,WAA6DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,SAA0DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,WAA4DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,aAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,mBAAAD,KAAA,MAAAG,MAAA,YAA8DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,SAA0DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,YAA6DF,QAAA,kBAAAD,KAAA,MAAAG,MAAA,azBq5En3zB,SAAUpE,EAAQD,G0Br5ExBC,EAAAD,SAAkBwkB,MAAQpB,IAAA,OAAAK,IAAA,OAAAJ,IAAA,OAAAQ,IAAA,OAAAD,IAAA,MAAAE,IAAA,MAAAO,IAAA,MAAAH,IAAA,MAAAR,IAAA,MAAAK,IAAA,OAAAK,IAAA,MAAAE,IAAA,MAAAC,IAAA,MAAAJ,IAAA,MAAAZ,IAAA,MAAAD,IAAA,OAAAE,IAAA,OAAAG,IAAA,MAAAM,IAAA,MAAAD,IAAA,OAAuPS,MAASrB,IAAA,MAAAK,IAAA,OAAAJ,IAAA,OAAAQ,IAAA,MAAAD,IAAA,EAAAE,IAAA,MAAAO,IAAA,EAAAH,IAAA,MAAAR,IAAA,MAAAK,IAAA,OAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,EAAAZ,IAAA,EAAAD,IAAA,MAAAE,IAAA,MAAAG,IAAA,MAAAM,IAAA,EAAAD,IAAA,GAA+MU,MAAStB,IAAA,EAAAK,IAAA,EAAAJ,IAAA,EAAAQ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAO,IAAA,EAAAH,IAAA,EAAAR,IAAA,EAAAK,IAAA,EAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,EAAAZ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAM,IAAA,EAAAD,IAAA,GAAgKW,MAASvB,IAAA,EAAAK,IAAA,OAAAJ,IAAA,QAAAQ,IAAA,OAAAD,IAAA,MAAAE,IAAA,QAAAO,IAAA,EAAAH,IAAA,QAAAR,IAAA,EAAAK,IAAA,OAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,OAAAZ,IAAA,OAAAD,IAAA,QAAAE,IAAA,QAAAG,IAAA,EAAAM,IAAA,EAAAD,IAAA,MAA8NY,MAASxB,IAAA,EAAAK,IAAA,EAAAJ,IAAA,EAAAQ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAO,IAAA,EAAAH,IAAA,EAAAR,IAAA,EAAAK,IAAA,EAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,EAAAZ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAM,IAAA,EAAAD,IAAA,GAAgK6B,MAASzC,IAAA,OAAAK,IAAA,QAAAJ,IAAA,QAAAQ,IAAA,QAAAD,IAAA,MAAAE,IAAA,QAAAO,IAAA,MAAAH,IAAA,QAAAR,IAAA,OAAAK,IAAA,QAAAK,IAAA,MAAAE,IAAA,MAAAC,IAAA,MAAAJ,IAAA,OAAAZ,IAAA,OAAAD,IAAA,QAAAE,IAAA,QAAAG,IAAA,MAAAM,IAAA,MAAAD,IAAA,OAAoQa,MAASzB,IAAA,UAAAK,IAAA,kBAAAJ,IAAA,kBAAAQ,IAAA,mBAAAD,IAAA,kBAAAE,IAAA,UAAAO,IAAA,UAAAH,IAAA,kBAAAR,IAAA,QAAAK,IAAA,kBAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,mBAAAZ,IAAA,EAAAD,IAAA,mBAAAE,IAAA,mBAAAG,IAAA,EAAAM,IAAA,UAAAD,IAAA,UAAiWc,MAAS1B,IAAA,IAAAK,IAAA,OAAAJ,IAAA,OAAAQ,IAAA,QAAAD,IAAA,QAAAE,IAAA,OAAAO,IAAA,OAAAH,IAAA,MAAAR,IAAA,OAAAK,IAAA,QAAAK,IAAA,OAAAE,IAAA,OAAAC,IAAA,OAAAJ,IAAA,EAAAZ,IAAA,QAAAD,IAAA,QAAAE,IAAA,OAAAG,IAAA,EAAAM,IAAA,EAAAD,IAAA,OAAqPe,MAAS3B,IAAA,EAAAK,IAAA,MAAAJ,IAAA,MAAAQ,IAAA,EAAAD,IAAA,EAAAE,IAAA,OAAAO,IAAA,EAAAH,IAAA,EAAAR,IAAA,EAAAK,IAAA,OAAAK,IAAA,OAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,EAAAZ,IAAA,EAAAD,IAAA,QAAAE,IAAA,OAAAG,IAAA,EAAAM,IAAA,EAAAD,IAAA,GAAkMgB,MAAS5B,IAAA,WAAAK,IAAA,kBAAAJ,IAAA,EAAAQ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAO,IAAA,EAAAH,IAAA,EAAAR,IAAA,EAAAK,IAAA,SAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,UAAAZ,IAAA,EAAAD,IAAA,WAAAE,IAAA,mBAAAG,IAAA,EAAAM,IAAA,SAAAD,IAAA,GAAyOiB,MAAS7B,IAAA,EAAAK,IAAA,EAAAJ,IAAA,EAAAQ,IAAA,MAAAD,IAAA,KAAAE,IAAA,EAAAO,IAAA,EAAAH,IAAA,EAAAR,IAAA,EAAAK,IAAA,EAAAK,IAAA,MAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,EAAAZ,IAAA,EAAAD,IAAA,EAAAE,IAAA,OAAAG,IAAA,EAAAM,IAAA,EAAAD,IAAA,OAAoLkB,MAAS9B,IAAA,EAAAK,IAAA,MAAAJ,IAAA,EAAAQ,IAAA,QAAAD,IAAA,EAAAE,IAAA,OAAAO,IAAA,QAAAH,IAAA,OAAAR,IAAA,OAAAK,IAAA,MAAAK,IAAA,QAAAE,IAAA,EAAAC,IAAA,OAAAJ,IAAA,OAAAZ,IAAA,OAAAD,IAAA,MAAAE,IAAA,OAAAG,IAAA,MAAAM,IAAA,KAAAD,IAAA,GAAwOmB,MAAS/B,IAAA,EAAAK,IAAA,EAAAJ,IAAA,EAAAQ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAO,IAAA,EAAAH,IAAA,EAAAR,IAAA,EAAAK,IAAA,EAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,EAAAZ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAM,IAAA,EAAAD,IAAA,GAAgKoB,MAAShC,IAAA,EAAAK,IAAA,EAAAJ,IAAA,EAAAQ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAO,IAAA,EAAAH,IAAA,EAAAR,IAAA,EAAAK,IAAA,EAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,EAAAZ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAM,IAAA,EAAAD,IAAA,GAAgKqB,MAASjC,IAAA,EAAAK,IAAA,EAAAJ,IAAA,EAAAQ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAO,IAAA,EAAAH,IAAA,EAAAR,IAAA,EAAAK,IAAA,OAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,OAAAJ,IAAA,EAAAZ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAM,IAAA,EAAAD,IAAA,GAA0KsB,MAASlC,IAAA,EAAAK,IAAA,EAAAJ,IAAA,EAAAQ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAO,IAAA,EAAAH,IAAA,EAAAR,IAAA,EAAAK,IAAA,EAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,EAAAZ,IAAA,EAAAD,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAM,IAAA,EAAAD,IAAA,GAAgKuB,MAASnC,IAAA,MAAAK,IAAA,OAAAJ,IAAA,QAAAQ,IAAA,MAAAD,IAAA,OAAAE,IAAA,QAAAO,IAAA,MAAAH,IAAA,IAAAR,IAAA,OAAAK,IAAA,OAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,EAAAZ,IAAA,EAAAD,IAAA,KAAAE,IAAA,KAAAG,IAAA,EAAAM,IAAA,EAAAD,IAAA,QAAyN8B,MAAS1C,IAAA,kBAAAK,IAAA,kBAAAJ,IAAA,WAAAQ,IAAA,kBAAAD,IAAA,mBAAAE,IAAA,WAAAO,IAAA,WAAAH,IAAA,mBAAAR,IAAA,UAAAK,IAAA,kBAAAK,IAAA,QAAAE,IAAA,OAAAC,IAAA,QAAAJ,IAAA,WAAAZ,IAAA,QAAAD,IAAA,iBAAAE,IAAA,kBAAAG,IAAA,MAAAM,IAAA,UAAAD,IAAA,mBAAgYwB,MAASpC,IAAA,kBAAAK,IAAA,kBAAAJ,IAAA,mBAAAQ,IAAA,mBAAAD,IAAA,WAAAE,IAAA,mBAAAO,IAAA,WAAAH,IAAA,WAAAR,IAAA,mBAAAK,IAAA,kBAAAK,IAAA,WAAAE,IAAA,SAAAC,IAAA,UAAAJ,IAAA,WAAAZ,IAAA,UAAAD,IAAA,mBAAAE,IAAA,kBAAAG,IAAA,kBAAAM,IAAA,mBAAAD,IAAA,YAAmayB,MAASrC,IAAA,EAAAK,IAAA,KAAAJ,IAAA,EAAAQ,IAAA,MAAAD,IAAA,EAAAE,IAAA,EAAAO,IAAA,EAAAH,IAAA,EAAAR,IAAA,EAAAK,IAAA,MAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,EAAAZ,IAAA,EAAAD,IAAA,OAAAE,IAAA,OAAAG,IAAA,EAAAM,IAAA,MAAAD,IAAA,GAAyL0B,MAAStC,IAAA,SAAAK,IAAA,mBAAAJ,IAAA,UAAAQ,IAAA,SAAAD,IAAA,QAAAE,IAAA,SAAAO,IAAA,UAAAH,IAAA,UAAAR,IAAA,SAAAK,IAAA,kBAAAK,IAAA,OAAAE,IAAA,MAAAC,IAAA,SAAAJ,IAAA,UAAAZ,IAAA,QAAAD,IAAA,kBAAAE,IAAA,UAAAG,IAAA,SAAAM,IAAA,kBAAAD,IAAA,WAAgV2B,MAASvC,IAAA,kBAAAK,IAAA,kBAAAJ,IAAA,WAAAQ,IAAA,UAAAD,IAAA,UAAAE,IAAA,SAAAO,IAAA,SAAAH,IAAA,mBAAAR,IAAA,kBAAAK,IAAA,kBAAAK,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAJ,IAAA,mBAAAZ,IAAA,UAAAD,IAAA,kBAAAE,IAAA,mBAAAG,IAAA,SAAAM,IAAA,WAAAD,IAAA,SAAwW4B,MAASxC,IAAA,UAAAK,IAAA,UAAAJ,IAAA,UAAAQ,IAAA,mBAAAD,IAAA,UAAAE,IAAA,UAAAO,IAAA,SAAAH,IAAA,kBAAAR,IAAA,kBAAAK,IAAA,WAAAK,IAAA,UAAAE,IAAA,EAAAC,IAAA,SAAAJ,IAAA,WAAAZ,IAAA,QAAAD,IAAA,kBAAAE,IAAA,mBAAAG,IAAA,SAAAM,IAAA,WAAAD,IAAA,WAAgW+B,MAAS3C,IAAA,WAAAK,IAAA,mBAAAJ,IAAA,mBAAAQ,IAAA,kBAAAD,IAAA,WAAAE,IAAA,UAAAO,IAAA,UAAAH,IAAA,WAAAR,IAAA,mBAAAK,IAAA,kBAAAK,IAAA,UAAAE,IAAA,SAAAC,IAAA,UAAAJ,IAAA,kBAAAZ,IAAA,UAAAD,IAAA,kBAAAE,IAAA,kBAAAG,IAAA,UAAAM,IAAA,QAAAD,IAAA,mBAA2YgC,MAAS5C,IAAA,WAAAK,IAAA,mBAAAJ,IAAA,kBAAAQ,IAAA,YAAAD,IAAA,kBAAAE,IAAA,WAAAO,IAAA,kBAAAH,IAAA,WAAAR,IAAA,mBAAAK,IAAA,mBAAAK,IAAA,UAAAE,IAAA,SAAAC,IAAA,WAAAJ,IAAA,YAAAZ,IAAA,WAAAD,IAAA,YAAAE,IAAA,YAAAG,IAAA,UAAAM,IAAA,WAAAD,IAAA,c1B25EnlM,SAAU/jB,EAAQD,EAASH,GAEjC,Y2B73EA,SAAAomB,GAAwBzjB,GACtB,GAEMH,GAAmB8d,EAAA/d,qBACzB,OAAIC,GAAmB,EACdJ,EAAWO,GAAO0H,OAJN,UAOjB1H,IAAUH,EACHJ,EAAWO,GAAO0H,OARR,oBAcvB,QAAAgc,GAAyB1jB,GACvB,MAAOoH,GAAM3H,EAAWO,GAAO0H,OAC5BwF,OAAO,IACPlB,MAGL,QAAA2X,GAAyB9hB,GACvB,MAAO2E,MAAKgT,KAAK3X,GAAS6B,EAG5B,QAAAkgB,GAAoBxiB,GAClB,MAAOoF,MAAKkT,IAAI,EAAIlT,KAAK+S,GAAKnY,EAAgB3B,EAAWoB,SAAWgjB,EAAQ,GACxEC,EAAOlY,EAGb,QAAAmY,GAAoB3iB,GAClB,MAAOoF,MAAKiT,IAAI,EAAIjT,KAAK+S,GAAKnY,EAAgB3B,EAAWoB,SAAWwc,EAAS,GACzEyG,EAAOjY,EAGb,QAAAmY,GAAyBjmB,GACvB,GAAM8B,GAAmB8d,EAAA/d,qBACzB,OAAIC,GAAmB,EACd,EAGL9B,EAAEqD,gBAAkBvB,EACf,EAGDgkB,EAAQ,EAGlB,QAAAI,GAA+BlmB,GAC7B,MAAO,GAAKA,EAAE8D,MAAQqiB,EAkExB,QAAAC,KACE,GAAMtkB,GAAmB8d,EAAA/d,qBAGzBwkB,GAAaC,EACVC,gBAA0B1G,GAC1ByG,MAAM,YAAaA,EAAME,aAAa,SAACxmB,GAAqB,MAA2B,IAA3B4lB,EAAgB5lB,EAAE8D,SAAe2iB,SAAS,IAAKC,WAAW,IACtHJ,MAAM,SAAUA,EAAMK,YAAYZ,EAAOlY,EAAGkY,EAAOjY,IAElDhM,GAAoB,EAEtBukB,EACGC,MAAM,IAAKA,EAAMM,YAAY,SAAC5mB,GAAqB,MAAAimB,GAAgBjmB,IAAI+lB,EAAOlY,EAAGkY,EAAOjY,GAAG2Y,SAAS,SAACzmB,GAAqB,SAAMkmB,EAAsBlmB,MAGzJqmB,EACGC,MAAM,IAAKA,EAAMO,OAAO,SAAC7mB,GAAqB,MAAA6lB,GAAW7lB,EAAEqD,iBAAgBojB,SAAS,SAACzmB,GAAqB,UAAOkmB,EAAsBlmB,MACvIsmB,MAAM,IAAKA,EAAMQ,OAAO,SAAC9mB,GAAqB,MAAAgmB,GAAWhmB,EAAEqD,iBAAgBojB,SAAS,SAACzmB,GAAqB,UAAOkmB,EAAsBlmB,MAI5IqmB,EAAWlF,GAAG,OAAQ,WACpB4F,EACGxF,KAAK,KAAM,SAACvhB,GACX,MAAOA,GAAE6N,IAEV0T,KAAK,KAAM,SAACvhB,GACX,MAAOA,GAAE8N,MAKXhM,EAAmB,GACrBklB,EAAAC,QAAQ,WACN,GAAMJ,GAASR,EAAWC,MAAyB,IACnD,QAAehiB,KAAXuiB,EAAJ,CACA,GAAMC,GAAST,EAAWC,MAAyB,SACpChiB,KAAXwiB,IAEJD,EAAOJ,SAAS,GAChBK,EAAOL,SAAS,GAEhBJ,EAAWC,MAAM,IAAKA,EAAMM,YAAY,EAAGb,EAAOlY,EAAGkY,EAAOjY,GAAG2Y,SAAS,QACvE,KAMP,QAAAS,KAEE,GAAMV,GAAeH,EAAWC,MAAyC,YACzE,QAAqBhiB,KAAjBkiB,EAAJ,CAEA,GAAMC,GAAWD,EAAaC,UAE9BU,GAAiBH,EAAAI,MAAM,SAAAC,GACrB,GAAMC,GAAKD,EAFG,IAIRE,EAAe,GAAMd,EAAa,GAAMhe,KAAK6F,IAAIgZ,EAAI,EAAmBb,EAC9ED,GAAaC,SAASc,GAClBD,GAAM,GACRH,EAAeK,U3B8sErBpnB,OAAOC,eAAeZ,EAAS,cAAgBsD,OAAO,G2B/5EtD,IAAA9B,GAAA3B,EAAA,GACAgnB,EAAAhnB,EAAA,GACA+J,EAAA/J,EAAA,GACA0nB,EAAA1nB,EAAA,GAEAsgB,EAAAtgB,EAAA,GAKMsC,EAAWge,EAAAje,cAEX8lB,EAAW7lB,EAASogB,OAAO,SAACC,EAAMjiB,GAAM,MAAAiiB,GAAOjiB,EAAE8D,OAAO,GACxDqiB,EAAWvkB,EAASogB,OAAO,SAACC,EAAMjiB,GAAM,MAAAyI,MAAKC,IAAIuZ,EAAMjiB,EAAE8D,QAAQ,GAGjEgiB,EAAQ,IACRxG,EAAS,IACTyG,GACJlY,EAAIiY,EAAQ,EACZhY,EAAIwR,EAAS,GAET3Z,EAAQ,GAERjE,EAAake,EAAAne,gBAGboe,EAAwBje,CAG9Bie,GAAKxV,KAAK,SAACvD,EAAGkC,GAAM,MAAAA,GAAElF,MAAQgD,EAAEhD,OAuDhC,IAAM4jB,GAA8CzmB,EACjD0mB,OAvEmB,WAwEnBC,OAAO,OACPrG,KAAK,QAASuE,GACdvE,KAAK,SAAUjC,GACfsI,OAAO,KAGJb,EAAUW,EACbE,OAAO,SACPrG,KAAK,KAAM,WACXsG,UAAU,UACVhI,KAAKA,GACLiI,QACAF,OAAO,cACPrG,KAAK,OAAQ,SAACvhB,GAAM,MAAA0lB,GAAe1lB,EAAEqD,iBACrCke,KAAK,SAAU,SAACvhB,GAAM,MAAA2lB,GAAgB3lB,EAAEqD,iBACxCke,KAAK,eAAgB,KACrBA,KAAK,KAAM,SAACvhB,GAAM,MAAA6lB,GAAW7lB,EAAEqD,iBAC/Bke,KAAK,KAAM,SAACvhB,GAAM,MAAAgmB,GAAWhmB,EAAEqD,iBAC/Bke,KAAK,IAAK,SAACvhB,GAAM,MAAA4lB,GAAgB5lB,EAAE8D,SAGhCikB,EAAiB9mB,EAAG0mB,OAAO,0BAEjCZ,GACK5F,GAAG,YAAa,WACf,GAAMvd,GAAU3C,EAAG0mB,OAA+BjlB,MAAiBslB,QAC7DhmB,EAAWN,EAAWkC,EAAQP,cAEpCpC,GAAG0mB,OAA+BjlB,MAC/BulB,aACAC,SAAS,KACT3G,KAAK,SAAU,WACfA,KAAK,eAAgB,KAGxBwG,EACGI,QAAQ,UAAU,GAErBJ,EAAeJ,OAAO,gCACtBI,EAAeJ,OAAO,iCACnBS,KAAKpmB,EAAS/B,MAEjB8nB,EAAeJ,OAAO,iCACnBS,KAAKxkB,EAAQ3D,MAEhB8nB,EAAeJ,OAAO,iCACnBS,KAAK,KAAMxkB,EAAQE,MAAQ,KAASqH,QAAQ,GAAE,OAElDgW,GAAG,WAAY,WACdlgB,EAAG0mB,OAA+BjlB,MAC/BulB,aACAC,SAAS,KACT3G,KAAK,SAAU,SAACvhB,GAAM,MAAA2lB,GAAgB3lB,EAAEqD,iBACxCke,KAAK,eAAgB,KAExBwG,EACGI,QAAQ,UAAU,IAG3B,IAAI9B,EA+CJD,IAEA,IAAIe,EAkBJD,IAEA,IAAMmB,GAAapnB,EAAG0mB,OAAO,wBAE7B/H,GAAAtd,0BAA0B,WAEtB+jB,EAAWmB,OACXL,EAAeK,OAGfpB,IACAc,IAGAH,EACGxF,KAAK,OAAQ,SAACvhB,GAAM,MAAA0lB,GAAe1lB,EAAEqD,gBAGxC,IAAMvB,GAAmB8d,EAAA/d,qBACzB,IAAIC,EAAmB,EAAG,CACxB,GAAMgC,GAAQ2jB,EACRa,EAAQzI,EAAK/c,MAEnBulB,GAAWV,OAAO,8BAElBU,EAAWV,OAAO,+BACfS,KAAK,IAERC,EAAWV,OAAO,+BACfS,KAAK,KAAMtkB,EAAQ,KAASqH,QAAQ,GAAE,KAEzCkd,EAAWV,OAAO,+BACfS,KAAKE,OACH,CACL,GAAMtmB,GAAWN,EAAWI,GACtBgC,EAAQ+b,EAAKmC,OAAO,SAACC,EAAMlhB,GAAM,MAAAA,GAAEsC,gBAAkBvB,EAAmBmgB,EAAOA,EAAOlhB,EAAE+C,OAAO,GAC/FwkB,EAAQzI,EAAKmC,OAAO,SAACC,EAAMlhB,GAAM,MAAAA,GAAEsC,gBAAkBvB,EAAmBmgB,EAAOA,EAAO,GAAG,EAE/FoG,GAAWV,OAAO,8BACfpG,KAAK,MAAOvf,EAAS4gB,MAAQ,IAEhCyF,EAAWV,OAAO,+BACfS,KAAKpmB,EAAS/B,MAEjBooB,EAAWV,OAAO,+BACfS,KAAK,KAAMtkB,EAAQ,KAASqH,QAAQ,GAAE,KAEzCkd,EAAWV,OAAO,+BACfS,KAAKE,O3Bs3ER,SAAU5oB,EAAQD,EAASH,G4B15EjC,QAAAipB,GAAAvd,EAAAH,EAAAnC,GACA,MAAAD,MAAAoC,IAAApC,KAAAC,IAAAmC,EAAAG,GAAAtC,GAGA,QAAA8f,GAAAxd,GACA,GAAAyd,GAAAzd,EAAAc,SAAA,IAAAkQ,aACA,OAAAyM,GAAA3lB,OAAA,MAAA2lB,IAtOA,GAAAC,GAAAppB,EAAA,GACAqpB,EAAArpB,EAAA,IAEAspB,IAGA,QAAA3oB,KAAAyoB,GACAA,EAAA5nB,eAAAb,KACA2oB,EAAAF,EAAAzoB,MAIA,IAAA4oB,GAAAnpB,EAAAD,SACAyM,MAGA2c,GAAAroB,IAAA,SAAAuL,GACA,GACAN,GACAlC,EAFAuf,EAAA/c,EAAAkQ,UAAA,KAAA8M,aAGA,QAAAD,GACA,UACArd,EAAAod,EAAAroB,IAAA0O,IAAAnD,GACAxC,EAAA,KACA,MACA,WACAkC,EAAAod,EAAAroB,IAAA+O,IAAAxD,GACAxC,EAAA,KACA,MACA,SACAkC,EAAAod,EAAAroB,IAAA2L,IAAAJ,GACAxC,EAAA,MAIA,MAAAkC,IAISlC,QAAAxG,MAAA0I,GAHT,MAMAod,EAAAroB,IAAA2L,IAAA,SAAAJ,GACA,IAAAA,EACA,WAGA,IAOAmQ,GACAvc,EACAqpB,EATAC,EAAA,sBACAhb,EAAA,kCACAib,EAAA,0FACAC,EAAA,4GACAnb,EAAA,QAEA7B,GAAA,QAKA,IAAA+P,EAAAnQ,EAAAmQ,MAAAjO,GAAA,CAIA,IAHA+a,EAAA9M,EAAA,GACAA,IAAA,GAEAvc,EAAA,EAAaA,EAAA,EAAOA,IAAA,CAEpB,GAAAypB,GAAA,EAAAzpB,CACAwM,GAAAxM,GAAA0c,SAAAH,EAAA9a,MAAAgoB,IAAA,OAGAJ,IACA7c,EAAA,GAAA1D,KAAA2D,MAAAiQ,SAAA2M,EAAA,sBAEE,IAAA9M,EAAAnQ,EAAAmQ,MAAA+M,GAAA,CAIF,IAHA/M,IAAA,GACA8M,EAAA9M,EAAA,GAEAvc,EAAA,EAAaA,EAAA,EAAOA,IACpBwM,EAAAxM,GAAA0c,SAAAH,EAAAvc,GAAAuc,EAAAvc,GAAA,GAGAqpB,KACA7c,EAAA,GAAA1D,KAAA2D,MAAAiQ,SAAA2M,IAAA,sBAEE,IAAA9M,EAAAnQ,EAAAmQ,MAAAgN,GAAA,CACF,IAAAvpB,EAAA,EAAaA,EAAA,EAAOA,IACpBwM,EAAAxM,GAAA0c,SAAAH,EAAAvc,EAAA,KAGAuc,GAAA,KACA/P,EAAA,GAAAkd,WAAAnN,EAAA,SAEE,MAAAA,EAAAnQ,EAAAmQ,MAAAiN,IAQA,OAAAjN,EAAAnQ,EAAAmQ,MAAAlO,IACF,gBAAAkO,EAAA,IACA,UAGA/P,EAAAuc,EAAAxM,EAAA,MAMA/P,EAAA,KAEAA,GALA,KAOA,IAtBA,KAAAxM,EAAA,EAAaA,EAAA,EAAOA,IACpBwM,EAAAxM,GAAA8I,KAAA2D,MAAA,KAAAid,WAAAnN,EAAAvc,EAAA,IAGAuc,GAAA,KACA/P,EAAA,GAAAkd,WAAAnN,EAAA,KAoBA,IAAAvc,EAAA,EAAYA,EAAA,EAAOA,IACnBwM,EAAAxM,GAAA4oB,EAAApc,EAAAxM,GAAA,MAIA,OAFAwM,GAAA,GAAAoc,EAAApc,EAAA,QAEAA,GAGA0c,EAAAroB,IAAA0O,IAAA,SAAAnD,GACA,IAAAA,EACA,WAGA,IAAAmD,GAAA,oHACAgN,EAAAnQ,EAAAmQ,MAAAhN,EAEA,IAAAgN,EAAA,CACA,GAAA/R,GAAAkf,WAAAnN,EAAA,GAMA,SALAmN,WAAAnN,EAAA,iBACAqM,EAAAc,WAAAnN,EAAA,WACAqM,EAAAc,WAAAnN,EAAA,WACAqM,EAAAe,MAAAnf,GAAA,EAAAA,EAAA,MAKA,aAGA0e,EAAAroB,IAAA+O,IAAA,SAAAxD,GACA,IAAAA,EACA,WAGA,IAAAwD,GAAA,kHACA2M,EAAAnQ,EAAAmQ,MAAA3M,EAEA,IAAA2M,EAAA,CACA,GAAA/R,GAAAkf,WAAAnN,EAAA,GAKA,SAJAmN,WAAAnN,EAAA,iBACAqM,EAAAc,WAAAnN,EAAA,WACAqM,EAAAc,WAAAnN,EAAA,WACAqM,EAAAe,MAAAnf,GAAA,EAAAA,EAAA,MAIA,aAGA0e,EAAA3c,GAAA+B,IAAA,WACA,GAAAib,GAAAP,EAAA9lB,UAEA,OACA,IACA2lB,EAAAU,EAAA,IACAV,EAAAU,EAAA,IACAV,EAAAU,EAAA,KACAA,EAAA,KACAV,EAAA/f,KAAA2D,MAAA,IAAA8c,EAAA,KACA,KAIAL,EAAA3c,GAAAC,IAAA,WACA,GAAA+c,GAAAP,EAAA9lB,UAEA,OAAAqmB,GAAApmB,OAAA,OAAAomB,EAAA,GACA,OAAAzgB,KAAA2D,MAAA8c,EAAA,SAAAzgB,KAAA2D,MAAA8c,EAAA,SAAAzgB,KAAA2D,MAAA8c,EAAA,QACA,QAAAzgB,KAAA2D,MAAA8c,EAAA,SAAAzgB,KAAA2D,MAAA8c,EAAA,SAAAzgB,KAAA2D,MAAA8c,EAAA,SAAAA,EAAA,QAGAL,EAAA3c,GAAAC,IAAAK,QAAA,WACA,GAAA0c,GAAAP,EAAA9lB,WAEA+J,EAAAnE,KAAA2D,MAAA8c,EAAA,YACArc,EAAApE,KAAA2D,MAAA8c,EAAA,YACAlgB,EAAAP,KAAA2D,MAAA8c,EAAA,WAEA,OAAAA,GAAApmB,OAAA,OAAAomB,EAAA,GACA,OAAAtc,EAAA,MAAAC,EAAA,MAAA7D,EAAA,KACA,QAAA4D,EAAA,MAAAC,EAAA,MAAA7D,EAAA,MAAAkgB,EAAA,QAGAL,EAAA3c,GAAAgD,IAAA,WACA,GAAAqa,GAAAZ,EAAA9lB,UACA,OAAA0mB,GAAAzmB,OAAA,OAAAymB,EAAA,GACA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,QACA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,QAKAV,EAAA3c,GAAAqD,IAAA,WACA,GAAAia,GAAAb,EAAA9lB,WAEAiE,EAAA,EAKA,OAJA0iB,GAAA1mB,QAAA,OAAA0mB,EAAA,KACA1iB,EAAA,KAAA0iB,EAAA,IAGA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,OAAA1iB,EAAA,KAGA+hB,EAAA3c,GAAA8B,QAAA,SAAA7B,GACA,MAAAyc,GAAAzc,EAAA/K,MAAA,Q5B6oFM,SAAU1B,EAAQD,EAASH,GAEjC,Y6B12FA,IAAAmqB,GAAAnqB,EAAA,IAEAgN,EAAAnG,MAAAtF,UAAAyL,OACAlL,EAAA+E,MAAAtF,UAAAO,MAEAunB,EAAAjpB,EAAAD,QAAA,SAAA4M,GAGA,OAFAqd,MAEA/pB,EAAA,EAAAgqB,EAAAtd,EAAAvJ,OAAmCnD,EAAAgqB,EAAShqB,IAAA,CAC5C,GAAAiqB,GAAAvd,EAAA1M,EAEA8pB,GAAAG,GAEAF,EAAApd,EAAAzM,KAAA6pB,EAAAtoB,EAAAvB,KAAA+pB,IAEAF,EAAAlnB,KAAAonB,GAIA,MAAAF,GAGAf,GAAAkB,KAAA,SAAAC,GACA,kBACA,MAAAA,GAAAnB,EAAA9lB,e7Bo3FM,SAAUnD,EAAQD,EAASH,GAEjC,Y8B94FAI,GAAAD,QAAA,SAAA6J,GACA,SAAAA,GAAA,gBAAAA,MAIAA,YAAAnD,cAAAqF,QAAAlC,IACAA,EAAAxG,QAAA,IAAAwG,EAAAW,iBAAA8f,WACA3pB,OAAA4pB,yBAAA1gB,IAAAxG,OAAA,eAAAwG,EAAA2gB,YAAAhqB,S9Bu5FM,SAAUP,EAAQD,EAASH,G+Bz5FjC,QAAA4qB,GAAAJ,GACA,GAAAK,GAAA,SAAA9d,GACA,WAAA/H,KAAA+H,GAAA,OAAAA,EACAA,GAGAxJ,UAAAC,OAAA,IACAuJ,EAAAlG,MAAAtF,UAAAO,MAAAvB,KAAAgD,YAGAinB,EAAAzd,IAQA,OAJA,cAAAyd,KACAK,EAAAC,WAAAN,EAAAM,YAGAD,EAGA,QAAAE,GAAAP,GACA,GAAAK,GAAA,SAAA9d,GACA,OAAA/H,KAAA+H,GAAA,OAAAA,EACA,MAAAA,EAGAxJ,WAAAC,OAAA,IACAuJ,EAAAlG,MAAAtF,UAAAO,MAAAvB,KAAAgD,WAGA,IAAA4B,GAAAqlB,EAAAzd,EAKA,oBAAA5H,GACA,OAAAklB,GAAAllB,EAAA3B,OAAAnD,EAAA,EAAuCA,EAAAgqB,EAAShqB,IAChD8E,EAAA9E,GAAA8I,KAAA2D,MAAA3H,EAAA9E,GAIA,OAAA8E,GAQA,OAJA,cAAAqlB,KACAK,EAAAC,WAAAN,EAAAM,YAGAD,EAzDA,GAAAG,GAAAhrB,EAAA,IACAirB,EAAAjrB,EAAA,IAEAmK,IAEArJ,QAAA6C,KAAAqnB,GAuDAloB,QAAA,SAAAooB,GACA/gB,EAAA+gB,MAEApqB,OAAAC,eAAAoJ,EAAA+gB,GAAA,YAAwDznB,MAAAunB,EAAAE,GAAA9gB,WACxDtJ,OAAAC,eAAAoJ,EAAA+gB,GAAA,UAAsDznB,MAAAunB,EAAAE,GAAA9f,QAEtD,IAAA+f,GAAAF,EAAAC,EACApqB,QAAA6C,KAAAwnB,GAEAroB,QAAA,SAAAsoB,GACA,GAAAZ,GAAAW,EAAAC,EAEAjhB,GAAA+gB,GAAAE,GAAAL,EAAAP,GACArgB,EAAA+gB,GAAAE,GAAApa,IAAA4Z,EAAAJ,OAIApqB,EAAAD,QAAAgK,G/Bu6FM,SAAU/J,EAAQD,EAASH,GgCv+FjC,QAAAqrB,KAKA,OAJAC,MAEAC,EAAAzqB,OAAA6C,KAAAqnB,GAEAX,EAAAkB,EAAA/nB,OAAAnD,EAAA,EAAqCA,EAAAgqB,EAAShqB,IAC9CirB,EAAAC,EAAAlrB,KAGAya,UAAA,EACA0Q,OAAA,KAIA,OAAAF,GAIA,QAAAG,GAAAP,GACA,GAAAI,GAAAD,IACAK,GAAAR,EAIA,KAFAI,EAAAJ,GAAApQ,SAAA,EAEA4Q,EAAAloB,QAIA,OAHAmoB,GAAAD,EAAAnkB,MACAqkB,EAAA9qB,OAAA6C,KAAAqnB,EAAAW,IAEAtB,EAAAuB,EAAApoB,OAAAnD,EAAA,EAAyCA,EAAAgqB,EAAShqB,IAAA,CAClD,GAAAwrB,GAAAD,EAAAvrB,GACAyrB,EAAAR,EAAAO,IAEA,IAAAC,EAAAhR,WACAgR,EAAAhR,SAAAwQ,EAAAK,GAAA7Q,SAAA,EACAgR,EAAAN,OAAAG,EACAD,EAAArN,QAAAwN,IAKA,MAAAP,GAGA,QAAAS,GAAAC,EAAApf,GACA,gBAAAG,GACA,MAAAH,GAAAof,EAAAjf,KAIA,QAAAkf,GAAAb,EAAAE,GAKA,IAJA,GAAAY,IAAAZ,EAAAF,GAAAI,OAAAJ,GACAZ,EAAAQ,EAAAM,EAAAF,GAAAI,QAAAJ,GAEAe,EAAAb,EAAAF,GAAAI,OACAF,EAAAa,GAAAX,QACAU,EAAA7N,QAAAiN,EAAAa,GAAAX,QACAhB,EAAAuB,EAAAf,EAAAM,EAAAa,GAAAX,QAAAW,GAAA3B,GACA2B,EAAAb,EAAAa,GAAAX,MAIA,OADAhB,GAAAM,WAAAoB,EACA1B,EA1EA,GAAAQ,GAAAhrB,EAAA,GA6EAI,GAAAD,QAAA,SAAA+qB,GAKA,OAJAI,GAAAG,EAAAP,GACAJ,KAEAS,EAAAzqB,OAAA6C,KAAA2nB,GACAjB,EAAAkB,EAAA/nB,OAAAnD,EAAA,EAAqCA,EAAAgqB,EAAShqB,IAAA,CAC9C,GAAA+qB,GAAAG,EAAAlrB,EAGA,QAFAirB,EAAAF,GAEAI,SAKAV,EAAAM,GAAAa,EAAAb,EAAAE,IAGA,MAAAR,KhC6/FM,SAAU1qB,EAAQD,EAASH,GAEjC,YiC7jGA,SAAAomB,GAAwBzjB,GACtB,GAEMH,GAAmB8d,EAAA/d,qBACzB,OAAIC,GAAmB,EACdJ,EAAWO,GAAO0H,OAJN,UAOjB1H,IAAUH,EACHJ,EAAWO,GAAO0H,OARR,oBAcvB,QAAA+hB,GAA0BtnB,GACxB,GAAMtC,GAAmB8d,EAAA/d,qBACzB,OAAIC,GAAmB,EACdsC,EAAON,MAETM,EAAOO,WAAW7C,GAAkBgC,MAG7C,QAAA6nB,KACE,GAAM7pB,GAAmB8d,EAAA/d,qBACzB,OAAIC,GAAmB,EACd,UAGFuH,EAAM3H,EAAWI,GAAkB6H,OACvCwF,OAAO,IACPlB,MAGL,QAAA0X,GAAyB1jB,GACvB,MAAOoH,GAAM3H,EAAWO,GAAO0H,OAC5BwF,OAAO,IACPlB,MAGL,QAAA2X,GAAyB9hB,GACvB,MAAO2E,MAAKgT,KAAK3X,GAAS6B,EAqH5B,QAAAkkB,GAAczB,EAAmDtC,GAiB7D,IAhBA,GACI8F,GADEC,EAAkBzD,EAAKA,OAAOjM,MAAM,OAAO2P,UAE7C3kB,KACA4kB,EAAa,EAEXle,EAAIua,EAAK7G,KAAK,KACdzT,EAAIsa,EAAK7G,KAAK,KACdxb,EAAKsjB,WAAWjB,EAAK7G,KAAK,OAE5ByK,EAAQ5D,EACTA,KAAK,IACLR,OAAwB,SACxBrG,KAAK,IAAK1T,GACV0T,KAAK,IAAKzT,GACVyT,KAAK,KAAMxb,EAAK,MAEZ6lB,EAAOC,EAAMhlB,OAAS,IAAI,CAC/BM,EAAK3E,KAAKopB,GACVI,EAAM5D,KAAKjhB,EAAKmD,KAAK,KAErB,IAAM8gB,GAAOY,EAAMZ,MACN,QAATA,GAAiBA,EAAKa,wBAA0BnG,GAAS3e,EAAKrE,OAAS,IACzEqE,EAAKN,MACLmlB,EAAM5D,KAAKjhB,EAAKmD,KAAK,MACrBnD,GAAQykB,GACRI,EAAQ5D,EACLR,OAAwB,SACxBrG,KAAK,IAAK1T,GACV0T,KAAK,IAAKzT,GACVyT,KAAK,KAzBO,MAyBCwK,EAA0BhmB,EAAK,MAC5CqiB,KAAKwD,KjCk4FhB,GAAInpB,GAAYC,MAAQA,KAAKD,UAAarC,OAAOuC,QAAU,SAASC,GAChE,IAAK,GAAI5B,GAAGrB,EAAI,EAAGc,EAAIoC,UAAUC,OAAQnD,EAAIc,EAAGd,IAAK,CACjDqB,EAAI6B,UAAUlD,EACd,KAAK,GAAIoB,KAAKC,GAAOZ,OAAOS,UAAUC,eAAejB,KAAKmB,EAAGD,KACzD6B,EAAE7B,GAAKC,EAAED,IAEjB,MAAO6B,GAEXxC,QAAOC,eAAeZ,EAAS,cAAgBsD,OAAO,GiCvmGtD,IAAA9B,GAAA3B,EAAA,GACAgnB,EAAAhnB,EAAA,GACA+J,EAAA/J,EAAA,GACA0nB,EAAA1nB,EAAA,GACA4sB,EAAA5sB,EAAA,IACAsgB,EAAAtgB,EAAA,GAcIgC,EAAUse,EAAAre,iBACdD,GAAUA,EAAQiC,OAAO,SAAAvC,GAAK,MAAAA,GAAE8C,MAAQ,IACxCxC,EAAQ+I,KAAK,SAACvD,EAAGkC,GAAM,MAAAA,GAAElF,MAAQgD,EAAEhD,QACnCxC,EAAUA,EAAQF,MAAM,EAAG,GAE3B,IAIMuE,IAJWrE,EAAQ0gB,OAAO,SAACC,EAAMjiB,GAAM,MAAAiiB,GAAOjiB,EAAE8D,OAAO,GAC5CxC,EAAQ0gB,OAAO,SAACC,EAAMjiB,GAAM,MAAAyI,MAAKC,IAAIuZ,EAAMjiB,EAAE8D,QAAQ,GAGxD,IAERpC,EAAake,EAAAne,gBA2Dboe,EAAuBve,EAAQ4B,IAAI,SAAClC,EAAGrB,GAC3C,MAAM8C,MACDzB,GACH8kB,MAAOrd,KAAKC,IAAI,EAAIkd,EAAgB5kB,EAAE8C,OAAQ,IAAM,GACpDwb,OAAQ7W,KAAKC,IAAI,EAAIkd,EAAgB5kB,EAAE8C,OAAQ,KAAO,GACtDa,WAAY3D,EAAE2D,WAAWzB,IAAI,SAACnD,GAC5B,MAAM0C,MACD1C,GACHsD,cAAe3B,EAAWQ,UAAU,SAAC2L,GAAM,MAAAA,GAAE5N,OAASF,EAAEE,eAO1DynB,EAAMzmB,EAAG0mB,OA7EO,YAgFhBwE,EAASzE,EACZG,UAAU,UACVhI,KAAKA,GACLiI,QACAF,OAAO,OACPrG,KAAK,QAAS,mBACdA,KAAK,QAAS,SAACvhB,GAAM,oBAAcA,EAAEsf,SACrCsI,OAAO,OACPrG,KAAK,QAAS,SACdA,KAAK,QAAS,SAACvhB,GAAM,MAAAA,GAAE8lB,QACvBvE,KAAK,SAAU,OAElB4K,GAAOrM,KAAK,SAASsM,GAEnB,GAAMC,GAAQprB,EAAG0mB,OAAOjlB,MAElBqjB,GACJlY,EAAIue,EAAYtG,MAAQ,EACxBhY,EAAIse,EAAY9M,OAAS,GAIrByH,EAAUsF,EACbxE,UAAU,WACVhI,KAAKuM,EAAYznB,YACjBmjB,QACAF,OAAO,cACPrG,KAAK,QAAS,UACdA,KAAK,OAAQ,SAACvhB,GAAM,MAAA0lB,GAAe1lB,EAAEqD,iBACrCke,KAAK,SAAU,SAACvhB,GAAM,MAAA2lB,GAAgB3lB,EAAEqD,iBACxCke,KAAK,eAAgB,KACrBA,KAAK,IAAK,SAACvhB,GAAM,MAAA4lB,GAAgB5lB,EAAE8D,SACnCyd,KAAK,KAAMwE,EAAOlY,GAClB0T,KAAK,KAAMwE,EAAOjY,GAGfwe,EAAQD,EACXzE,OAAuB,QACvBrG,KAAK,QAAS,eACdA,KAAK,IAAKwE,EAAOlY,GACjB0T,KAAK,IAAK,IACVA,KAAK,KAAM,SAEXA,KAAK,cAAe,UACpB6G,KAAKgE,EAAYhoB,OAAOnE,KAG3BqsB,GAAMzsB,KAAKgqB,EAAMuC,EAAYtG,MAAQ,GAEtBwG,GACZzE,UAAU,gBACVhI,MAAMuM,IACNtE,QACAF,OAAwB,SACxBrG,KAAK,QAAS,eACdA,KAAK,IAAKwE,EAAOlY,GACjB0T,KAAK,IAAK,IACVA,KAAK,KAAM,WAGV,MAFc+K,GAAMzE,UAAU,SAASngB,OAC5B2hB,WAAWiD,EAAM/K,KAAK,OACb,OAErB6G,KAAK,SAACpoB,GAAM,WAAM0rB,EAAiB1rB,GAAK,KAASmL,QAAQ,GAAE,KAI9D4b,GACG5F,GAAG,YAAa,WACflgB,EAAG0mB,OAAOjlB,MACPulB,aACAC,SAAS,KACT3G,KAAK,SAAU,WACfA,KAAK,eAAgB,OAEzBJ,GAAG,WAAY,WACdlgB,EAAG0mB,OAAOjlB,MACPulB,aACAC,SAAS,KACT3G,KAAK,SAAU,SAACvhB,GAAW,MAAA2lB,GAAgB3lB,EAAEqD,iBAC7Cke,KAAK,eAAgB,QAyC9B,IAAIgL,MACEnG,EAAkB8F,EAAAM,SAAS,WAE/BD,EAAYnqB,QAAQ,SAAApB,GAAK,MAAAA,GAAEwmB,OAC3B+E,KAGAJ,EAAOrM,KAAK,SAAS1b,GACnB,GAAMqoB,GAAU/pB,IAChB,IAAgB,OAAZ+pB,EAAJ,CAKA,GAAM3qB,GAAmB8d,EAAA/d,sBAGnBipB,EAAS2B,EAAQC,cACnBpN,EAASlb,EAAOkb,MACL,QAAXwL,IACFxL,EAASwL,EAAO6B,aAElB,IAAM5G,IACJlY,EAAIzJ,EAAO0hB,MAAQ,EACnBhY,EAAIwR,EAAS,GAIT+G,EAAaC,EAChBC,gBAAgBniB,EAAOO,YACvB2hB,MAAM,YAAaA,EAAME,aAAa,SAACxmB,GAAsB,MAA2B,IAA3B4lB,EAAgB5lB,EAAE8D,SAAe2iB,SAAS,IAAKC,WAAW,IACvHJ,MAAM,IAAKA,EAAMO,OAAOd,EAAOlY,IAC/ByY,MAAM,IAAKA,EAAMQ,OAAO,SAAC9mB,GAAsB,MAAAA,GAAEqD,gBAAkBvB,EAA8B,GAAXikB,EAAOjY,EAAUiY,EAAOjY,KAG3Gue,EAAQprB,EAAG0mB,OAAO8E,GAClB1F,EAAUsF,EAAMxE,UAAmC,UACzDxB,GAAWlF,GAAG,OAAQ,WACpB4F,EACGxF,KAAK,KAAM,SAACvhB,GACX,MAAOA,GAAE6N,IAEV0T,KAAK,KAAM,SAACvhB,GACX,MAAOA,GAAE8N,KAKf,IAAIqZ,GACEX,EAAeH,EAAWC,MAA0C,YAC1E,QAAqBhiB,KAAjBkiB,EAAJ,CAEA,GAAMC,GAAWD,EAAaC,UAE9BU,GAAiBH,EAAAI,MAAM,SAAAC,GACrB,GAAMC,GAAKD,EAFG,KAIRE,EAAe,GAAMd,EAAa,GAAMhe,KAAK6F,IAAIgZ,EAAI,IAAmBb,EAC9ED,GAAaC,SAASc,GAClBD,GAAM,GACRH,EAAeK,SAInB+E,EAAY/pB,KAAK6jB,QAElB,IAIHW,GAAAC,QAAQb,EAAiB,KAEzB3F,OAAOkC,iBAAiB,SAAUyD,GAElCxG,EAAAtd,0BAA0B,WAExB6pB,EACGtE,UAA4C,WAC5CtG,KAAK,OAAQ,SAACvhB,GAAsB,MAAA0lB,GAAe1lB,EAAEqD,iBAGxD8oB,EACGtE,UAAyC,gBACzCtG,KAAK,OAAQoK,GACbvD,KAAK,SAACpoB,GAAM,WAAM0rB,EAAiB1rB,GAAK,KAASmL,QAAQ,GAAE,MAG9Dib,OjC2iGI,SAAU1mB,EAAQD,EAASH,GAEjC,YkCv2GA,SAAAktB,GAAyBjqB,EAAkBqqB,OAAA,KAAAA,MAAA,GACzC,IAAI9S,EACJ,OAAO,YACH+S,aAAa/S,GACbA,EAAIgT,WAAW,WAAM,MAAAvqB,MAAQqqB,IlCq2GnCxsB,OAAOC,eAAeZ,EAAS,cAAgBsD,OAAO,IkCz2GtDtD,EAAA+sB,YlCu3GM,SAAU9sB,EAAQD,EAASH,GAEjC,YAEAc,QAAOC,eAAeZ,EAAS,cAAgBsD,OAAO,GmC33GtD,IAAA9B,GAAA3B,EAAA,GACAytB,EAAAztB,EAAA,GACA0tB,EAAA1tB,EAAA,IAIMugB,EAAOvgB,EAAQ,IACf2tB,EAAa3tB,EAAQ,IACrB4tB,EAAgB5tB,EAAQ,IAOxB6tB,EAAaJ,EAAIK,cAClBrH,SAAS,IAAK,KACdpgB,MAAM,MACNG,WAAW,IAAK,MAEf0lB,EAAOuB,EAAIM,UACZF,WAAWA,GAEVzF,EAAMzmB,EAAG0mB,OAbE,QAcZ2F,OAAO,UAAW,MAClB/L,KAAK,QAdI,KAeTA,KAAK,SAdK,KAgBTgM,EAAS7F,EAAIE,OAAO,SACrBrG,KAAK,KAAM,UACXA,KAAK,OAAQ,QACbA,KAAK,SAAU,QAEdiM,EAAW9F,EAAIE,OAAO,SACvBrG,KAAK,KAAM,YACXA,KAAK,OAAQ,QACbA,KAAK,SAAU,QAEdwF,EAAUW,EAAIE,OAAO,SACtBrG,KAAK,KAAM,WAEVkM,EAAUxsB,EAAG0mB,OAAO,QAAQC,OAAO,OACpCrG,KAAK,QAAS,WACdmM,MAAM,UAAW,EAEtBH,GAAO1F,UAAU,QACZhI,MAAMoN,IACNnF,QAAQF,OAAO,YACfrG,KAAK,IAAKiK,GAEfgC,EAAS3F,UAAU,QACdhI,KAAKmN,EAAS5mB,QAAQ8mB,EAAeA,EAAcrQ,QAAQ2Q,UAAyC/lB,UACpGqgB,QAAQF,OAAO,YACfrG,KAAK,IAAKiK,GACVjK,KAAK,mBAAoB,WACtB,GAAMoI,GAAOjnB,KAAwBirB,gBACrC,OAAUhE,GAAG,IAAIA,IAEpBpI,KAAK,oBAAqB,WACvB,MAAQ7e,MAAwBirB,mBAIxCH,EAAS3F,UAAU,QACdI,aACAC,SAAS,KACT3G,KAAK,oBAAqB,EAE/B,IAAMqM,GAAY/N,EAAKpY,SAClBvE,IAAI,SAAA2X,GAAK,MAAAsS,IAAYtS,EAAEpU,SAASa,YAAY,GAAIuT,EAAEpU,SAASa,YAAY,OAAS,EAAG,IAGxFyf,GAAQc,UAAU,UACbhI,KAAKA,EAAKpY,UACVqgB,QAAQF,OAAO,cACfrG,KAAK,OAAQ,WACbA,KAAK,eAAgB,OACrBA,KAAK,KAAM,SAACvhB,EAAGL,GAAQ,MAAOiuB,GAAUjuB,GAAG,KAC3C4hB,KAAK,KAAM,SAACvhB,EAAGL,GAAQ,MAAOiuB,GAAUjuB,GAAG,KAC3C4hB,KAAK,IAAK,GAGfwF,EAAQc,UAAU,UACbI,aACAC,SAAS,KACT2F,MAAM,WAAQ,MAAuB,KAAhBplB,KAAKmZ,SAAkB,MAC5CkM,KAAK7sB,EAAG8sB,kBACRxM,KAAK,IAAK,SAACvhB,GAAa,MAAOA,GAAEwG,WAAWwnB,KAAKlrB,SAGtDikB,EAAQc,UAAU,UACb1G,GAAG,YAAa,SAAUnhB,EAAQL,GAE/BsB,EAAG0mB,OAAOjlB,MACLulB,aACAC,SAAS,KACT3G,KAAK,IAAK,SAACvhB,GAAa,MAAkC,KAA3BA,EAAEwG,WAAWwnB,KAAKlrB,SAEtD2qB,EAAQxF,aACHC,SAAS,KACTwF,MAAM,UAAW,IAEtBD,EAAQQ,KAAKjuB,EAAEwG,WAAWwnB,MACrBN,MAAM,OAASzsB,EAAGitB,MAAW,MAAI,MACjCR,MAAM,MAAQzsB,EAAGitB,MAAMC,MAAQ,GAAM,QAE7ChN,GAAG,WAAY,WACZlgB,EAAG0mB,OAAOjlB,MACLulB,aACAC,SAAS,KACT3G,KAAK,IAAK,SAACvhB,GAAa,MAAOA,GAAEwG,WAAWwnB,KAAKlrB,SAEtD2qB,EAAQxF,aACHC,SAAS,KACTwF,MAAM,UAAW,MnC42GxB,SAAUhuB,EAAQmF,EAAqBvF,GAE7C,YACAc,QAAOC,eAAewE,EAAqB,cAAgB9B,OAAO,GAC7C,IAAI2b,GAAgDpf,EAAoB,EAC9CA,GAAoBU,EAAE6E,EAAqB,OAAQ,WAAa,MAAO6Z,GAAiD,IACxHpf,EAAoBU,EAAE6E,EAAqB,UAAW,WAAa,MAAO6Z,GAAiD,IAC3Hpf,EAAoBU,EAAE6E,EAAqB,OAAQ,WAAa,MAAO6Z,GAAiD,IACxHpf,EAAoBU,EAAE6E,EAAqB,WAAY,WAAa,MAAO6Z,GAAiD,IAC5Hpf,EAAoBU,EAAE6E,EAAqB,QAAS,WAAa,MAAO6Z,GAAiD,IACzHpf,EAAoBU,EAAE6E,EAAqB,YAAa,WAAa,MAAO6Z,GAAiD,IAC7Hpf,EAAoBU,EAAE6E,EAAqB,YAAa,WAAa,MAAO6Z,GAAiD,IAC7Hpf,EAAoBU,EAAE6E,EAAqB,WAAY,WAAa,MAAO6Z,GAAiD,IAC5Hpf,EAAoBU,EAAE6E,EAAqB,YAAa,WAAa,MAAO6Z,GAAiD,IAC7Hpf,EAAoBU,EAAE6E,EAAqB,cAAe,WAAa,MAAO6Z,GAAiD,GACzJ,IAAI0P,GAAgD9uB,EAAoB,GAC9CA,GAAoBU,EAAE6E,EAAqB,WAAY,WAAa,MAAOupB,GAAiD,GACtJ,IAAIC,GAAkD/uB,EAAoB,GAChDA,GAAoBU,EAAE6E,EAAqB,SAAU,WAAa,MAAOwpB,GAAmD,IAC5H/uB,EAAoBU,EAAE6E,EAAqB,iBAAkB,WAAa,MAAOwpB,GAAmD,IACpI/uB,EAAoBU,EAAE6E,EAAqB,uBAAwB,WAAa,MAAOwpB,GAAmD,IAC1I/uB,EAAoBU,EAAE6E,EAAqB,eAAgB,WAAa,MAAOwpB,GAAmD,IAClI/uB,EAAoBU,EAAE6E,EAAqB,iBAAkB,WAAa,MAAOwpB,GAAmD,IACpI/uB,EAAoBU,EAAE6E,EAAqB,qBAAsB,WAAa,MAAOwpB,GAAmD,IACxI/uB,EAAoBU,EAAE6E,EAAqB,cAAe,WAAa,MAAOwpB,GAAmD,IACjI/uB,EAAoBU,EAAE6E,EAAqB,WAAY,WAAa,MAAOwpB,GAAmD,IAC9H/uB,EAAoBU,EAAE6E,EAAqB,WAAY,WAAa,MAAOwpB,GAAmD,IAC9H/uB,EAAoBU,EAAE6E,EAAqB,oBAAqB,WAAa,MAAOwpB,GAAmD,IACvI/uB,EAAoBU,EAAE6E,EAAqB,wBAAyB,WAAa,MAAOwpB,GAAmD,KAQpL,SAAU3uB,EAAQmF,EAAqBvF,GAE7C,YoCpgHAuF,GAAA,WAAA4H,EAAAhM,GAEA,IADA,GAAAmC,GAAAqD,EAAAwG,EAAA3J,OAAAnD,EAAAsG,EAAAxF,EACAd,IAAAsG,GAAArD,EAAA6J,EAAA9M,GAAA8M,EAAA9M,KAAA8M,EAAAxG,GAAAwG,EAAAxG,GAAArD,IpC2gHM,SAAUlD,EAAQmF,EAAqBvF,GAE7C,YqCxgHA,SAAAgvB,GAAAjoB,EAAA1F,EAAA4C,GACA,GAAAwD,GAAApH,EAAAc,CACA,IAAAoC,UAAAC,OAAA,EAAAiE,EAAAwnB,EAAAloB,EAAA1F,EAAA4C,OACA,KAAA5D,EAAA,EAAAoH,EAAA,GAAAZ,OAAA1F,EAAA4F,EAAAU,KAAAjE,QAA8DnD,EAAAc,IAAOd,EAAAoH,EAAApH,IACrE,QAAU+G,KAAA,kBAAAK,KAAA3G,OAAAouB,EAAA,GAAAnoB,EAAAU,IAGV,QAAAwnB,GAAAloB,EAAA1F,EAAA4C,GAKA,QAAAkrB,GAAA9uB,GACA,GAAAsG,GAAAtG,EAAA,GAAAA,KACA+uB,EAAAzoB,KAAAyoB,EAAAzoB,QAAAzD,MAAkD7C,IAAAkN,EAAA8hB,IAGlD,QAAAC,GAAA7nB,GACAA,EAAA3E,QAAAqsB,GAGA,QAAAI,GAAA9nB,GACAA,EAAA3E,QAAAwsB,GAGA,QAAAE,GAAA/nB,GACAA,EAAA3E,QAAAysB,GAGA,QAAApoB,GAAAtG,GACA,OAAAwuB,EAAAxuB,IAAAuG,MACA,yBAAAvG,EAAAoH,WAAAnF,QAAAqE,EAAgE,MAChE,kBAAAmoB,EAAAzuB,EAAA4G,KAA0C,MAC1C,qCAAA8nB,EAAA1uB,EAAA4G,KAA+D,MAC/D,oBAAA+nB,EAAA3uB,EAAA4G,OA1BA,GAEA4nB,GAFA5nB,KACA2nB,IAmCA,OANAjoB,GAAA9F,GAEA+tB,EAAAtsB,QAAA,MAAAmB,EACA,SAAAwrB,GAAyBhoB,EAAAvE,KAAAusB,EAAA,GAAApvB,IACzB,SAAAovB,GAAyBxrB,EAAAwrB,EAAA,GAAAliB,EAAAkiB,IAAAjsB,OAAA,GAAA+J,IAAA9F,EAAAvE,KAAAusB,EAAA,GAAApvB,KAEzBoH,ErC69GiClC,EAAuB,EAAIypB,CACvC,IAAIU,GAAyC1vB,EAAoB,GAC7DkvB,EAAwClvB,EAAoB,GqC/gHrFuF,GAAA,WAAAwB,GACA,MAAAjG,QAAA4uB,EAAA,GAAA3oB,EAAAioB,EAAAW,MAAAvsB,KAAAG,crCwkHM,SAAUnD,EAAQmF,EAAqBvF,GAE7C,YsC3kHA,SAAA4J,GAAA9B,GAEA,IADA,GAAAN,GAAAnH,GAAA,EAAAc,EAAA2G,EAAAtE,OAAAkG,EAAA5B,EAAA3G,EAAA,GAAA0I,EAAA,IACAxJ,EAAAc,GAAAqG,EAAAkC,IAAA5B,EAAAzH,GAAAwJ,GAAArC,EAAA,GAAAkC,EAAA,GAAAlC,EAAA,GAAAkC,EAAA,EACA,OAAAP,MAAAQ,IAAAE,GAOA,QAAA+lB,GAAA7oB,EAAAwW,GAOA,QAAApW,GAAAtG,GACA,OAAAA,EAAAuG,MACA,yBAAAvG,EAAAoH,WAAAnF,QAAAqE,EAAgE,MAChE,eAAA0oB,EAAAhvB,EAAA4G,KAAsC,MACtC,oBAAA5G,EAAA4G,KAAA3E,QAAA+sB,IAIA,QAAAA,GAAA9nB,GACAA,EAAAjF,QAAA,SAAAgF,GACAA,EAAAhF,QAAA,SAAAuE,IACAyoB,EAAAzoB,IAAA,GAAAA,OAAAyoB,EAAAzoB,QAAAnE,KAAA6E,OAGAgoB,EAAA7sB,KAAA6E,GAGA,QAAA8B,GAAA/B,GACA,MAAA8B,GAAA9I,OAAA4uB,EAAA,GAAA3oB,GAA4CK,KAAA,UAAAK,MAAAK,KAA8BE,YAAA,IAxB1E,GAAA8nB,MACAC,KACAC,IAmDA,OAjDAzS,GAAAza,QAAAqE,GAuBA4oB,EAAAjtB,QAAA,SAAAiF,GACA,IAAAA,EAAAkoB,EAAA,CACA,GAAAC,MACAC,GAAApoB,EAGA,KAFAA,EAAAkoB,EAAA,EACAD,EAAA9sB,KAAAgtB,GACAnoB,EAAAooB,EAAA5oB,OACA2oB,EAAAhtB,KAAA6E,GACAA,EAAAjF,QAAA,SAAAgF,GACAA,EAAAhF,QAAA,SAAAuE,GACAyoB,EAAAzoB,EAAA,GAAAA,KAAAvE,QAAA,SAAAiF,GACAA,EAAAkoB,IACAloB,EAAAkoB,EAAA,EACAE,EAAAjtB,KAAA6E,aASAgoB,EAAAjtB,QAAA,SAAAiF,SACAA,GAAAkoB,KAIA7oB,KAAA,eACAK,KAAAuoB,EAAApsB,IAAA,SAAAmsB,GACA,GAAA5uB,GAAAsG,IAmBA,IAhBAsoB,EAAAjtB,QAAA,SAAAiF,GACAA,EAAAjF,QAAA,SAAAgF,GACAA,EAAAhF,QAAA,SAAAuE,GACAyoB,EAAAzoB,EAAA,GAAAA,KAAA7D,OAAA,GACAiE,EAAAvE,KAAAmE,SAOAI,EAAA3G,OAAAouB,EAAA,GAAAnoB,EAAAU,IAKAtG,EAAAsG,EAAAjE,QAAA,EACA,OAAA4sB,GAAA9sB,EAAAjD,EAAA,EAAAwD,EAAAgG,EAAApC,EAAA,IAAiDpH,EAAAc,IAAOd,GACxD+vB,EAAAvmB,EAAApC,EAAApH,KAAAwD,IACAP,EAAAmE,EAAA,GAAAA,EAAA,GAAAA,EAAApH,GAAAoH,EAAApH,GAAAiD,EAAAO,EAAAusB,EAKA,OAAA3oB,MtC8+GiClC,EAAuB,EAAIqqB,CACvC,IAAIF,GAAyC1vB,EAAoB,GAC7DkvB,EAAwClvB,EAAoB,GsCxkHrFuF,GAAA,WAAAwB,GACA,MAAAjG,QAAA4uB,EAAA,GAAA3oB,EAAA6oB,EAAAD,MAAAvsB,KAAAG,ctCirHM,SAAUnD,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIqwB,GAAwCrwB,EAAoB,GuC5rHrFuF,GAAA,WAAAgY,GAIA,QAAA1V,GAAAJ,EAAApH,GACAoH,EAAA3E,QAAA,SAAA0E,GACAA,EAAA,IAAAA,KACA,IAAA3G,GAAAyvB,EAAA9oB,EACA3G,KAAAqC,KAAA7C,GACAiwB,EAAA9oB,IAAAnH,KAIA,QAAA0H,GAAAN,EAAApH,GACAoH,EAAA3E,QAAA,SAAAuE,GAAgCQ,EAAAR,EAAAhH,KAGhC,QAAA8G,GAAAtG,EAAAR,GACA,uBAAAQ,EAAAuG,KAAAvG,EAAAoH,WAAAnF,QAAA,SAAAjC,GAA2EsG,EAAAtG,EAAAR,KAC3EQ,EAAAuG,OAAAmpB,MAAA1vB,EAAAuG,MAAAvG,EAAA4G,KAAApH,GAlBA,GAAAiwB,MACAH,EAAA5S,EAAA3Z,IAAA,WAA0C,WAoB1C2sB,GACAC,WAAA3oB,EACA4oB,gBAAA1oB,EACA2oB,QAAA3oB,EACA4oB,aAAA,SAAAlpB,EAAApH,GAAqCoH,EAAA3E,QAAA,SAAAuE,GAA6BU,EAAAV,EAAAhH,MAGlEkd,GAAAza,QAAAqE,EAEA,QAAA9G,KAAAiwB,GACA,OAAAM,GAAAN,EAAAjwB,GAAAG,EAAAowB,EAAAptB,OAAAmD,EAAA,EAAkEA,EAAAnG,IAAOmG,EACzE,OAAA9C,GAAA8C,EAAA,EAAyB9C,EAAArD,IAAOqD,EAAA,CAChC,GAAA1C,GAAA0vB,EAAAD,EAAAjqB,GAAAmqB,EAAAF,EAAA/sB,IACA1C,EAAAgvB,EAAAU,IAAAxwB,EAAAS,OAAAuvB,EAAA,GAAAlvB,EAAA2vB,SAAA3vB,EAAAwJ,OAAAtK,EAAA,EAAAywB,IACA3vB,EAAAgvB,EAAAW,IAAAzwB,EAAAS,OAAAuvB,EAAA,GAAAlvB,EAAA0vB,SAAA1vB,EAAAwJ,OAAAtK,EAAA,EAAAwwB,GAKA,MAAAV,KvCqsHM,SAAU/vB,EAAQmF,EAAqBvF,GAE7C,YwClvHAuF,GAAA,WAAAiC,EAAA+G,GAEA,IADA,GAAAwiB,GAAA,EAAA1V,EAAA7T,EAAAhE,OACAutB,EAAA1V,GAAA,CACA,GAAA2V,GAAAD,EAAA1V,IAAA,CACA7T,GAAAwpB,GAAAziB,EAAAwiB,EAAAC,EAAA,EACA3V,EAAA2V,EAEA,MAAAD,KxCyvHM,SAAU3wB,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIixB,GAAsCjxB,EAAoB,IAC1DkxB,EAA6ClxB,EAAoB,GyCjwH1FuF,GAAA,WAAAwB,EAAAd,GAcA,QAAAkrB,GAAAvpB,GACA,MAAAtE,GAAAsE,GAGA,QAAAwpB,GAAA1qB,GACA,GAAAE,EACA,QAAAF,EAAAU,MACA,yBAAAR,GAA2CQ,KAAA,qBAAAa,WAAAvB,EAAAuB,WAAArE,IAAAwtB,GAAgF,MAC3H,aAAAxqB,GAA8BQ,KAAA,QAAAY,YAAAmpB,EAAAzqB,EAAAsB,aAA8D,MAC5F,kBAAApB,GAAmCQ,KAAA,aAAAY,YAAAtB,EAAAsB,YAAApE,IAAAutB,GAAuE,MAC1G,eAAAzqB,GAKA,MAHA,OAAAA,EAAAM,KAAAJ,EAAAI,GAAAN,EAAAM,IACA,MAAAN,EAAAO,OAAAL,EAAAK,KAAAP,EAAAO,MACA,MAAAP,EAAAQ,aAAAN,EAAAM,WAAAR,EAAAQ,YACAN,EAGA,QAAAyqB,GAAA3qB,GACA,GAAAjF,GAAApB,EAAA,EAAAsG,EAAA,EAAAxF,EAAAuF,EAAAlD,OAAAoD,EAAA,GAAAC,OAAA1F,EAEA,KADAyF,EAAA,GAAAtD,EAAAoD,EAAA,QACArG,EAAAc,KAAAM,EAAA6B,EAAAoD,EAAArG,OAAA,IAAAoB,EAAA,MAAAmF,EAAAD,KAAAlF,EAGA,OAFA,KAAAkF,IAAAC,EAAAD,MAAA,MACAC,EAAApD,OAAAmD,EACAC,EArCA,GAAAG,EAAAd,UAAA,SAAA+C,OAAA,oBAEA,IAAA/C,KAAAI,MAMAirB,EAAAvqB,EAAAE,SANA,CACA,MAAA9F,EAAAgI,KAAAmS,MAAArV,KAAA,YAAA+C,OAAA,eACAsoB,GAAAvqB,EAAAE,MAAAnG,OAAAmwB,EAAA,GAAAlqB,EACA,IAAA5F,GAAA+E,EAAAorB,EAAA,GAAAnrB,EAAAmrB,EAAA,GAAAlU,EAAAkU,EAAA,GAAAjU,EAAAiU,EAAA,EACArrB,IAAiBI,OAAA+W,EAAAlX,GAAAkX,EAAAlX,IAAA/E,EAAA,KAAAkc,EAAAlX,GAAAkX,EAAAlX,IAAAhF,EAAA,MAAAqF,WAAAN,EAAAC,IAKjB,GAAAmrB,GAAAttB,EAAAV,EAAAxC,OAAAowB,EAAA,GAAAjrB,GAAAsrB,EAAAxqB,EAAAwW,QAAAiU,IA6BA,KAAAxtB,IAAAutB,GAAAC,EAAAxtB,GAAAotB,EAAAG,EAAAvtB,GAEA,QACAoD,KAAA,WACAH,KAAAqqB,EACArrB,YACAsX,QAAAiU,EACA/pB,KAAAV,EAAAU,KAAA7D,IAAAytB,MzC4wHM,SAAUjxB,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIyxB,GAA8CzxB,EAAoB,GAC1DA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOksB,GAA+C,KAM9I,SAAUrxB,EAAQmF,EAAqBvF,GAE7C,Y0CzwHA,SAAA0xB,GAAArqB,GACA,GAAA/D,GAAAjD,EAAAgH,EAAA,GAAAV,EAAAU,EAAA,EAEA,OADAV,GAAAtG,IAAAiD,EAAAjD,IAAAsG,IAAArD,GACAjD,EAAA,GAAAsG,EAGA,QAAAgrB,GAAAC,EAAAC,GACA,GACAvuB,GADAwuB,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GACAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,EAGA,OAFAE,GAAAD,IAAAxuB,EAAAwuB,IAAAC,IAAAzuB,GACA2uB,EAAAD,IAAA1uB,EAAA0uB,IAAAC,IAAA3uB,GACAwuB,IAAAE,GAAAD,IAAAE,E1C+vHqB,GAAIC,GAAwClyB,EAAoB,IAC5DmyB,EAAqCnyB,EAAoB,IACzDoyB,EAAuCpyB,EAAoB,IAC3DqyB,EAAuCryB,EAAoB,IAC3DsyB,EAAyCtyB,EAAoB,IAC7DuyB,EAA0CvyB,EAAoB,IAC9DwyB,EAA8CxyB,EAAoB,GAClEyyB,EAA6CzyB,EAAoB,GAa7DuF,GAAuB,EAAI,S0Cp1HxDgY,EAAAmV,GAiBA,QAAAC,GAAAxrB,GACAA,GAAAyrB,EAAApxB,eAAA2F,EAAAC,OAAAwrB,EAAAzrB,EAAAC,MAAAD,GAWA,QAAA0rB,GAAAxrB,GACA,GAAAupB,KACA,IACA,GAAAjuB,GAAAmwB,EAAA5xB,IAAAmG,EACAupB,GAAA1tB,KAAAmE,EAAA,GAAAA,EAAA,GAAA1E,YACK0E,IAAA0rB,KACL,OAAAnC,GAGA,QAAAoC,GAAAvrB,GACA,MAAAA,GAAA7D,IAAAivB,GAtCA,GAAA5rB,GAAAnG,OAAAoxB,EAAA,GAAA3U,EAAAzc,OAAAyxB,EAAA,GAAAhV,IACAtX,EAAAysB,EAAA,GAAAzrB,GAAAnG,OAAA2xB,EAAA,GAAAlV,EAAAtW,EAAAyrB,GACA3rB,EAAAjG,OAAAsxB,EAAA,GAAAtxB,OAAAqxB,EAAA,GAAArxB,OAAAwxB,EAAA,GAAA/U,KACAvV,EAAAjB,EAAAiB,YACA8qB,EAAAhyB,OAAA0xB,EAAA,OAAAzrB,EAAAU,KAAAjE,OAAAkuB,EAAAC,EAEApU,GAAAxW,EAAAwW,QACAxW,EAAAE,OACAF,EAAAU,KAAAV,EAAAU,KAAA7D,IAAA,SAAAyD,EAAAhH,GAEA,MADAyyB,GAAApqB,IAAArB,EAAAhH,GACA2H,EAAAlG,MAAAuF,EAAA,GAAAA,EAAA,cAGAN,GAAAiB,YACAA,EAAA,IAMA,IAAA4qB,IACAK,mBAAA,SAAApyB,GAAqCA,EAAAoH,WAAAnF,QAAA6vB,IACrCnC,WAAA,SAAA3vB,GAA6BA,EAAA4G,KAAAorB,EAAAhyB,EAAA4G,OAC7BgpB,gBAAA,SAAA5vB,GAAkCA,EAAA4G,KAAA5G,EAAA4G,KAAA7D,IAAAivB,IAClCnC,QAAA,SAAA7vB,GAA0BA,EAAA4G,KAAA5G,EAAA4G,KAAA7D,IAAAivB,IAC1BlC,aAAA,SAAA9vB,GAA+BA,EAAA4G,KAAA5G,EAAA4G,KAAA7D,IAAAovB,IAgB/B,QAAAhvB,KAAAuZ,GACAoV,EAAApV,EAAAvZ,GAQA,OALAiC,KACAc,EAAAd,YACAc,EAAAU,KAAA3G,OAAAuxB,EAAA,GAAAtrB,EAAAU,OAGAV,I1Cw2HM,SAAU3G,EAAQmF,EAAqBvF,GAE7C,Y2Cx6HAuF,GAAA,WAAAgY,GAMA,QAAA2V,GAAA/rB,GACA,MAAAA,GAAAgsB,EAAA3xB,eAAA2F,EAAAC,OAAA+rB,EAAAhsB,EAAAC,MAAAD,GAaA,QAAAisB,GAAAprB,GACA,GAAAuG,GAAAvG,EAAA,GACAwG,EAAAxG,EAAA,EACAuG,GAAArI,MAAAqI,GACAA,EAAA6O,MAAA7O,GACAC,EAAArI,MAAAqI,GACAA,EAAA6O,MAAA7O,GAGA,QAAA6kB,GAAArrB,GACAA,EAAAlF,QAAAswB,GAGA,QAAAE,GAAAtrB,GACAA,EAAAlF,QAAAuwB,GAjCA,GAAAntB,GAAA2U,IACA1U,EAAA0U,IACAuC,GAAAvC,IACAwC,GAAAxC,IAMAsY,GACAF,mBAAA,SAAApyB,GAAqCA,EAAAoH,WAAAnF,QAAAowB,IACrCK,MAAA,SAAA1yB,GAAwBuyB,EAAAvyB,EAAAmH,cACxBwrB,WAAA,SAAA3yB,GAA6BA,EAAAmH,YAAAlF,QAAAswB,IAC7B5C,WAAA,SAAA3vB,GAA6BwyB,EAAAxyB,EAAA4G,OAC7BgpB,gBAAA,SAAA5vB,GAAkCA,EAAA4G,KAAA3E,QAAAuwB,IAClC3C,QAAA,SAAA7vB,GAA0BA,EAAA4G,KAAA3E,QAAAuwB,IAC1B1C,aAAA,SAAA9vB,GAA+BA,EAAA4G,KAAA3E,QAAAwwB,IAoB/B,QAAAtvB,KAAAuZ,GACA2V,EAAA3V,EAAAvZ,GAGA,OAAAoZ,IAAAlX,GAAAmX,GAAAlX,GAAAD,EAAAC,EAAAiX,EAAAC,OAAArY,K3Cg7HM,SAAU5E,EAAQmF,EAAqBvF,GAE7C,Y4Cz6HA,SAAAyzB,GAAAtmB,EAAA4Q,EAAAC,EAAA6B,GACA2M,EAAArf,EAAA4Q,EAAAC,GACAwO,EAAArf,EAAA4Q,IAAA8B,GACA2M,EAAArf,EAAA4Q,EAAA8B,EAAA7B,GAGA,QAAAwO,GAAArf,EAAA4Q,EAAAC,GACA,OAAA1a,GAAA0tB,EAAAjT,GAAAC,IAAAD,GAAA,GAAmDA,EAAAiT,IAAajT,IAAAC,EAChE1a,EAAA6J,EAAA4Q,GAAA5Q,EAAA4Q,GAAA5Q,EAAA6Q,GAAA7Q,EAAA6Q,GAAA1a,E5Ck6HqB,GAAIowB,GAAsC1zB,EAAoB,G4Cx9HnFuF,GAAA,WAAAwB,GACA,GAIAgsB,GACA1yB,EAAAc,EALAwyB,EAAA7yB,OAAA4yB,EAAA,GAAA3sB,GACAiB,EAAAjB,EAAAiB,YACA4rB,EAAA7sB,EAAA6sB,MACAC,EAAA9sB,EAAA8sB,KAIA,KAAAxzB,EAAA,EAAAc,EAAAyyB,EAAApwB,OAA+BnD,EAAAc,IAAOd,EAItC,IAHA,GAAAwH,GAAA+rB,EAAAvzB,GACAyzB,EAAAjsB,EAAA,GACAksB,EAAAlsB,EAAA,KACAisB,EAAAC,GACAJ,EAAAK,IAAAhsB,EAAA8rB,MACAf,GAAgBkB,EAAAH,EAAAI,EAAArsB,EAAA,IAChBA,EAAA,GAAAisB,EACAjsB,IAAAkrB,OAKA,KAAA1yB,EAAA,EAAAc,EAAA0yB,EAAArwB,OAA+BnD,EAAAc,IAAOd,EAMtC,IALA,GAAAyH,GAAA+rB,EAAAxzB,GACA8zB,EAAArsB,EAAA,GACAssB,EAAAD,EACAE,EAAAvsB,EAAA,GACAwsB,EAAAX,EAAAK,IAAAhsB,EAAAmsB,MACAC,EAAAC,GACAV,EAAAK,IAAAhsB,EAAAosB,MACAE,GACAvB,GAAkBkB,EAAAG,EAAAF,EAAApsB,EAAA,IAClBA,EAAA,GAAAssB,EACAtsB,IAAAirB,SAEAU,EAAAzrB,EAAAmsB,EAAAE,IAAAD,GACApsB,EAAAqsB,GAAArsB,EAAAmsB,GACAG,GAAA,EACAF,EAAAD,GAMA,OAAAptB,K5Cg/HM,SAAU3G,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIu0B,GAA8Cv0B,EAAoB,IAClEw0B,EAA8Cx0B,EAAoB,GAClEy0B,EAAkDz0B,EAAoB,IACtE00B,EAAiD10B,EAAoB,G6CnhI9FuF,GAAA,WAAAwB,GAiDA,QAAA4tB,GAAAt0B,EAAAu0B,EAAAC,EAAAC,GACA,GAAAC,EAAAF,KAAAx0B,EAAA,CACA00B,EAAAF,GAAAx0B,CACA,IAAA20B,GAAAC,EAAAJ,EACA,IAAAG,GAAA,GACA,GAAAE,GAAAC,EAAAN,EACAG,KAAAJ,GAAAM,IAAAJ,GACAE,IAAAF,GAAAI,IAAAN,MACAQ,EAAAC,EAAAR,GAAA,OAGAI,GAAAJ,GAAAD,EACAO,EAAAN,GAAAC,GAeA,QAAAQ,GAAAj1B,GACA,MAAAS,QAAA4zB,EAAA,GAAA1sB,EAAA3H,IAGA,QAAAk1B,GAAAl1B,EAAAsG,GACA,MAAA7F,QAAA2zB,EAAA,GAAAzsB,EAAA3H,GAAA2H,EAAArB,IAhFA,GASAtG,GAAAc,EACAyzB,EACAC,EACAC,EAZA9sB,EAAAjB,EAAAiB,YACA4rB,EAAA7sB,EAAA6sB,MACAC,EAAA9sB,EAAA8sB,MACAjD,EA6DA,WAIA,OAHA4E,GAAA10B,OAAA0zB,EAAA,OAAAxsB,EAAAxE,OAAA8xB,EAAAC,EAAAE,YAAA,EAAAA,YACA7E,EAAA,GAAA6E,YAAAztB,EAAAxE,QAEAnD,EAAA,EAAAc,EAAA6G,EAAAxE,OAA2CnD,EAAAc,IAAOd,EAClDuwB,EAAAvwB,GAAAm1B,EAAAvsB,SAAA5I,IAGA,OAAAuwB,MApEAmE,EAAA,GAAAU,YAAAztB,EAAAxE,QACAyxB,EAAA,GAAAQ,YAAAztB,EAAAxE,QACA2xB,EAAA,GAAAM,YAAAztB,EAAAxE,QACA6xB,EAAA,GAAAK,WAAA1tB,EAAAxE,QACA4xB,EAAA,CAMA,KAAA/0B,EAAA,EAAAc,EAAA6G,EAAAxE,OAAqCnD,EAAAc,IAAOd,EAC5C00B,EAAA10B,GAAA40B,EAAA50B,GAAA80B,EAAA90B,IAAA,CAGA,KAAAA,EAAA,EAAAc,EAAAyyB,EAAApwB,OAA+BnD,EAAAc,IAAOd,EAAA,CACtC,GAAAwH,GAAA+rB,EAAAvzB,GACAs1B,EAAA9tB,EAAA,GACAksB,EAAAlsB,EAAA,EAIA,KAHAgtB,EAAAjE,EAAA+E,GACAb,EAAAlE,IAAA+E,KACAP,EAAAC,EAAAR,GAAA,IACAc,GAAA5B,GACAY,EAAAt0B,EAAAu0B,EAAAC,IAAAC,IAAAlE,EAAA+E,MAEAP,EAAAC,EAAAP,GAAA,EAGA,IAAAz0B,EAAA,EAAAc,EAAA6G,EAAAxE,OAAqCnD,EAAAc,IAAOd,EAC5C00B,EAAA10B,IAAA,CAGA,KAAAA,EAAA,EAAAc,EAAA0yB,EAAArwB,OAA+BnD,EAAAc,IAAOd,EAAA,CACtC,GAAAyH,GAAA+rB,EAAAxzB,GACA8zB,EAAArsB,EAAA,KACAusB,EAAAvsB,EAAA,EAKA,KAJA8sB,EAAAhE,EAAAyD,EAAA,GACAQ,EAAAjE,EAAAuD,EAAA,GACAW,EAAAlE,EAAAuD,GACAQ,EAAAt0B,EAAAu0B,EAAAC,EAAAC,KACAX,GAAAE,GACAM,EAAAt0B,EAAAu0B,EAAAC,IAAAC,IAAAlE,EAAAuD,IAuCAY,EAAAE,EAAAE,EAAA,IAEA,IAAAxuB,GAAAivB,EAAA90B,OAAAyzB,EAAA,OAAAa,EAAAV,EAAA,EAAAD,EAAA,EAGA,KAAAp0B,EAAA,EAAAc,EAAA6G,EAAAxE,OAAqCnD,EAAAc,IAAOd,EAC5Cg1B,EAAA1uB,EAAAiqB,EAAAvwB,KACAu1B,EAAAC,IAAA7tB,EAAArB,GAIA,OAAAivB,K7C6iIM,SAAUx1B,EAAQmF,EAAqBvF,GAE7C,Y8CjqIAuF,GAAA,WAAA6C,EAAAC,EAAAC,EAAAlB,EAAA0uB,GAaA,QAAAD,GAAApyB,GAIA,IAHA,GAAAd,GAAA0F,EAAA5E,GAAAkF,EACAiU,EAAAmZ,EAAApzB,GACAmG,EAAA,EACA8T,GAAAkZ,GAAA,CACA,GAAAxtB,EAAAsU,EAAAnZ,GAAA,QACA,MAAAqF,GAAAV,EAAA,SAAAY,OAAA,eACA4T,GAAAmZ,EAAApzB,IAAA,EAAAgG,GAGA,MADAotB,GAAApzB,GAAAc,GACA,EAGA,QAAAuwB,GAAAvwB,GAIA,IAHA,GAAAd,GAAA0F,EAAA5E,GAAAkF,EACAiU,EAAAmZ,EAAApzB,GACAmG,EAAA,EACA8T,GAAAkZ,GAAA,CACA,GAAAxtB,EAAAsU,EAAAnZ,GAAA,QACA,MAAAqF,GAAAV,EAAA,KACAwU,GAAAmZ,EAAApzB,IAAA,EAAAgG,GAEA,SAGA,QAAAqtB,KAEA,OADAA,MACA31B,EAAA,EAAAc,EAAA40B,EAAAvyB,OAAqCnD,EAAAc,IAAOd,EAAA,CAC5C,GAAAuc,GAAAmZ,EAAA11B,EACAuc,IAAAkZ,GAAAE,EAAA9yB,KAAA0Z,GAEA,MAAAoZ,GA3CA,IAAAzyB,UAAAC,SACA4D,EAAAP,MACAivB,EAAA,KAMA,QAHAC,GAAA,GAAA3uB,GAAAgB,EAAA,GAAAe,KAAAC,IAAA,EAAAD,KAAAE,KAAAF,KAAAG,IAAAlB,GAAAe,KAAAI,OACAZ,EAAAP,EAAA,EAEA/H,EAAA,EAAiBA,EAAA+H,IAAU/H,EAC3B01B,EAAA11B,GAAAy1B,CAqCA,QACAD,MACA7B,MACAgC,Y9CyqIM,SAAU51B,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIi2B,GAA8Cj2B,EAAoB,GAClEk2B,EAAkDl2B,EAAoB,IACtEm2B,EAAiDn2B,EAAoB,G+C3tI9FuF,GAAA,WAAAwB,GAuCA,QAAAqvB,GAAA/uB,GACA,GAAAgvB,GACAC,EACAC,EAAAC,EACAC,EAAAC,EACAr2B,EAAAc,CAGA,IAAAo1B,EAAAI,EAAAz1B,IAAAm1B,EAAAruB,EAAAX,EAAA,KACA,IAAAhH,EAAA,EAAAc,EAAAo1B,EAAA/yB,OAAuCnD,EAAAc,IAAOd,EAE9C,GADAm2B,EAAAD,EAAAl2B,GACAu2B,EAAAJ,EAAAnvB,GAGA,MAFAA,GAAA,GAAAmvB,EAAA,QACAnvB,EAAA,GAAAmvB,EAAA,GAOA,IAAAC,EAAAE,EAAAz1B,IAAAo1B,EAAAtuB,EAAAX,EAAA,KACA,IAAAhH,EAAA,EAAAc,EAAAs1B,EAAAjzB,OAAqCnD,EAAAc,IAAOd,EAE5C,GADAq2B,EAAAD,EAAAp2B,GACAw2B,EAAAH,EAAArvB,GAGA,MAFAA,GAAA,GAAAqvB,EAAA,QACArvB,EAAA,GAAAqvB,EAAA,GAMAH,KAAArzB,KAAAmE,GAAuCsvB,EAAAjuB,IAAA2tB,GAAAhvB,IACvCovB,IAAAvzB,KAAAmE,GAAmCsvB,EAAAjuB,IAAA4tB,GAAAjvB,IACnCI,EAAAvE,KAAAmE,GAgDA,QAAAuvB,GAAAhF,EAAAC,GACA,GAAAC,GAAAF,EAAA,GAAAI,EAAAH,EAAA,GACAE,EAAAH,EAAA,EACA,IAAAE,EAAAC,GAAAC,EADAH,EAAA,GACA,QACA,MAAUC,GAAAC,IAAUD,IAAAE,EAAA,IAAAlxB,OAAAo1B,EAAA,GAAAluB,EAAA8pB,GAAA9pB,EAAAgqB,IAAA,QACpB,UAGA,QAAA6E,GAAAjF,EAAAC,GACA,GAAAC,GAAAF,EAAA,GAAAI,EAAAH,EAAA,GACAE,EAAAH,EAAA,GAAAK,EAAAJ,EAAA,EACA,IAAAC,EAAAC,GAAAC,EAAAC,EAAA,QACA,MAAUH,GAAAC,IAAUD,IAAAG,EAAA,IAAAnxB,OAAAo1B,EAAA,GAAAluB,EAAA8pB,GAAA9pB,EAAAiqB,IAAA,QACpB,UAGA,QAAA6E,GAAAlF,EAAAC,GACA,GAAAC,GAAAF,EAAA,GAAAI,EAAAH,EAAA,GACAE,EAAAH,EAAA,GAAAK,EAAAJ,EAAA,GACA1wB,EAAA4wB,EAAAD,CACA,IAAA3wB,IAAA8wB,EAAAD,EAAA,QAGA,QAFA+E,GAAAC,EAAApF,GACAqF,EAAAD,EAAAnF,GACAxxB,EAAA,EAAmBA,EAAAc,IAAOd,EAC1B,IAAAS,OAAAo1B,EAAA,GAAAluB,EAAA8pB,GAAAzxB,EAAA02B,GAAA51B,GAAA6G,EAAAgqB,GAAA3xB,EAAA42B,GAAA91B,IAAA,QAEA,UAGA,QAAA+1B,GAAAtF,EAAAC,GACA,GAAAC,GAAAF,EAAA,GAAAI,EAAAH,EAAA,GACAE,EAAAH,EAAA,GAAAK,EAAAJ,EAAA,GACA1wB,EAAA4wB,EAAAD,CACA,IAAA3wB,IAAA8wB,EAAAD,EAAA,QAGA,QAFA+E,GAAAC,EAAApF,GACAqF,EAAA91B,EAAA61B,EAAAnF,GACAxxB,EAAA,EAAmBA,EAAAc,IAAOd,EAC1B,IAAAS,OAAAo1B,EAAA,GAAAluB,EAAA8pB,GAAAzxB,EAAA02B,GAAA51B,GAAA6G,EAAAiqB,GAAA5xB,EAAA42B,GAAA91B,IAAA,QAEA,UAKA,QAAA61B,GAAA3vB,GAMA,IALA,GAAA0W,GAAA1W,EAAA,GACA2W,EAAA3W,EAAA,GACA2pB,EAAAjT,EACAoZ,EAAAnG,EACAoG,EAAApvB,EAAAgpB,KACAA,EAAAhT,GAAA,CACA,GAAApW,GAAAI,EAAAgpB,IACAppB,EAAA,GAAAwvB,EAAA,IAAAxvB,EAAA,KAAAwvB,EAAA,IAAAxvB,EAAA,GAAAwvB,EAAA,MACAD,EAAAnG,EACAoG,EAAAxvB,GAGA,MAAAuvB,GAAApZ,EAhLA,GACAlW,GACAC,EAEAzH,EAAAc,EAJA6G,EAAAjB,EAAAiB,YACA4rB,EAAA7sB,EAAA6sB,MACAC,EAAA9sB,EAAA8sB,MACAwD,EAAAzD,EAAApwB,OAAAqwB,EAAArwB,MAOA,WAJAuD,GAAA6sB,YACA7sB,GAAA8sB,MAGAxzB,EAAA,EAAAc,EAAAyyB,EAAApwB,OAA+BnD,EAAAc,IAAOd,EAClB,IAApBwH,EAAA+rB,EAAAvzB,GAAoBwH,IAAAkrB,QAAAsE,CAEpB,KAAAh3B,EAAA,EAAAc,EAAA0yB,EAAArwB,OAA+BnD,EAAAc,IAAOd,EAClB,IAApByH,EAAA+rB,EAAAxzB,GAAoByH,IAAAirB,QAAAsE,CAGpB,IAAAV,GAAA71B,OAAAm1B,EAAA,KAAAoB,EAAA,IAAAlB,EAAA,EAAAD,EAAA,GACAzuB,EAAAV,EAAAU,OAEA,KAAApH,EAAA,EAAAc,EAAAyyB,EAAApwB,OAA+BnD,EAAAc,IAAOd,EAAA,CACtCwH,EAAA+rB,EAAAvzB,EACA,IACA+1B,EAAAvuB,SACKA,IAAAkrB,MAGL,IAAA1yB,EAAA,EAAAc,EAAA0yB,EAAArwB,OAA+BnD,EAAAc,IAAOd,EAEtC,GADAyH,EAAA+rB,EAAAxzB,GACAyH,EAAAirB,KACA,GACAqD,EAAAtuB,SACOA,IAAAirB,WA0CP,SAAA1rB,GACA,GAAAivB,GACAG,EACAC,EACAr2B,EAAAc,CAIA,IAAAs1B,EAAAE,EAAAz1B,IAAAo1B,EAAAtuB,EAAAX,EAAA,KACA,IAAAhH,EAAA,EAAAc,EAAAs1B,EAAAjzB,OAAqCnD,EAAAc,IAAOd,EAAA,CAE5C,GADAq2B,EAAAD,EAAAp2B,GACAy2B,EAAAJ,EAAArvB,GAGA,MAFAA,GAAA,GAAAqvB,EAAA,QACArvB,EAAA,GAAAqvB,EAAA,GAGA,IAAAQ,EAAAR,EAAArvB,GAGA,MAFAA,GAAA,GAAAqvB,EAAA,QACArvB,EAAA,GAAAqvB,EAAA,IAOA,GAAAD,EAAAE,EAAAz1B,IAAAo1B,EAAAtuB,EAAAX,EAAA,GAAA2vB,EAAA3vB,KACA,IAAAhH,EAAA,EAAAc,EAAAs1B,EAAAjzB,OAAqCnD,EAAAc,IAAOd,EAAA,CAE5C,GADAq2B,EAAAD,EAAAp2B,GACAy2B,EAAAJ,EAAArvB,GAGA,MAFAA,GAAA,GAAAqvB,EAAA,QACArvB,EAAA,GAAAqvB,EAAA,GAGA,IAAAQ,EAAAR,EAAArvB,GAGA,MAFAA,GAAA,GAAAqvB,EAAA,QACArvB,EAAA,GAAAqvB,EAAA,IAMAD,IAAAvzB,KAAAmE,GAAmCsvB,EAAAjuB,IAAA4tB,GAAAjvB,IACnCI,EAAAvE,KAAAmE,IAlFAS,EAiJA,OAAAf,K/CuuIM,SAAU3G,EAAQmF,EAAqBvF,GAE7C,YgD/5IAuF,GAAA,WAAAkC,GAIA,IAHA,GAAApH,IAAA,EACAc,EAAAsG,EAAAjE,SAEAnD,EAAAc,GAAA,CAWA,IAVA,GAOAic,GACAC,EARAhW,EAAAI,EAAApH,GACAsG,EAAA,EACA9C,EAAA,EACArD,EAAA6G,EAAA7D,OACAoE,EAAAP,EAAA,GACAnB,EAAA0B,EAAA,GACAzB,EAAAyB,EAAA,KAIAjB,EAAAnG,GACAoH,EAAAP,EAAAV,GAAAyW,EAAAxV,EAAA,GAAAyV,EAAAzV,EAAA,GACAwV,IAAAlX,GAAAmX,IAAAlX,IAAAkB,EAAAxD,MAAAuZ,EAAAlX,EAAAmX,EAAAlX,GAAAD,EAAAkX,EAAAjX,EAAAkX,EAGA,KAAAxZ,IAAAwD,EAAAxD,MAAA,MAEAwD,EAAA7D,OAAAK,EAGA,MAAA4D,KhDy6IM,SAAUrH,EAAQmF,EAAqBvF,GAE7C,YiDt7IAuF,GAAA,WAAAgY,GAMA,QAAA+Z,GAAAnwB,GACAA,GAAAowB,EAAA/1B,eAAA2F,EAAAC,OAAAmwB,EAAApwB,EAAAC,MAAAD,GAWA,QAAAqwB,GAAA3vB,GACA,OAAAxH,GAAA,EAAAc,EAAA0G,EAAArE,OAAoCnD,EAAAc,IAAOd,EAAA2H,IAAArF,GAAAkF,EAAAxH,EAC3C,IAAAgH,IAAe4sB,EAAAtxB,EAAAxB,EAAA,EAAA+yB,EAAAvxB,EAEf,OADAixB,GAAA1wB,KAAAmE,GACAA,EAGA,QAAAowB,GAAA3vB,GACA,OAAAzH,GAAA,EAAAc,EAAA2G,EAAAtE,OAAoCnD,EAAAc,IAAOd,EAAA2H,IAAArF,GAAAmF,EAAAzH,EAC3C,IAAAgH,IAAe4sB,EAAAtxB,EAAAxB,EAAA,EAAA+yB,EAAAvxB,EAEf,OADAkxB,GAAA3wB,KAAAmE,GACAA,EAGA,QAAAqwB,GAAA7D,GACA,MAAAA,GAAAjwB,IAAA6zB,GAhCA,GAAA90B,IAAA,EACAixB,KACAC,KACA7rB,KAMAuvB,GACAtE,mBAAA,SAAApyB,GAAqCA,EAAAoH,WAAAnF,QAAAw0B,IACrC9G,WAAA,SAAA3vB,GAA6BA,EAAA4G,KAAA+vB,EAAA32B,EAAA4G,OAC7BgpB,gBAAA,SAAA5vB,GAAkCA,EAAA4G,KAAA5G,EAAA4G,KAAA7D,IAAA4zB,IAClC9G,QAAA,SAAA7vB,GAA0BA,EAAA4G,KAAA5G,EAAA4G,KAAA7D,IAAA6zB,IAC1B9G,aAAA,SAAA9vB,GAA+BA,EAAA4G,KAAA5G,EAAA4G,KAAA7D,IAAA8zB,IAqB/B,QAAA1zB,KAAAuZ,GACA+Z,EAAA/Z,EAAAvZ,GAGA,QACAoD,KAAA,WACAY,cACA4rB,QACAC,QACAtW,ajD+8IM,SAAUnd,EAAQmF,EAAqBvF,GAE7C,YkDrgJA,SAAA23B,GAAAjxB,GACA,aAAAA,GAA0BU,KAAA,OAC1B,sBAAAV,EAAAU,KAAAwwB,EACA,YAAAlxB,EAAAU,KAAAywB,EACAC,GAAApxB,GAGA,QAAAkxB,GAAAlxB,GACA,GAAAE,IAAgBQ,KAAA,qBAAAa,WAAAvB,EAAAyB,SAAAvE,IAAAi0B,GAEhB,OADA,OAAAnxB,EAAAO,OAAAL,EAAAK,KAAAP,EAAAO,MACAL,EAGA,QAAAixB,GAAAnxB,GACA,GAAA1C,GAAA4C,EAAAkxB,EAAApxB,EAAAS,SACA,OAAAT,EAAAM,KAAAJ,EAAAI,GAAAN,EAAAM,IACA,MAAAN,EAAAO,OAAAL,EAAAK,KAAAP,EAAAO,KACA,KAAAjD,IAAA0C,GAAAQ,WAAA,CAAiCN,EAAAM,WAAAR,EAAAQ,UAAsC,OACvE,MAAAN,GAGA,QAAAkxB,GAAApxB,GACA,SAAAA,EAAA,OAA6BU,KAAA,KAC7B,IAAAR,GAAA,uBAAAF,EAAAU,MAAsDA,KAAA,qBAAAa,WAAAvB,EAAAuB,WAAArE,IAAAk0B,IACtD,UAAApxB,EAAAU,MAAA,eAAAV,EAAAU,MAAiEA,KAAAV,EAAAU,KAAAY,YAAAtB,EAAAsB,cACxDZ,KAAAV,EAAAU,KAAAK,KAAAf,EAAAsB,YAET,OADA,OAAAtB,EAAAO,OAAAL,EAAAK,KAAAP,EAAAO,MACAL,EAjCArB,EAAA,WAAAgsB,GACA,GAAkBvtB,GAAlBwtB,IACA,KAAAxtB,IAAAutB,GAAAC,EAAAxtB,GAAA2zB,EAAApG,EAAAvtB,GACA,OAAAwtB,KlDojJM,SAAUpxB,EAAQmF,EAAqBvF,GAE7C,YmD7jJAuF,GAAA,WAAAgY,EAAAtW,EAAA9F,GAQA,QAAAgwB,GAAAzqB,GACA,OAAAyC,KAAA2D,OAAApG,EAAA,GAAAR,GAAAE,GAAA+C,KAAA2D,OAAApG,EAAA,GAAAP,GAAAG,IAGA,QAAAyxB,GAAArxB,EAAAlG,GAWA,IAVA,GAIAw3B,GACAC,EACAC,EACA3pB,EACAC,EARAnO,GAAA,EACAsG,EAAA,EACAxF,EAAAuF,EAAAlD,OACAoD,EAAA,GAAAC,OAAA1F,KAOAd,EAAAc,GACA62B,EAAAtxB,EAAArG,GACAkO,EAAApF,KAAA2D,OAAAkrB,EAAA,GAAA9xB,GAAAE,GACAoI,EAAArF,KAAA2D,OAAAkrB,EAAA,GAAA7xB,GAAAG,GACAiI,IAAA0pB,GAAAzpB,IAAA0pB,IAAAtxB,EAAAD,MAAAsxB,EAAA1pB,EAAA2pB,EAAA1pB,GAIA,KADA5H,EAAApD,OAAAmD,EACAA,EAAAnG,GAAAmG,EAAAC,EAAA1D,MAAA0D,EAAA,MAAAA,EAAA,OACA,OAAAA,GAGA,QAAAuxB,GAAAzxB,GACA,MAAAqxB,GAAArxB,EAAA,GAGA,QAAA0xB,GAAA1xB,GACA,MAAAqxB,GAAArxB,EAAA,GAGA,QAAA2xB,GAAA3xB,GACA,MAAAA,GAAA9C,IAAAw0B,GAGA,QAAAhH,GAAAvwB,GACA,MAAAA,GAAAy3B,EAAA92B,eAAAX,EAAAuG,OAAAkxB,EAAAz3B,EAAAuG,MAAAvG,GA/CA,GAAAqF,GAAAe,EAAA,GACAd,EAAAc,EAAA,GACAmW,EAAAnW,EAAA,GACAoW,EAAApW,EAAA,GACAb,EAAAgX,EAAAlX,GAAA/E,EAAA,IAAAic,EAAAlX,GAAA,EACAI,EAAA+W,EAAAlX,GAAAhF,EAAA,IAAAkc,EAAAlX,GAAA,EA6CAmyB,GACArF,mBAAA,SAAApyB,GAAqCA,EAAAoH,WAAAnF,QAAAsuB,IACrCmC,MAAA,SAAA1yB,GAAwBA,EAAAmH,YAAAmpB,EAAAtwB,EAAAmH,cACxBwrB,WAAA,SAAA3yB,GAA6BA,EAAAmH,YAAAnH,EAAAmH,YAAApE,IAAAutB,IAC7BX,WAAA,SAAA3vB,GAA6BA,EAAA4G,KAAA0wB,EAAAt3B,EAAA4G,OAC7BgpB,gBAAA,SAAA5vB,GAAkCA,EAAA4G,KAAA5G,EAAA4G,KAAA7D,IAAAu0B,IAClCzH,QAAA,SAAA7vB,GAA0BA,EAAA4G,KAAA4wB,EAAAx3B,EAAA4G,OAC1BkpB,aAAA,SAAA9vB,GAA+BA,EAAA4G,KAAA5G,EAAA4G,KAAA7D,IAAAy0B,IAG/B,QAAAr0B,KAAAuZ,GACA6T,EAAA7T,EAAAvZ,GAGA,QACAqC,OAAA,EAAAD,EAAA,EAAAE,GACAE,WAAAN,EAAAC,MnDqkJM,SAAU/F,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIu4B,GAA4Cv4B,EAAoB,GACxDA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOgzB,GAA6C,GAC7H,IAAIC,GAAoDx4B,EAAoB,GAChEA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOizB,GAAqD,GACrI,IAAIC,GAA0Dz4B,EAAoB,GACtEA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOkzB,GAA2D,GAC3I,IAAIC,GAAkD14B,EAAoB,GAC9DA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOmzB,GAAmD,GACnI,IAAIC,GAA4C34B,EAAoB,EACxDA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOozB,GAA6C,IACjH34B,EAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOozB,GAA6C,GAC7H,IAAIC,GAAiD54B,EAAoB,GAC7DA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOqzB,GAAkD,GAClI,IAAIC,GAA8C74B,EAAoB,GAC1DA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOszB,GAA+C,GAC/H,IAAIC,GAA8C94B,EAAoB,GAC1DA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOuzB,GAA+C,GAC/H,IAAIC,GAA+C/4B,EAAoB,GAC3DA,GAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOwzB,GAAgD,IACpH/4B,EAAoBU,EAAE6E,EAAqB,IAAK,WAAa,MAAOwzB,GAAgD,KAc/I,SAAU34B,EAAQmF,EAAqBvF,GAE7C,YoDhnJA,SAAAg5B,KACA,SAGA,QAAAC,GAAA1qB,GACA,MAAAA,GAGA,QAAA2qB,GAAA/xB,GACA,aAAAA,EAAAC,KpDwmJqB,GAAI+xB,GAAuCn5B,EAAoB,GoD7qJpFuF,GAAA,WAAAwB,EAAA9C,GAOA,QAAAm1B,GAAA1yB,GACA,GAAAE,GAAAa,CACA,QAAAf,EAAAU,MACA,cACAK,EAAA4xB,EAAA3yB,EAAAe,MACAb,EAAAa,GAAyBL,KAAA,UAAAK,SAAgCL,KAAA,KACzD,MAEA,oBACAK,EAAAf,EAAAe,KAAA7D,IAAAy1B,GAAAp1B,OAAAg1B,GACAryB,EAAAa,EAAAjE,QAAgC4D,KAAA,eAAAK,SAAqCL,KAAA,KACrE,MAEA,0BACAK,EAAAf,EAAAuB,WAAArE,IAAAw1B,GAAAn1B,OAAAi1B,GACAtyB,EAAAa,EAAAjE,QAAgC4D,KAAA,qBAAAa,WAAAR,IAAiDL,KAAA,KACjF,MAEA,eAAAV,GAKA,MAHA,OAAAA,EAAAM,KAAAJ,EAAAI,GAAAN,EAAAM,IACA,MAAAN,EAAAO,OAAAL,EAAAK,KAAAP,EAAAO,MACA,MAAAP,EAAAQ,aAAAN,EAAAM,WAAAR,EAAAQ,YACAN,EAGA,QAAAyyB,GAAA5xB,GACA,MAAAA,GAAAjE,QAAA81B,EAAA7xB,EAAA,KACAA,EAAA,IAAAuF,OAAAvF,EAAA3F,MAAA,GAAAmC,OAAAs1B,IACA,KAGA,QAAAD,GAAAxxB,GACA,MAAA7D,GAAA6D,GAAA,GAGA,QAAAyxB,GAAAzxB,GACA,MAAA7D,GAAA6D,GAAA,GA3CA,GAEA9D,GAFAw1B,EAAAzyB,EAAAwW,QACAkc,IAGA,OAAAx1B,MAAA+0B,EA0CA,KAAAh1B,IAAAw1B,GACAC,EAAAz1B,GAAAo1B,EAAAI,EAAAx1B,GAGA,OAAAlD,QAAAq4B,EAAA,IACA/xB,KAAA,WACAH,KAAAF,EAAAE,KACAhB,UAAAc,EAAAd,UACAsX,QAAAkc,EACAhyB,KAAAV,EAAAU,SpDmsJM,SAAUrH,EAAQmF,EAAqBvF,GAE7C,YqD/vJAuF,GAAA,WAAAwB,GAYA,QAAA2yB,GAAAhzB,GACA,OAAAA,EAAAU,MACA,yBAAAV,EAAAuB,WAAAnF,QAAA42B,EAAwE,MACxE,kBAAAC,EAAAjzB,EAAAe,KAA8C,MAC9C,uBACA,cAAAf,EAAAe,KAAA3E,QAAA62B,EAAmD,MACnD,oBAAAjzB,EAAAe,KAAA3E,QAAA82B,IAIA,QAAAC,GAAAl3B,GACAA,EAAA,IAAAA,MACAm3B,EAAAn3B,KAAAm3B,EAAAn3B,GAAA,IAAAo3B,GAGA,QAAAJ,GAAAlyB,GACAA,EAAA3E,QAAA+2B,GAGA,QAAAD,GAAAnyB,GACAA,EAAA3E,QAAA62B,GAGA,QAAAK,GAAAtzB,GACA,GAAAE,EACA,QAAAF,EAAAU,MACA,yBAAAR,GAA2CQ,KAAA,qBAAAa,WAAAvB,EAAAuB,WAAArE,IAAAo2B,GAA+E,MAC1H,kBAAApzB,GAAmCQ,KAAA,aAAAK,KAAAwyB,EAAAvzB,EAAAe,MAAmD,MACtF,uBAAAb,GAAwCQ,KAAA,kBAAAK,KAAAf,EAAAe,KAAA7D,IAAAq2B,GAA4D,MACpG,eAAArzB,GAAgCQ,KAAA,UAAAK,KAAAf,EAAAe,KAAA7D,IAAAq2B,GAAoD,MACpF,oBAAArzB,GAAqCQ,KAAA,eAAAK,KAAAf,EAAAe,KAAA7D,IAAAs2B,GAA8D,MACnG,eAAAxzB,GAKA,MAHA,OAAAA,EAAAM,KAAAJ,EAAAI,GAAAN,EAAAM,IACA,MAAAN,EAAAO,OAAAL,EAAAK,KAAAP,EAAAO,MACA,MAAAP,EAAAQ,aAAAN,EAAAM,WAAAR,EAAAQ,YACAN,EAGA,QAAAuzB,GAAAC,GACA,MAAAA,GAAA,GAAAN,GAAAM,GAAAN,EAAAM,GAGA,QAAAH,GAAAxyB,GACA,MAAAA,GAAA7D,IAAAu2B,GAGA,QAAAD,GAAAzyB,GACA,MAAAA,GAAA7D,IAAAq2B,GA3DA,GAOAI,GAEAr2B,EATAw1B,EAAAzyB,EAAAwW,QACAkc,KACAa,EAAAvzB,EAAAU,KACA8yB,EAAAD,EAAA92B,OACA42B,GAAA,EACAN,EAAA,GAAAjzB,OAAA0zB,GACAR,EAAA,EAEAS,GAAA,CAsDA,KAAAx2B,IAAAw1B,GACAE,EAAAF,EAAAx1B,GAKA,KAFAq2B,EAAA,GAAAxzB,OAAAkzB,KAEAK,EAAAG,GACAT,EAAAM,KACAN,EAAAM,KAAAI,EACAH,EAAAG,GAAAF,EAAAF,GAIA,KAAAp2B,IAAAw1B,GACAC,EAAAz1B,GAAAg2B,EAAAR,EAAAx1B,GAGA,QACAoD,KAAA,WACAH,KAAAF,EAAAE,KACAhB,UAAAc,EAAAd,UACAsX,QAAAkc,EACAhyB,KAAA4yB,KrDuwJM,SAAUj6B,EAAQmF,EAAqBvF,GAE7C,YACqB,IAAIy6B,GAAgDz6B,EAAoB,IACpE06B,EAA8C16B,EAAoB,GsD71J3FuF,GAAA,WAAAwB,EAAAuY,EAAA5O,GACA,GAAAlJ,GAAA1G,OAAA25B,EAAA,GAAA1zB,GACA6J,EAAA9P,OAAA45B,EAAA,GAAA3zB,EAAAuY,EAAA5O,EACA,iBAAA5I,EAAA0X,GACA,MAAAhY,GAAAM,EAAA0X,IAAA5O,EAAA9I,EAAA0X,MtDw2JM,SAAUpf,EAAQmF,EAAqBvF,GAE7C,YuD72JA,SAAA26B,GAAA/yB,GACA,OAAAA,EAAA,GAAAA,EAAA,MvD62JqB,GAAIwX,GAAgDpf,EAAoB,GACpE46B,EAAsC56B,EAAoB,IAC1D66B,EAAwC76B,EAAoB,EuD52JrFuF,GAAA,WAAAwB,EAAA2J,GA0DA,QAAAoqB,GAAArxB,GACAsxB,EAAAC,OAAAvxB,GACAA,EAAA,MAAAiH,EAAAjH,GACAsxB,EAAA73B,KAAAuG,GA5DA,GAAA7B,GAAAb,EAAAd,UAAAnF,OAAAse,EAAA,GAAArY,EAAAd,WAAA00B,EACAI,EAAAj6B,OAAA85B,EAAA,IAEA,OAAAlqB,MAAAmqB,EAAA,EAEA,IAAApzB,GAAAV,EAAAU,KAAA7D,IAAA,SAAAyD,GACA,GAEAoC,GACApJ,EACAc,EAJA85B,KACAC,EAAA,CAOA,KAFA7zB,IAAAzD,IAAAgE,GAEAvH,EAAA,EAAAc,EAAAkG,EAAA7D,OAAA,EAAmCnD,EAAAc,IAAOd,EAC1CoJ,GAAApC,EAAAhH,EAAA,GAAAgH,EAAAhH,GAAAgH,EAAAhH,EAAA,IACAoJ,EAAA,MAAAiH,EAAAjH,GACAwxB,EAAA/3B,KAAAuG,GACAsxB,EAAA73B,KAAAuG,EAMA,KAFApC,EAAA,MAAAA,EAAAlG,GAAA,GAAA0Z,IAEAxa,EAAA,EAAAc,EAAA85B,EAAAz3B,OAAqCnD,EAAAc,IAAOd,EAC5CoJ,EAAAwxB,EAAA56B,GACAoJ,EAAA0xB,SAAAF,EAAA56B,EAAA,GACAoJ,EAAAspB,KAAAkI,EAAA56B,EAAA,EAGA,MAAAoJ,EAAAsxB,EAAAxzB,OAAA,CACA,GAAA4zB,GAAA1xB,EAAA0xB,SACApI,EAAAtpB,EAAAspB,IAMAtpB,GAAA,MAAAyxB,EAAAzxB,EAAA,MAAAyxB,EACAA,EAAAzxB,EAAA,MAEA0xB,IACAA,EAAApI,OACAoI,EAAA,GAAA1xB,EAAA,GACAqxB,EAAAK,IAGApI,IACAA,EAAAoI,WACApI,EAAA,GAAAtpB,EAAA,GACAqxB,EAAA/H,IAIA,MAAA1rB,IASA,QACAD,KAAA,WACAH,KAAAF,EAAAE,KACAsW,QAAAxW,EAAAwW,QACA9V,UvD43JM,SAAUrH,EAAQmF,EAAqBvF,GAE7C,YwD18JA,SAAAo7B,GAAA5zB,EAAAkC,GACA,MAAAlC,GAAA,MAAAkC,EAAA,MAGAnE,EAAA,aAwBA,QAAA81B,GAAAh6B,EAAAhB,GACA,KAAAA,EAAA,IACA,GAAAsG,IAAAtG,EAAA,QACAmrB,EAAAre,EAAAxG,EACA,IAAAy0B,EAAA/5B,EAAAmqB,IAAA,OACAre,GAAAqe,EAAAyE,EAAA5vB,GAAAmrB,EACAre,EAAA9L,EAAA4uB,EAAA5vB,EAAAsG,GAAAtF,GAIA,QAAAi6B,GAAAj6B,EAAAhB,GACA,QACA,GAAAiN,GAAAjN,EAAA,KACAC,EAAAgN,EAAA,EACA3G,EAAAtG,EACAk7B,EAAApuB,EAAAxG,EAGA,IAFArG,EAAA8H,GAAAgzB,EAAAjuB,EAAA7M,GAAAi7B,GAAA,IAAAA,EAAApuB,EAAAxG,EAAArG,IACAgN,EAAAlF,GAAAgzB,EAAAjuB,EAAAG,GAAAiuB,GAAA,IAAAA,EAAApuB,EAAAxG,EAAA2G,IACA3G,IAAAtG,EAAA,KACA8M,GAAAouB,EAAAtL,EAAA5vB,GAAAk7B,EACApuB,EAAA9L,EAAA4uB,EAAA5vB,EAAAsG,GAAAtF,GA3CA,GAAA05B,MACA5tB,KACA/E,EAAA,CA6CA,OA3CA2yB,GAAA73B,KAAA,SAAA7B,GAEA,MADAg6B,GAAAluB,EAAA9L,EAAA4uB,EAAA7nB,GAAA/G,EAAA+G,KACAA,GAGA2yB,EAAAxzB,IAAA,WACA,KAAAa,GAAA,IACA,GAAA/G,GAAAm6B,EAAAruB,EAAA,EAEA,SADA/E,EAAA,IAAA/G,EAAA8L,EAAA/E,GAAAkzB,EAAAnuB,EAAA9L,EAAA4uB,EAAA,GAAA5uB,EAAA,IACAm6B,IAGAT,EAAAC,OAAA,SAAAQ,GACA,GAAAn6B,GAAAhB,EAAAm7B,EAAAvL,CACA,IAAA9iB,EAAA9M,KAAAm7B,EAEA,MADAn7B,OAAA+H,IAAA/G,EAAA8L,EAAA/E,IAAAgzB,EAAA/5B,EAAAm6B,GAAA,EAAAH,EAAAC,GAAAnuB,EAAA9L,EAAA4uB,EAAA5vB,GAAAgB,EAAAhB,IACAA,GA2BA06B,IxDi9JM,SAAU36B,EAAQmF,EAAqBvF,GAE7C,YyDz/JA,SAAAy7B,GAAAtuB,EAAA1L,GACA,GAAAN,EAAAgM,EAAA3J,OAAA,CACA,IAAA/B,OAAA,GAAAN,EAAA,QAAAgM,GAAA,EACA,IAAA1L,GAAA,QAAA0L,GAAAhM,EAAA,EACA,IAAAA,GACAqZ,GAAArZ,EAAA,GAAAM,EACApB,EAAA8I,KAAAmS,MAAAd,GACAhT,EAAA2F,EAAA9M,EAEA,OAAAmH,IADA2F,EAAA9M,EAAA,GACAmH,IAAAgT,EAAAna,IAGA,QAAAq7B,GAAAl0B,EAAAkC,GACA,MAAAA,GAAAlC,EA3BAjC,EAAA,WAAAwB,EAAAtF,GACA,GAAA0L,KAUA,OARApG,GAAAU,KAAA3E,QAAA,SAAAuE,GACAA,EAAAvE,QAAA,SAAA8E,GACA+zB,SAAA/zB,EAAA,KACAuF,EAAAjK,KAAA0E,EAAA,QAKAuF,EAAA3J,QAAAi4B,EAAAtuB,EAAApC,KAAA2wB,GAAAj6B,KzD8hKM,SAAUrB,EAAQmF,EAAqBvF,GAE7C,Y0D3iKAuF,GAAA,WAAAwB,EAAAuY,GACAA,EAAA,MAAAA,EAAA1T,OAAA2T,WAAAD,CAGA,IAAA7X,GAAAV,EAAAU,KAAA7D,IAAA,SAAA8C,GAOA,IANA,GAIAkB,GAJAvH,GAAA,EACAsG,EAAA,EACAxF,EAAAuF,EAAAlD,OACAoD,EAAA,GAAAC,OAAA1F,KAGAd,EAAAc,IACAyG,EAAAlB,EAAArG,IAAA,IAAAif,IACA1Y,EAAAD,MAAAiB,EAAA,GAAAA,EAAA,IAKA,OADAhB,GAAApD,OAAAmD,EACAC,GAGA,QACAQ,KAAA,WACAnB,UAAAc,EAAAd,UACAgB,KAAAF,EAAAE,KACAsW,QAAAxW,EAAAwW,QACA9V,U1DmjKM,SAAUrH,EAAQmF,EAAqBvF,GAE7C,Y2DtkKA,SAAA47B,GAAA9zB,EAAA+zB,GAUA,IATA,GAIAC,GAEAC,EACAC,EAPA37B,EAAA,EACAc,EAAA2G,EAAAtE,OACAy4B,EAAA,EACAr0B,EAAAE,EAAA+zB,EAAAx7B,IAAAc,EAAA,GACA+6B,EAAAt0B,EAAA,GAAAu0B,EACAC,EAAAx0B,EAAA,GAAAu0B,EAAA,EAAAE,EACAC,EAAAlgB,EAAAggB,GACAG,EAAAlgB,EAAA+f,GAEQ/7B,EAAAc,IAAOd,EAAA,CACfuH,EAAAE,EAAAzH,GACAy7B,EAAAI,IAAAt0B,EAAA,GAAAu0B,EACAC,EAAAx0B,EAAA,GAAAu0B,EAAA,EAAAE,EACAN,EAAAO,IAAAlgB,EAAAggB,GACAJ,EAAAO,IAAAlgB,EAAA+f,EAMA,IAAAI,GAAAN,EAAAJ,EACAW,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACA34B,EAAAm4B,EAAAO,EACAI,EAAAZ,EAAAO,EAAAz4B,EAAAuY,EAAAsgB,GACArwB,EAAAxI,EAAA44B,EAAApgB,EAAAqgB,EACAT,IAAAhgB,EAAA5P,EAAAswB,GAGA,MAAAV,GAGA,QAAAW,GAAA90B,EAAA0X,GACA,GAAAyc,GAAAL,EAAA9zB,GAAA,EAEA,OADA0X,KAAAyc,IAAA,GACA,GAAAA,EAAA,EAAAY,EAAAZ,KAGA,QAAAa,GAAAx5B,GACA,SAAAqG,EAAAiyB,EAAAt4B,GAAA,I3D+hKiCiC,EAAuB,EAAIq3B,E2DhlK5Dr3B,EAAA,EAAAu3B,CAAA,IAAA9E,GAAA7uB,KAAA+S,GACA2gB,EAAA,EAAA7E,EACAqE,EAAArE,EAAA,EACAmE,EAAAnE,EAAA,IACAruB,EAAAR,KAAAQ,IACAsS,EAAA9S,KAAA8S,MACAG,EAAAjT,KAAAiT,IACAC,EAAAlT,KAAAkT,K3DkoKM,SAAUjc,EAAQD,G4DzoKxBC,EAAAD,SAAkBiH,KAAA,oBAAA21B,KAAkC31B,KAAA,OAAAF,YAA4BvG,KAAA,kCAAwCwH,WAAcf,KAAA,UAAAF,YAA+BwnB,KAAA,WAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA2Knc,UAAaC,KAAA,QAAAY,cAAA,6BAA4DZ,KAAA,UAAAF,YAA+BwnB,KAAA,YAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA4Knc,UAAaC,KAAA,QAAAY,cAAA,yBAAwDZ,KAAA,UAAAF,YAA+BwnB,KAAA,gBAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAAgLnc,UAAaC,KAAA,QAAAY,cAAA,6BAA4DZ,KAAA,UAAAF,YAA+BwnB,KAAA,eAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA+Knc,UAAaC,KAAA,QAAAY,cAAA,4BAA2DZ,KAAA,UAAAF,YAA+BwnB,KAAA,aAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA6Knc,UAAaC,KAAA,QAAAY,cAAA,6BAA4DZ,KAAA,UAAAF,YAA+BwnB,KAAA,qBAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAAqLnc,UAAaC,KAAA,QAAAY,cAAA,6BAA4DZ,KAAA,UAAAF,YAA+BwnB,KAAA,SAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAAyKnc,UAAaC,KAAA,QAAAY,cAAA,6BAA4DZ,KAAA,UAAAF,YAA+BwnB,KAAA,+BAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA+Lnc,UAAaC,KAAA,QAAAY,cAAA,4BAA2DZ,KAAA,UAAAF,YAA+BwnB,KAAA,WAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA2Knc,UAAaC,KAAA,QAAAY,cAAA,6BAA4DZ,KAAA,UAAAF,YAA+BwnB,KAAA,mCAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAAmMnc,UAAaC,KAAA,QAAAY,cAAA,6BAA4DZ,KAAA,UAAAF,YAA+BwnB,KAAA,UAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA0Knc,UAAaC,KAAA,QAAAY,cAAA,4BAA2DZ,KAAA,UAAAF,YAA+BwnB,KAAA,cAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA8Knc,UAAaC,KAAA,QAAAY,cAAA,4BAA2DZ,KAAA,UAAAF,YAA+BwnB,KAAA,+BAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA+Lnc,UAAaC,KAAA,QAAAY,cAAA,6BAA4DZ,KAAA,UAAAF,YAA+BwnB,KAAA,mCAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAAmMnc,UAAaC,KAAA,QAAAY,cAAA,6BAA4DZ,KAAA,UAAAF,YAA+BwnB,KAAA,WAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA2Knc,UAAaC,KAAA,QAAAY,cAAA,6BAA4DZ,KAAA,UAAAF,YAA+BwnB,KAAA,UAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA0Knc,UAAaC,KAAA,QAAAY,cAAA,6BAA4DZ,KAAA,UAAAF,YAA+BwnB,KAAA,6BAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAA6Lnc,UAAaC,KAAA,QAAAY,cAAA,4BAA2DZ,KAAA,UAAAF,YAA+BwnB,KAAA,QAAAsO,YAAA,KAAAC,UAAA,KAAAC,MAAA,KAAAlf,IAAA,KAAAmf,aAAA,KAAAC,YAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,UAAA,KAAAja,KAAA,MAAwKnc,UAAaC,KAAA,QAAAY,cAAA,+B5D+oK7gK,SAAU5H,EAAQD,G6D/oKxBC,EAAAD,SAAkBiH,KAAA,UAAAJ,GAAA,KAAAE,YAAyCvG,KAAA,cAAoBwG,UAAaC,KAAA,UAAAY,gBAAA,oqE7DqpKtF,SAAU5H,EAAQD,G8DrpKxBC,EAAAD,SAAkBiH,KAAA,WAAAH,OAAA,4CAAAsW,SAAkF2Q,UAAY9mB,KAAA,qBAAAa,aAA2Cb,KAAA,UAAAK,OAAA,YAAAP,YAAoDs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,YAA+Gz2B,KAAA,UAAAK,QAAA,UAAAP,YAAmDs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,QAAAC,KAAA,SAAAC,WAAA,WAA6Gz2B,KAAA,eAAAK,QAAA,mDAAAP,YAAiGs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,gBAAAC,KAAA,SAAAC,WAAA,UAAoHz2B,KAAA,eAAAK,QAAA,2CAAAP,YAAyFs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,gBAAAC,KAAA,SAAAC,WAAA,YAAsHz2B,KAAA,UAAAK,OAAA,iBAAAP,YAAyDs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,WAA8Gz2B,KAAA,UAAAK,OAAA,oBAAAP,YAA4Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,WAA8Gz2B,KAAA,UAAAK,OAAA,oBAAAP,YAA4Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,UAA6Gz2B,KAAA,UAAAK,OAAA,iBAAAP,YAAyDs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,UAAAC,KAAA,SAAAC,WAAA,YAAgHz2B,KAAA,eAAAK,QAAA,8BAAAP,YAA4Es2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,UAAAC,KAAA,SAAAC,WAAA,YAAgHz2B,KAAA,UAAAK,QAAA,qBAAAP,YAA8Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,OAAAC,KAAA,SAAAC,WAAA,WAA4Gz2B,KAAA,UAAAK,OAAA,oBAAAP,YAA4Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,OAAAC,KAAA,SAAAC,WAAA,YAA6Gz2B,KAAA,UAAAK,OAAA,oBAAAP,YAA4Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,iBAAAC,KAAA,SAAAC,WAAA,aAAwHz2B,KAAA,UAAAK,OAAA,iBAAAP,YAAyDs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,aAAAC,KAAA,SAAAC,WAAA,UAAiHz2B,KAAA,UAAAK,OAAA,oBAAAP,YAA4Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,UAAAC,KAAA,SAAAC,WAAA,WAA+Gz2B,KAAA,UAAAK,OAAA,oBAAAP,YAA4Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,WAA8Gz2B,KAAA,UAAAK,OAAA,kBAAAP,YAA0Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,WAA8Gz2B,KAAA,UAAAK,OAAA,sBAAAP,YAA8Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,QAAAC,KAAA,SAAAC,WAAA,YAA8Gz2B,KAAA,UAAAK,QAAA,kBAAAP,YAA2Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,YAAAC,KAAA,SAAAC,WAAA,YAAkHz2B,KAAA,UAAAK,QAAA,mBAAAP,YAA4Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,YAA+Gz2B,KAAA,UAAAK,QAAA,mBAAAP,YAA4Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,eAAAC,KAAA,SAAAC,WAAA,WAAoHz2B,KAAA,UAAAK,OAAA,cAAAP,YAAsDs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,YAAAC,KAAA,SAAAC,WAAA,YAAkHz2B,KAAA,UAAAK,QAAA,qBAAAP,YAA8Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,YAAAC,KAAA,SAAAC,WAAA,YAAkHz2B,KAAA,UAAAK,OAAA,kCAAAP,YAA0Es2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,YAA+Gz2B,KAAA,UAAAK,QAAA,qBAAAP,YAA8Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,QAAAC,KAAA,SAAAC,WAAA,YAA8Gz2B,KAAA,UAAAK,QAAA,sBAAAP,YAA+Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,WAAAC,KAAA,SAAAC,WAAA,YAAiHz2B,KAAA,UAAAK,OAAA,cAAAP,YAAsDs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,WAAAC,KAAA,SAAAC,WAAA,YAAiHz2B,KAAA,UAAAK,QAAA,0BAAAP,YAAmEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,OAAAC,KAAA,SAAAC,WAAA,aAA8Gz2B,KAAA,UAAAK,QAAA,kCAAAP,YAA2Es2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,OAAAC,KAAA,SAAAC,WAAA,YAA6Gz2B,KAAA,UAAAK,OAAA,wBAAAP,YAAgEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,QAAAC,KAAA,SAAAC,WAAA,WAA6Gz2B,KAAA,eAAAK,QAAA,wCAAAP,YAAsFs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,cAAAC,KAAA,SAAAC,WAAA,YAAoHz2B,KAAA,UAAAK,OAAA,uBAAAP,YAA+Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,YAA+Gz2B,KAAA,eAAAK,QAAA,uCAAAP,YAAqFs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,QAAAC,KAAA,SAAAC,WAAA,WAA6Gz2B,KAAA,UAAAK,OAAA,mBAAAP,YAA2Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,WAAAC,KAAA,SAAAC,WAAA,YAAiHz2B,KAAA,UAAAK,QAAA,+BAAAP,YAAwEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,YAAAC,KAAA,SAAAC,WAAA,YAAkHz2B,KAAA,UAAAK,QAAA,4BAAAP,YAAqEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,YAA+Gz2B,KAAA,UAAAK,QAAA,4BAAAP,YAAqEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,OAAAC,KAAA,SAAAC,WAAA,YAA6Gz2B,KAAA,UAAAK,QAAA,2BAAAP,YAAoEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,WAAAC,KAAA,SAAAC,WAAA,YAAiHz2B,KAAA,UAAAK,QAAA,iBAAAP,YAA0Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,OAAAC,KAAA,SAAAC,WAAA,WAA4Gz2B,KAAA,UAAAK,OAAA,kBAAAP,YAA0Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,WAA8Gz2B,KAAA,UAAAK,QAAA,sBAAAP,YAA+Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,WAA8Gz2B,KAAA,UAAAK,OAAA,4BAAAP,YAAoEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,YAA+Gz2B,KAAA,UAAAK,QAAA,wBAAAP,YAAiEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,YAA+Gz2B,KAAA,UAAAK,QAAA,uBAAAP,YAAgEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,YAAAC,KAAA,SAAAC,WAAA,WAAiHz2B,KAAA,UAAAK,QAAA,mCAAAP,YAA4Es2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,aAAAC,KAAA,SAAAC,WAAA,WAAkHz2B,KAAA,UAAAK,QAAA,wBAAAP,YAAiEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,aAAAC,KAAA,SAAAC,WAAA,WAAkHz2B,KAAA,UAAAK,QAAA,oBAAAP,YAA6Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,YAAAC,KAAA,SAAAC,WAAA,WAAiHz2B,KAAA,UAAAK,QAAA,2BAAAP,YAAoEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,cAAAC,KAAA,SAAAC,WAAA,YAAoHz2B,KAAA,UAAAK,QAAA,wBAAAP,YAAiEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,kBAAAC,KAAA,SAAAC,WAAA,YAAwHz2B,KAAA,UAAAK,QAAA,yBAAAP,YAAkEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,YAAAC,KAAA,SAAAC,WAAA,WAAiHz2B,KAAA,UAAAK,QAAA,4BAAAP,YAAqEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,cAAAC,KAAA,SAAAC,WAAA,UAAkHz2B,KAAA,UAAAK,QAAA,wBAAAP,YAAiEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,YAA+Gz2B,KAAA,UAAAK,QAAA,2BAAAP,YAAoEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,WAAAC,KAAA,SAAAC,WAAA,YAAiHz2B,KAAA,UAAAK,QAAA,gCAAAP,YAAyEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,YAA+Gz2B,KAAA,UAAAK,QAAA,iCAAAP,YAA0Es2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,aAAAC,KAAA,SAAAC,WAAA,YAAmHz2B,KAAA,UAAAK,QAAA,6BAAAP,YAAsEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,YAA+Gz2B,KAAA,UAAAK,QAAA,qBAAAP,YAA8Ds2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,YAA+Gz2B,KAAA,UAAAK,QAAA,6BAAAP,YAAsEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,WAAAC,KAAA,SAAAC,WAAA,YAAiHz2B,KAAA,UAAAK,QAAA,2BAAAP,YAAoEs2B,OAAA,iBAAAC,MAAA,KAAAC,OAAA,MAAAC,KAAA,OAAAC,KAAA,SAAAC,WAAA,cAA8Gp2B,SAAA","file":"js/app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 19);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = d3;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar categories = __webpack_require__(22);\r\n// transform into array\r\nvar departmentJson = __webpack_require__(23);\r\nvar departments = Object.keys(departmentJson).map(function (k) {\r\n    var categoryKey = departmentJson[k].category;\r\n    var categoryIndex = categories.findIndex(function (c) { return c.key === categoryKey; });\r\n    return {\r\n        key: k,\r\n        name: departmentJson[k].name,\r\n        categoryKey: categoryKey,\r\n        categoryIndex: categoryIndex,\r\n    };\r\n}).filter(function (d) { return d.categoryIndex > -1; });\r\n// transform into array\r\nvar sourceJson = __webpack_require__(24);\r\nvar sources = Object.keys(sourceJson).map(function (k) {\r\n    return {\r\n        key: k,\r\n        name: sourceJson[k].name,\r\n        parentSourceName: sourceJson[k].category,\r\n    };\r\n});\r\n// parse projects\r\nvar projectJson = __webpack_require__(25);\r\nvar projects = projectJson.map(function (p) {\r\n    var categoryKey = departmentJson[p.dept].category;\r\n    var categoryIndex = categories.findIndex(function (c) { return c.key === categoryKey; });\r\n    return {\r\n        key: p.project,\r\n        name: p.project,\r\n        categoryKey: categoryKey,\r\n        categoryIndex: categoryIndex,\r\n        departmentKey: p.dept,\r\n        total: p.total,\r\n    };\r\n}).filter(function (p) { return p.categoryIndex > -1; });\r\nvar sourceTotalsByDepartmentJson = __webpack_require__(26);\r\nvar sourceTotals = [];\r\nvar _loop_1 = function (sourceKey) {\r\n    var totals = sourceTotalsByDepartmentJson[sourceKey];\r\n    var source = sources.find(function (s) { return s.key === sourceKey; });\r\n    if (source === undefined) {\r\n        console.info(\"Could not find source: \", sourceKey);\r\n        return \"continue\";\r\n    }\r\n    var result = {\r\n        key: sourceKey,\r\n        source: source,\r\n        byDeparment: [],\r\n        byCategory: categories.map(function (c) { return __assign({}, c, { total: 0 }); }),\r\n        total: 0\r\n    };\r\n    var _loop_2 = function (departmentKey) {\r\n        var department = departments.find(function (d) { return d.key === departmentKey; });\r\n        if (department === undefined) {\r\n            console.info(\"Could not find department: \", departmentKey);\r\n            return \"continue\";\r\n        }\r\n        var total = totals[departmentKey] || 0;\r\n        // don't include empty/negative departments\r\n        if (total <= 0) {\r\n            return \"continue\";\r\n        }\r\n        // add department entry\r\n        result.byDeparment.push(__assign({}, department, { total: total }));\r\n        // find and update category entry\r\n        var category = result.byCategory.find(function (c) { return c.key === department.categoryKey; });\r\n        if (category === undefined) {\r\n            console.info(\"Could not find category: \", department.categoryKey);\r\n            return \"continue\";\r\n        }\r\n        category.total += total;\r\n        // update result total\r\n        result.total += total;\r\n    };\r\n    // loop through departments\r\n    for (var _i = 0, _a = Object.keys(totals); _i < _a.length; _i++) {\r\n        var departmentKey = _a[_i];\r\n        _loop_2(departmentKey);\r\n    }\r\n    // don't include empty/negative results\r\n    if (result.total <= 0) {\r\n        return \"continue\";\r\n    }\r\n    sourceTotals.push(result);\r\n};\r\nfor (var _i = 0, _a = Object.keys(sourceTotalsByDepartmentJson); _i < _a.length; _i++) {\r\n    var sourceKey = _a[_i];\r\n    _loop_1(sourceKey);\r\n}\r\nfunction getDepartments() {\r\n    return departments.slice();\r\n}\r\nexports.getDepartments = getDepartments;\r\nfunction getSources() {\r\n    return sources.slice();\r\n}\r\nexports.getSources = getSources;\r\nfunction getSourceTotals() {\r\n    return sourceTotals.slice();\r\n}\r\nexports.getSourceTotals = getSourceTotals;\r\nfunction getCategories() {\r\n    return categories.slice();\r\n}\r\nexports.getCategories = getCategories;\r\nfunction getProjects() {\r\n    return projects.slice();\r\n}\r\nexports.getProjects = getProjects;\r\nvar selectedCategory = -1;\r\nfunction getSelectedCategory() {\r\n    return selectedCategory;\r\n}\r\nexports.getSelectedCategory = getSelectedCategory;\r\nfunction setSelectedCategory(category) {\r\n    var index = categories.findIndex(function (c) { return c.name === category; });\r\n    selectedCategory = index;\r\n    events.forEach(function (e) {\r\n        e(index);\r\n    });\r\n    return selectedCategory;\r\n}\r\nexports.setSelectedCategory = setSelectedCategory;\r\nvar events = [];\r\nfunction onSelectedCategoryChanged(func) {\r\n    events.push(func);\r\n}\r\nexports.onSelectedCategoryChanged = onSelectedCategoryChanged;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_bbox__ = __webpack_require__(11);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_bbox__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_feature__ = __webpack_require__(4);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_feature__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_mesh__ = __webpack_require__(38);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_mesh__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_mesh__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_merge__ = __webpack_require__(39);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_merge__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_merge__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_neighbors__ = __webpack_require__(40);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_4__src_neighbors__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__src_quantize__ = __webpack_require__(42);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_5__src_quantize__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__src_transform__ = __webpack_require__(3);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_6__src_transform__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__src_untransform__ = __webpack_require__(14);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_7__src_untransform__[\"a\"]; });\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__identity__ = __webpack_require__(12);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(transform) {\n  if (transform == null) return __WEBPACK_IMPORTED_MODULE_0__identity__[\"a\" /* default */];\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n});\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export feature */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = object;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__reverse__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transform__ = __webpack_require__(3);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n});\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nfunction object(topology, o) {\n  var transformPoint = Object(__WEBPACK_IMPORTED_MODULE_1__transform__[\"a\" /* default */])(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) Object(__WEBPACK_IMPORTED_MODULE_0__reverse__[\"a\" /* default */])(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n});\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = planarTriangleArea;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = planarRingArea;\nfunction planarTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n}\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area) / 2;\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = jQuery;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar colorString = __webpack_require__(28);\nvar convert = __webpack_require__(31);\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (!obj) {\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar cssKeywords = __webpack_require__(9);\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar v;\n\n\tif (max === 0) {\n\t\ts = 0;\n\t} else {\n\t\ts = (delta / max * 1000) / 10;\n\t}\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tv = ((max / 255) * 1000) / 10;\n\n\treturn [h, s, v];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transform__ = __webpack_require__(3);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology) {\n  var t = Object(__WEBPACK_IMPORTED_MODULE_0__transform__[\"a\" /* default */])(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n});\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(x) {\n  return x;\n});\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n});\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__identity__ = __webpack_require__(12);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(transform) {\n  if (transform == null) return __WEBPACK_IMPORTED_MODULE_0__identity__[\"a\" /* default */];\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n});\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n});\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16),\n    floats = new Float64Array(buffer),\n    uints = new Uint32Array(buffer);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n});\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology) {\n  var ownerByArc = new Array(topology.arcs.length), // arc index -> index of unique associated ring, or -1 if used by multiple rings\n      ownerIndex = 0,\n      key;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n      case \"Polygon\": testArcs(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ownerIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var owner = ownerByArc[arc];\n        if (owner == null) ownerByArc[arc] = ownerIndex;\n        else if (owner !== ownerIndex) ownerByArc[arc] = -1;\n      }\n    }\n  }\n\n  for (key in topology.objects) {\n    testGeometry(topology.objects[key]);\n  }\n\n  return function(ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (ownerByArc[(arc = ring[j]) < 0 ? ~arc : arc] === -1) {\n        return true;\n      }\n    }\n    return false;\n  };\n});\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_topojson_client__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__planar__ = __webpack_require__(6);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology, minWeight, weight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  if (weight == null) weight = __WEBPACK_IMPORTED_MODULE_1__planar__[\"a\" /* planarRingArea */];\n\n  return function(ring, interior) {\n    return weight(Object(__WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"b\" /* feature */])(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n  };\n});\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(20);\r\nvar $ = __webpack_require__(7);\r\n__webpack_require__(7);\r\n__webpack_require__(21);\r\n__webpack_require__(27);\r\n__webpack_require__(33);\r\n__webpack_require__(35);\r\nvar data_1 = __webpack_require__(1);\r\nvar $topicBar = $(\"#topic-bar\");\r\nvar $root = $(\"html, body\");\r\nfunction smoothScroll(href) {\r\n    var target = ($(href).offset() || { top: 0 }).top;\r\n    var offset = $topicBar.height() || 0;\r\n    var margin = 50;\r\n    $root.animate({\r\n        scrollTop: target - offset - margin\r\n    }, 500, function () {\r\n        // window.location.hash = href;\r\n    });\r\n}\r\nfunction handleTopicChanged(topic) {\r\n    data_1.setSelectedCategory(topic);\r\n    // decorate body\r\n    $root.data(\"topic\", topic);\r\n    // decorate topic button\r\n    $(\".topic-button\").each(function () {\r\n        var t = $(this).data(\"topic\");\r\n        if (t === topic) {\r\n            $(this).addClass(\"active\");\r\n        }\r\n        else {\r\n            $(this).removeClass(\"active\");\r\n        }\r\n    });\r\n}\r\nfunction setupTopicSelector() {\r\n    // attach listeners\r\n    $(\".topic-button\").click(function () {\r\n        var topic = $(this).data(\"topic\");\r\n        handleTopicChanged(topic);\r\n        handleTopicChanged(topic);\r\n        showRandomArticle(topic);\r\n    });\r\n    $(\".topic-all\").click(function (e) {\r\n        e.preventDefault();\r\n        handleTopicChanged(\"\");\r\n        showRandomArticle(\"\");\r\n    });\r\n}\r\nfunction setupScroll() {\r\n    // get fixed position\r\n    var startTop = Math.ceil($topicBar.position().top) + 1;\r\n    // add sticky\r\n    $topicBar.addClass(\"sticky-top\");\r\n    // setup scroll spy\r\n    var handleScroll = function () {\r\n        var top = $topicBar.position().top;\r\n        if (top > startTop) {\r\n            $topicBar.addClass(\"thin\");\r\n        }\r\n        else {\r\n            $topicBar.removeClass(\"thin\");\r\n        }\r\n    };\r\n    $(window).scroll(handleScroll);\r\n    // prefire\r\n    handleScroll();\r\n}\r\nvar $carousel = $(\".lead_carousel\");\r\nfunction setupSlideshow() {\r\n    $carousel.slick({\r\n        variableWidth: true,\r\n        arrows: false,\r\n        autoplay: true,\r\n        autoplaySpeed: 3000\r\n    });\r\n}\r\nvar $articleLinks = $(\".lead_carousel .article-link\");\r\nvar $articles = $(\".article\");\r\nfunction setupArticleSelect() {\r\n    $(\".lead_carousel\").on(\"click\", \".article-link\", function (e) {\r\n        e.preventDefault();\r\n        // mark one slide as active\r\n        $articleLinks.removeClass(\"active\");\r\n        $(this).addClass(\"active\");\r\n        // hide all articles\r\n        $articles.hide();\r\n        // show single article\r\n        var href = $(this).attr(\"href\") || \"\";\r\n        $(href).show();\r\n        smoothScroll(href);\r\n        // set topic\r\n        var topic = $(this).data(\"topic\");\r\n        handleTopicChanged(topic);\r\n    });\r\n}\r\nfunction showRandomArticle(topic) {\r\n    // deactivate active article, show random one\r\n    $articleLinks.removeClass(\"active\");\r\n    $articles.hide();\r\n    var article;\r\n    if (!topic) {\r\n        var articleIndex = Math.floor(Math.random() * $articles.length);\r\n        article = $articles[articleIndex];\r\n    }\r\n    else {\r\n        var $topicArticles = $articles.filter(function () {\r\n            var t = $(this).data(\"topic\");\r\n            return t === topic;\r\n        });\r\n        var articleIndex = Math.floor(Math.random() * $topicArticles.length);\r\n        article = $topicArticles[articleIndex];\r\n    }\r\n    // show article\r\n    $(article).show();\r\n    // find an select slide as active\r\n    var id = article.id;\r\n    for (var i = 0; i < $articleLinks.length; i++) {\r\n        var $articleLink = $($articleLinks[i]);\r\n        if ($articleLink.attr(\"href\") === \"#\" + id) {\r\n            $articleLink.addClass(\"active\");\r\n            $carousel.slick(\"slickGoTo\", i);\r\n            break;\r\n        }\r\n    }\r\n}\r\n$().ready(function () {\r\n    setupTopicSelector();\r\n    setupScroll();\r\n    setupSlideshow();\r\n    setupArticleSelect();\r\n    showRandomArticle(\"\");\r\n});\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar data_1 = __webpack_require__(1);\r\nvar categories = data_1.getCategories();\r\nvar projects = data_1.getProjects();\r\nfunction getTotal() {\r\n    var categoryIndex = data_1.getSelectedCategory();\r\n    if (categoryIndex < 0) {\r\n        return projects.reduce(function (prev, p) { return prev + p.total; }, 0);\r\n    }\r\n    var category = categories[categoryIndex];\r\n    var total = projects\r\n        .filter(function (p) { return p.categoryKey == category.key; })\r\n        .reduce(function (prev, p) { return prev + p.total; }, 0);\r\n    return total;\r\n}\r\nfunction getCategoryTopic() {\r\n    var categoryIndex = data_1.getSelectedCategory();\r\n    if (categoryIndex < 0) {\r\n        return \"\";\r\n    }\r\n    var category = categories[categoryIndex];\r\n    return category.name;\r\n}\r\nvar totalSpans = document.getElementsByClassName(\"total-span\");\r\nfunction setTotals() {\r\n    var total = getTotal();\r\n    var millions = total / 1000000;\r\n    var topic = getCategoryTopic();\r\n    for (var i = 0; i < totalSpans.length; i++) {\r\n        var span = totalSpans[i];\r\n        span.innerText = \"$\" + millions.toFixed(1) + \" Million\";\r\n        span.setAttribute(\"data-topic\", topic);\r\n    }\r\n}\r\nwindow.addEventListener(\"load\", setTotals);\r\ndata_1.onSelectedCategoryChanged(setTotals);\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\nmodule.exports = [{\"key\":\"AG\",\"name\":\"Agriculture\",\"color\":\"#78be20\",\"icon\":\"/media/seed-intro.svg\"},{\"key\":\"ENV\",\"name\":\"Environment\",\"color\":\"#008eaa\",\"icon\":\"/media/tree-intro.svg\"},{\"key\":\"HUMAN\",\"name\":\"Human\",\"color\":\"#ffcd00\",\"icon\":\"/media/brain-intro.svg\"}]\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"ARE\":{\"name\":\"Agricultural & Resource Economics\",\"category\":\"HUMAN\"},\"BAE\":{\"name\":\"Biological & Agricultural Engineering\",\"category\":\"AG\"},\"PLS\":{\"name\":\"Plant Sciences\",\"category\":\"AG\"},\"PLB\":{\"name\":\"Plant Biology\",\"category\":\"BIO\"},\"PPA\":{\"name\":\"Plant Pathology\",\"category\":\"AG\"},\"ASC\":{\"name\":\"Animal Science\",\"category\":\"AG\"},\"HCE\":{\"name\":\"Human Ecology\",\"category\":\"HUMAN\"},\"TXC\":{\"name\":\"Textiles & Clothing\",\"category\":\"HUMAN\"},\"ESP\":{\"name\":\"Environmental Science & Policy\",\"category\":\"ENV\"},\"ENM\":{\"name\":\"Entomology & Nematology\",\"category\":\"AG\"},\"ETX\":{\"name\":\"Environmental Toxicology\",\"category\":\"ENV\"},\"LAW\":{\"name\":\"Land, Air & Water Resources\",\"category\":\"ENV\"},\"WFB\":{\"name\":\"Wildlife, Fish & Conservation Biology\",\"category\":\"ENV\"},\"VIT\":{\"name\":\"Viticulture & Enology\",\"category\":\"AG\"},\"FST\":{\"name\":\"Food Science & Technology\",\"category\":\"HUMAN\"},\"NTR\":{\"name\":\"Nutrition\",\"category\":\"HUMAN\"},\"MCB\":{\"name\":\"Molecular & Cellular Biology\",\"category\":\"BIO\"},\"EVE\":{\"name\":\"Evolution & Ecology\",\"category\":\"BIO\"},\"MIC\":{\"name\":\"Microbiology & Molecular Genetics\",\"category\":\"BIO\"},\"NPB\":{\"name\":\"Neurobiology, Physiology & Behavior\",\"category\":\"BIO\"}}\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"f201\":{\"name\":\"Hatch Funds\",\"category\":\"CSREES Admin Federal Research Funds\"},\"f202\":{\"name\":\"Multi-State Research Funds\",\"category\":\"CSREES Admin Federal Research Funds\"},\"f203\":{\"name\":\"McIntire-Stennis Funds\",\"category\":\"CSREES Admin Federal Research Funds\"},\"f204\":{\"name\":\"Contracts, Grants, Research Coop Agreements\",\"category\":\"CSREES Admin Federal Research Funds\"},\"f205\":{\"name\":\"Other Funds (Animal Health Sec 1433, Evans-Allen)\",\"category\":\"CSREES Admin Federal Research Funds\"},\"f219\":{\"name\":\"USDA Contracts, Grans, Coop Agreements\",\"category\":\"Other Federal Research Funds\"},\"f209\":{\"name\":\"National Security Foundation\",\"category\":\"Other Federal Research Funds\"},\"f310\":{\"name\":\"Department of Energy\",\"category\":\"Other Federal Research Funds\"},\"f308\":{\"name\":\"Agency for International Development\",\"category\":\"Other Federal Research Funds\"},\"f311\":{\"name\":\"Department of Defense\",\"category\":\"Other Federal Research Funds\"},\"f316\":{\"name\":\"National Institutes of Health\",\"category\":\"Other Federal Research Funds\"},\"f312\":{\"name\":\"Public Health Service\",\"category\":\"Other Federal Research Funds\"},\"f313\":{\"name\":\"Health and Human Services\",\"category\":\"Other Federal Research Funds\"},\"f314\":{\"name\":\"National Aeronautics and Space Admin\",\"category\":\"Other Federal Research Funds\"},\"f315\":{\"name\":\"Tennessee Valley Authority\",\"category\":\"Other Federal Research Funds\"},\"f318\":{\"name\":\"Other Federal Funds (including 'pass-through')\",\"category\":\"Other Federal Research Funds\"},\"f220\":{\"name\":\"State Appropriations\",\"category\":\"Non-Federal Research Funds\"},\"f22F\":{\"name\":\"Field Stations\",\"category\":\"Non-Federal Research Funds\"},\"f221\":{\"name\":\"Self-Generated Funds\",\"category\":\"Non-Federal Research Funds\"},\"f222\":{\"name\":\"Industry Grants and Agreements\",\"category\":\"Non-Federal Research Funds\"},\"f223\":{\"name\":\"Other Non-Federal Funds\",\"category\":\"Non-Federal Research Funds\"}}\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = [{\"project\":\"CA-D-ARE-2027-H\",\"dept\":\"ARE\",\"total\":361557.08},{\"project\":\"CA-D-ARE-2186-RR\",\"dept\":\"ARE\",\"total\":196229.69},{\"project\":\"CA-D-ARE-2194-H\",\"dept\":\"ARE\",\"total\":83252.68},{\"project\":\"CA-D-ARE-2197-H \",\"dept\":\"ARE\",\"total\":300293.52},{\"project\":\"CA-D-ARE-2198-H\",\"dept\":\"ARE\",\"total\":165951.74},{\"project\":\"CA-D-ARE-2199-H\",\"dept\":\"ARE\",\"total\":179449.44},{\"project\":\"CA-D-ARE-2200-H\",\"dept\":\"ARE\",\"total\":428557.85},{\"project\":\"CA-D-ARE-2215-H\",\"dept\":\"ARE\",\"total\":128428.73},{\"project\":\"CA-D-ARE-2249-H\",\"dept\":\"ARE\",\"total\":165148.92},{\"project\":\"CA-D-ARE-2251-H\",\"dept\":\"ARE\",\"total\":201054.45},{\"project\":\"CA-D-ARE-2254-H\",\"dept\":\"ARE\",\"total\":401403.14},{\"project\":\"CA-D-ARE-2280-H\",\"dept\":\"ARE\",\"total\":259799.48},{\"project\":\"CA-D-ARE-2294-H\",\"dept\":\"ARE\",\"total\":234828.84},{\"project\":\"CA-D-ARE-2298-H\",\"dept\":\"ARE\",\"total\":233247.7},{\"project\":\"CA-D-ARE-2331-CG\",\"dept\":\"ARE\",\"total\":259799.48},{\"project\":\"CA-D-ARE-2363-H\",\"dept\":\"ARE\",\"total\":213976.35},{\"project\":\"CA-D-ARE-2364-H\",\"dept\":\"ARE\",\"total\":5564755.32},{\"project\":\"CA-D-ARE-6585-H\",\"dept\":\"ARE\",\"total\":220922.98},{\"project\":\"CA-D-ARE-6987-H\",\"dept\":\"ARE\",\"total\":316291.61},{\"project\":\"CA-D-ARE-7307-RR\",\"dept\":\"ARE\",\"total\":192554.48},{\"project\":\"CA-D-ARE-7639-RR\",\"dept\":\"ARE\",\"total\":413522.52},{\"project\":\"CA-D-ARE-7733-H\",\"dept\":\"ARE\",\"total\":324636.88},{\"project\":\"CA-D-ARE-7740-H\",\"dept\":\"ARE\",\"total\":83336.57},{\"project\":\"CA-D-ARE-7820-H\",\"dept\":\"ARE\",\"total\":331263.77},{\"project\":\"CA-D-ARE-7833-H\",\"dept\":\"ARE\",\"total\":241197.36},{\"project\":\"CA-D-ARE-7837-H\",\"dept\":\"ARE\",\"total\":162547.02},{\"project\":\"CA-D-ASC-2002-RR\",\"dept\":\"ASC\",\"total\":188418.72},{\"project\":\"CA-D-ASC-2003-RR\",\"dept\":\"ASC\",\"total\":303004.67},{\"project\":\"CA-D-ASC-2024-RR\",\"dept\":\"ASC\",\"total\":302371.78},{\"project\":\"CA-D-ASC-2070-RR\",\"dept\":\"ASC\",\"total\":253198.55},{\"project\":\"CA-D-ASC-2095-RR\",\"dept\":\"ASC\",\"total\":331420.83},{\"project\":\"CA-D-ASC-2138-RR\",\"dept\":\"ASC\",\"total\":239120.97},{\"project\":\"CA-D-ASC-2155-RR\",\"dept\":\"ASC\",\"total\":213536.68},{\"project\":\"CA-D-ASC-2156-RR\",\"dept\":\"ASC\",\"total\":213536.68},{\"project\":\"CA-D-ASC-2157-RR\",\"dept\":\"ASC\",\"total\":213536.68},{\"project\":\"CA-D-ASC-2193-RR\",\"dept\":\"ASC\",\"total\":1390611.07},{\"project\":\"CA-D-ASC-2209-RR\",\"dept\":\"ASC\",\"total\":208817.97},{\"project\":\"CA-D-ASC-2237-OG\",\"dept\":\"ASC\",\"total\":289210.68},{\"project\":\"CA-D-ASC-2239-RR\",\"dept\":\"ASC\",\"total\":213536.68},{\"project\":\"CA-D-ASC-2240-RR\",\"dept\":\"ASC\",\"total\":213536.68},{\"project\":\"CA-D-ASC-2250-AH\",\"dept\":\"ASC\",\"total\":792457.46},{\"project\":\"CA-D-ASC-2252-H\",\"dept\":\"ASC\",\"total\":267061.26},{\"project\":\"CA-D-ASC-2253-RR\",\"dept\":\"ASC\",\"total\":267061.26},{\"project\":\"CA-D-ASC-2262-RR\",\"dept\":\"ASC\",\"total\":210837.55},{\"project\":\"CA-D-ASC-2263-H\",\"dept\":\"ASC\",\"total\":95023.38},{\"project\":\"CA-D-ASC-2283-CG \",\"dept\":\"ASC\",\"total\":252335.32},{\"project\":\"CA-D-ASC-2286-H\",\"dept\":\"ASC\",\"total\":93409.15},{\"project\":\"CA-D-ANS-2299-CG\",\"dept\":\"ASC\",\"total\":234938.72},{\"project\":\"CA-D-ASC-2303-RR\",\"dept\":\"ASC\",\"total\":159873.21},{\"project\":\"CA-D-ASC-2304-RR\",\"dept\":\"ASC\",\"total\":233512.13},{\"project\":\"CA-D-ASC-2306-RR\",\"dept\":\"ASC\",\"total\":136130.21},{\"project\":\"CA-D-ASC-2307-RR\",\"dept\":\"ASC\",\"total\":233517.06},{\"project\":\"CA-D-ASC-2308-CG\",\"dept\":\"ASC\",\"total\":350727.67},{\"project\":\"CA-D-ASC-2339-RR\",\"dept\":\"ASC\",\"total\":407463.24},{\"project\":\"CA-D-ASC-2341-RR\",\"dept\":\"ASC\",\"total\":119550.89},{\"project\":\"CA-D-ASC-2342-RR\",\"dept\":\"ASC\",\"total\":119550.89},{\"project\":\"CA-D-ASC-2355-RR\",\"dept\":\"ASC\",\"total\":194546.67},{\"project\":\"CA-D-ASC-2356-RR\",\"dept\":\"ASC\",\"total\":194546.67},{\"project\":\"CA-D-ASC-2360-H\",\"dept\":\"ASC\",\"total\":254042.66},{\"project\":\"CA-D-ASC-2371-RR\",\"dept\":\"ASC\",\"total\":235033.55},{\"project\":\"CA-D-ASC-2372-CG\",\"dept\":\"ASC\",\"total\":221185.13},{\"project\":\"CA-D-ASC-2374-OG\",\"dept\":\"ASC\",\"total\":143000.08},{\"project\":\"CA-D-ASC-2380-CG\",\"dept\":\"ASC\",\"total\":237105.33},{\"project\":\"CA-D-ASC-2389-RR\",\"dept\":\"ASC\",\"total\":244447.84},{\"project\":\"CA-D-ASC-2390-RR\",\"dept\":\"ASC\",\"total\":244447.84},{\"project\":\"CA-D-ASC-2414-CG\",\"dept\":\"ASC\",\"total\":207229.47},{\"project\":\"CA-D-ASC-2420-CG\",\"dept\":\"ASC\",\"total\":305259.92},{\"project\":\"CA-D-ASC-5929-RR \",\"dept\":\"ASC\",\"total\":413242.26},{\"project\":\"CA-D-ASC-6414-RR\",\"dept\":\"ASC\",\"total\":165487.84},{\"project\":\"CA-D-ASC-6578-H\",\"dept\":\"ASC\",\"total\":426204.83},{\"project\":\"CA-D-ASC-6796-RR\",\"dept\":\"ASC\",\"total\":253764.09},{\"project\":\"CA-D-ASC-7233-RR\",\"dept\":\"ASC\",\"total\":230352.84},{\"project\":\"CA-D-ASC-7281-RR\",\"dept\":\"ASC\",\"total\":165509.34},{\"project\":\"CA-D-ASC-7366-RR\",\"dept\":\"ASC\",\"total\":372423.25},{\"project\":\"CA-D-ASC-7369-RR\",\"dept\":\"ASC\",\"total\":409668.51},{\"project\":\"CA-D-ASC-7373-RR\",\"dept\":\"ASC\",\"total\":207229.47},{\"project\":\"CA-D-ASC-7384-RR\",\"dept\":\"ASC\",\"total\":207253.84},{\"project\":\"CA-D-ASC-7507-H\",\"dept\":\"ASC\",\"total\":181815.06},{\"project\":\"CA-D-ASC-7624-RR\",\"dept\":\"ASC\",\"total\":260364.29},{\"project\":\"CA-D-ASC-7666-RR\",\"dept\":\"ASC\",\"total\":239120.97},{\"project\":\"CA-D-ASC-7690-H\",\"dept\":\"ASC\",\"total\":309959.29},{\"project\":\"CA-D-ASC-7744-RR\",\"dept\":\"ASC\",\"total\":459552.32},{\"project\":\"CA-D-ASC-7771-RR\",\"dept\":\"ASC\",\"total\":155907.82},{\"project\":\"CA-D-ASC-7776-RR\",\"dept\":\"ASC\",\"total\":155907.82},{\"project\":\"CA-D-BAE-2005-RR\",\"dept\":\"BAE\",\"total\":772177.02},{\"project\":\"CA-D-BAE-2011-RR\",\"dept\":\"BAE\",\"total\":131459.69},{\"project\":\"CA-D-BAE-2031-H\",\"dept\":\"BAE\",\"total\":343550.44},{\"project\":\"CA-D-BAE-2190-RR\",\"dept\":\"BAE\",\"total\":147242.14},{\"project\":\"CA-D-BAE-2208-CG\",\"dept\":\"BAE\",\"total\":384729.14},{\"project\":\"CA-D-BAE-2212-H\",\"dept\":\"BAE\",\"total\":126322.62},{\"project\":\"CA-D-BAE-2225-CG\",\"dept\":\"BAE\",\"total\":379209.44},{\"project\":\"CA-D-BAE-2228-RR\",\"dept\":\"BAE\",\"total\":494349.61},{\"project\":\"CA-D-BAE-2230-RR\",\"dept\":\"BAE\",\"total\":168204.62},{\"project\":\"CA-D-BAE-2231-RR\",\"dept\":\"BAE\",\"total\":273539.31},{\"project\":\"CA-D-BAE-2270-OG\",\"dept\":\"BAE\",\"total\":807219.17},{\"project\":\"CA-D-BAE-2271-OG\",\"dept\":\"BAE\",\"total\":350897.4},{\"project\":\"CA-D-BAE-2277-RR\",\"dept\":\"BAE\",\"total\":326144.68},{\"project\":\"CA-D-BAE-2312-OG\",\"dept\":\"BAE\",\"total\":185035.14},{\"project\":\"CA-D-BAE-2314-CG\",\"dept\":\"BAE\",\"total\":494513.14},{\"project\":\"CA-D-BAE-2335-RR\",\"dept\":\"BAE\",\"total\":290519.37},{\"project\":\"CA-D-BAE-2375-OG\",\"dept\":\"BAE\",\"total\":454236.79},{\"project\":\"CA-D-BAE-6444-H\",\"dept\":\"BAE\",\"total\":137904.4},{\"project\":\"CA-D-BAE-7098-H\",\"dept\":\"BAE\",\"total\":473636.21},{\"project\":\"CA-D-BAE-7099-H\",\"dept\":\"BAE\",\"total\":506104.65},{\"project\":\"CA-D-BAE-7725-H\",\"dept\":\"BAE\",\"total\":131459.69},{\"project\":\"CA-D-BAE-7737-RR\",\"dept\":\"BAE\",\"total\":772177.02},{\"project\":\"CA-D-BAE-7746-H\",\"dept\":\"BAE\",\"total\":218791.31},{\"project\":\"CA-D-BAE-7808-RR\",\"dept\":\"BAE\",\"total\":247844.17},{\"project\":\"CA-D-ENM-2064-H\",\"dept\":\"ENM\",\"total\":379998.73},{\"project\":\"CA-D-ENM-2103-H\",\"dept\":\"ENM\",\"total\":328209.58},{\"project\":\"CA-D-ENM-2105-H\",\"dept\":\"ENM\",\"total\":1149456.8},{\"project\":\"CA-D-ENM-2141-H\",\"dept\":\"ENM\",\"total\":590095.02},{\"project\":\"CA-D-ENM-2150-H\",\"dept\":\"ENM\",\"total\":1087890.3},{\"project\":\"CA-D-ENM-2161-H\",\"dept\":\"ENM\",\"total\":350081.7},{\"project\":\"CA-D-ENM-2174-OG\",\"dept\":\"ENM\",\"total\":948073.55},{\"project\":\"CA-D-ENM-2189-RR\",\"dept\":\"ENM\",\"total\":241036.21},{\"project\":\"CA-D-ENM-2309-H\",\"dept\":\"ENM\",\"total\":687052.9},{\"project\":\"CA-D-ENM-2316-OG\",\"dept\":\"ENM\",\"total\":338407.37},{\"project\":\"CA-D-ENM-2351-H\",\"dept\":\"ENM\",\"total\":240438.55},{\"project\":\"CA-D-ENM-2353-RR\",\"dept\":\"ENM\",\"total\":251034.16},{\"project\":\"CA-D-ENM-2354-RR\",\"dept\":\"ENM\",\"total\":240438.55},{\"project\":\"CA-D-ENM-4162-H\",\"dept\":\"ENM\",\"total\":397657.7},{\"project\":\"CA-D-ENM-4278-H\",\"dept\":\"ENM\",\"total\":251034.16},{\"project\":\"CA-D-ENM-5234-H\",\"dept\":\"ENM\",\"total\":380991.29},{\"project\":\"CA-D-ENM-5671-RR\",\"dept\":\"ENM\",\"total\":290725.37},{\"project\":\"CA-D-ENM-6020-H\",\"dept\":\"ENM\",\"total\":328263.55},{\"project\":\"CA-D-ENM-6264-H\",\"dept\":\"ENM\",\"total\":857282.53},{\"project\":\"CA-D-ENM-6546-H\",\"dept\":\"ENM\",\"total\":362861.66},{\"project\":\"CA-D-ENM-6772-H\",\"dept\":\"ENM\",\"total\":444325.29},{\"project\":\"CA-D-ENM-6851-H\",\"dept\":\"ENM\",\"total\":545983.16},{\"project\":\"CA-D-ENM-7136-H\",\"dept\":\"ENM\",\"total\":304914.31},{\"project\":\"CA-D-ENM-7314-RR\",\"dept\":\"ENM\",\"total\":251046.42},{\"project\":\"CA-D-ENM-7356-RR\",\"dept\":\"ENM\",\"total\":260966.39},{\"project\":\"CA-D-ENM-7654-H\",\"dept\":\"ENM\",\"total\":2298344.34},{\"project\":\"CA-D-ESP-2020-H\",\"dept\":\"ESP\",\"total\":374374.01},{\"project\":\"CA-D-ESP-2084-H\",\"dept\":\"ESP\",\"total\":255647.14},{\"project\":\"CA-D-ESP-2086-H\",\"dept\":\"ESP\",\"total\":261191},{\"project\":\"CA-D-ESP-2087-H\",\"dept\":\"ESP\",\"total\":292331.16},{\"project\":\"CA-D-ESP-2094-H\",\"dept\":\"ESP\",\"total\":283711.1},{\"project\":\"CA-D-ESP-2163-H\",\"dept\":\"ESP\",\"total\":616384.65},{\"project\":\"CA-D-ESP-2201-H \",\"dept\":\"ESP\",\"total\":437142.14},{\"project\":\"CA-D-ESP-2244-H\",\"dept\":\"ESP\",\"total\":286215.04},{\"project\":\"CA-D-ESP-2245-H\",\"dept\":\"ESP\",\"total\":487499.52},{\"project\":\"CA-D-ESP-2367-OG\",\"dept\":\"ESP\",\"total\":294730.47},{\"project\":\"CA-D-ESP-7005-H\",\"dept\":\"ESP\",\"total\":298908.09},{\"project\":\"CA-D-ESP-7104-H\",\"dept\":\"ESP\",\"total\":687292.66},{\"project\":\"CA-D-ESP-7122-H\",\"dept\":\"ESP\",\"total\":475685.48},{\"project\":\"CA-D-ESP-7140-H\",\"dept\":\"ESP\",\"total\":247903.28},{\"project\":\"CA-D-ESP-7687-H\",\"dept\":\"ESP\",\"total\":304065},{\"project\":\"CA-D-ESP-7853-H\",\"dept\":\"ESP\",\"total\":487792.66},{\"project\":\"CA-D-ETX-2102-H\",\"dept\":\"ETX\",\"total\":274050.9},{\"project\":\"CA-D-ETX-2152-H\",\"dept\":\"ETX\",\"total\":272571.99},{\"project\":\"CA-D-ETX-2227-H\",\"dept\":\"ETX\",\"total\":502575.98},{\"project\":\"CA-D-ETX-2233-H\",\"dept\":\"ETX\",\"total\":779976.79},{\"project\":\"CA-D-ETX-2293-SG\",\"dept\":\"ETX\",\"total\":2051898.26},{\"project\":\"CA-D-ETX-2345-H\",\"dept\":\"ETX\",\"total\":119363.97},{\"project\":\"CA-D-ETX-2421-CG\",\"dept\":\"ETX\",\"total\":123560.31},{\"project\":\"CA-D-ETX-3926-H\",\"dept\":\"ETX\",\"total\":298066.86},{\"project\":\"CA-D-ETX-6718-H\",\"dept\":\"ETX\",\"total\":1524797.18},{\"project\":\"CA-D-ETX-7751-RR\",\"dept\":\"ETX\",\"total\":369194.77},{\"project\":\"CA-D-EVE-2241-H\",\"dept\":\"EVE\",\"total\":680414.28},{\"project\":\"CA-D-EVE-2264-H\",\"dept\":\"EVE\",\"total\":97445.44},{\"project\":\"CA-D-EVE-2265-H\",\"dept\":\"EVE\",\"total\":100074.84},{\"project\":\"CA-D-EVE-2266-H\",\"dept\":\"EVE\",\"total\":330519.7},{\"project\":\"CA-D-EVE-2268-H\",\"dept\":\"EVE\",\"total\":292202.61},{\"project\":\"CA-D-EVE-2365-H\",\"dept\":\"EVE\",\"total\":126972.56},{\"project\":\"CA-D-EVE-2369-H\",\"dept\":\"EVE\",\"total\":145245.98},{\"project\":\"CA-D-EVE-3515-H\",\"dept\":\"EVE\",\"total\":326650.95},{\"project\":\"CA-D-EVE-4244-H\",\"dept\":\"EVE\",\"total\":388918.68},{\"project\":\"CA-D-EVE-5490-H\",\"dept\":\"EVE\",\"total\":131629.89},{\"project\":\"CA-D-EVE-5542-H\",\"dept\":\"EVE\",\"total\":463108.7},{\"project\":\"CA-D-EVE-5630-H\",\"dept\":\"EVE\",\"total\":100296.98},{\"project\":\"CA-D-EVE-6882-H\",\"dept\":\"EVE\",\"total\":402711.29},{\"project\":\"CA-D-EVE-7118-H\",\"dept\":\"EVE\",\"total\":98666.24},{\"project\":\"CA-D-FST-2028-H\",\"dept\":\"FST\",\"total\":634302.89},{\"project\":\"CA-D-FST-2090-H\",\"dept\":\"FST\",\"total\":213773.12},{\"project\":\"CA-D-FST-2093-H\",\"dept\":\"FST\",\"total\":272696.9},{\"project\":\"CA-D-FST-2106-H\",\"dept\":\"FST\",\"total\":310820.36},{\"project\":\"CA-D-FST-2187-H\",\"dept\":\"FST\",\"total\":724638.17},{\"project\":\"CA-D-FST-2236-RR\",\"dept\":\"FST\",\"total\":336256.43},{\"project\":\"CA-D-FST-2281-CG\",\"dept\":\"FST\",\"total\":365911.21},{\"project\":\"CA-D-FST-2282-CG\",\"dept\":\"FST\",\"total\":1066127.12},{\"project\":\"CA-D-FST-2317-H\",\"dept\":\"FST\",\"total\":338377.88},{\"project\":\"CA-D-FST-2321-OG\",\"dept\":\"FST\",\"total\":281849.88},{\"project\":\"CA-D-FST-2348-RR\",\"dept\":\"FST\",\"total\":361322.3},{\"project\":\"CA-D-FST-2366-OG\",\"dept\":\"FST\",\"total\":196744.81},{\"project\":\"CA-D-FST-2377-OG\",\"dept\":\"FST\",\"total\":307852.33},{\"project\":\"CA-D-FST-2379-RR\",\"dept\":\"FST\",\"total\":195483.28},{\"project\":\"CA-D-FST-3627-H\",\"dept\":\"FST\",\"total\":161874.07},{\"project\":\"CA-D-FST-4929-H\",\"dept\":\"FST\",\"total\":646461.14},{\"project\":\"CA-D-FST-6097-H\",\"dept\":\"FST\",\"total\":351427.94},{\"project\":\"CA-D-FST-6568-H\",\"dept\":\"FST\",\"total\":1701786.13},{\"project\":\"CA-D-FST-6975-H\",\"dept\":\"FST\",\"total\":361344.27},{\"project\":\"CA-D-FST-7105-H\",\"dept\":\"FST\",\"total\":306905.72},{\"project\":\"CA-D-FST-7598-H \",\"dept\":\"FST\",\"total\":666620.18},{\"project\":\"CA-D-HCE-2049-H\",\"dept\":\"HCE\",\"total\":192082.12},{\"project\":\"CA-D-HCE-2050-H\",\"dept\":\"HCE\",\"total\":487326.13},{\"project\":\"CA-D-HCE-2051-H\",\"dept\":\"HCE\",\"total\":146368.92},{\"project\":\"CA-D-HCE-2055-H\",\"dept\":\"HCE\",\"total\":126682.12},{\"project\":\"CA-D-HCE-2151-H\",\"dept\":\"HCE\",\"total\":202138.32},{\"project\":\"CA-D-HCE-2159-RR\",\"dept\":\"HCE\",\"total\":146368.92},{\"project\":\"CA-D-HCE-2184-RR\",\"dept\":\"HCE\",\"total\":147234.26},{\"project\":\"CA-D-HCE-2195-H\",\"dept\":\"HCE\",\"total\":103843.31},{\"project\":\"CA-D-HCE-2213-H\",\"dept\":\"HCE\",\"total\":89907.86},{\"project\":\"CA-D-HCE-2214-H\",\"dept\":\"HCE\",\"total\":143448.41},{\"project\":\"CA-D-HCE-2220-H\",\"dept\":\"HCE\",\"total\":98823.99},{\"project\":\"CA-D-HCE-2234-H\",\"dept\":\"HCE\",\"total\":84481.5},{\"project\":\"CA-D-HCE-2267-H\",\"dept\":\"HCE\",\"total\":255500.08},{\"project\":\"CA-D-HCE-2269-H\",\"dept\":\"HCE\",\"total\":171985.46},{\"project\":\"CA-D-HCE-2300-H\",\"dept\":\"HCE\",\"total\":158067.23},{\"project\":\"CA-D-HCE-2302-H \",\"dept\":\"HCE\",\"total\":110958.15},{\"project\":\"CA-D-HCE-2319-H\",\"dept\":\"HCE\",\"total\":151096.51},{\"project\":\"CA-D-HCE-2344-RR\",\"dept\":\"HCE\",\"total\":120584.91},{\"project\":\"CA-D-HCE-2358-H\",\"dept\":\"HCE\",\"total\":123525.33},{\"project\":\"CA-D-HCE-2361-H\",\"dept\":\"HCE\",\"total\":145888.01},{\"project\":\"CA-D-HCE-2362-H\",\"dept\":\"HCE\",\"total\":257664},{\"project\":\"CA-D-HCE-7035-H\",\"dept\":\"HCE\",\"total\":104897.03},{\"project\":\"CA-D-HCE-7513-H\",\"dept\":\"HCE\",\"total\":381187.65},{\"project\":\"CA-D-HCE-7743-H\",\"dept\":\"HCE\",\"total\":151215.15},{\"project\":\"CA-D-LAW-2058-H\",\"dept\":\"LAW\",\"total\":145099.81},{\"project\":\"CA-D-LAW-2076-H\",\"dept\":\"LAW\",\"total\":122358.14},{\"project\":\"CA-D-LAW-2085-H\",\"dept\":\"LAW\",\"total\":125208.25},{\"project\":\"CA-D-LAW-2122-H\",\"dept\":\"LAW\",\"total\":303198.32},{\"project\":\"CA-D-LAW-2128-CG\",\"dept\":\"LAW\",\"total\":429360.92},{\"project\":\"CA-D-LAW-2177-OG\",\"dept\":\"LAW\",\"total\":250297.92},{\"project\":\"CA-D-LAW-2178-H\",\"dept\":\"LAW\",\"total\":414251.68},{\"project\":\"CA-D-LAW-2203-H\",\"dept\":\"LAW\",\"total\":847470.38},{\"project\":\"CA-D-LAW-2217-CG\",\"dept\":\"LAW\",\"total\":425354.89},{\"project\":\"CA-D-LAW-2229-H\",\"dept\":\"LAW\",\"total\":507427.89},{\"project\":\"CA-D-LAW-2243-H\",\"dept\":\"LAW\",\"total\":553400.7},{\"project\":\"CA-D-LAW-2256-CG\",\"dept\":\"LAW\",\"total\":635920.92},{\"project\":\"CA-D-LAW-2274-RR\",\"dept\":\"LAW\",\"total\":660634.14},{\"project\":\"CA-D-LAW-2295-H\",\"dept\":\"LAW\",\"total\":356569.7},{\"project\":\"CA-D-LAW-2296-H\",\"dept\":\"LAW\",\"total\":498798},{\"project\":\"CA-D-LAW-2315-RR\",\"dept\":\"LAW\",\"total\":122358.14},{\"project\":\"CA-D-LAW-2333-OG\",\"dept\":\"LAW\",\"total\":420909.32},{\"project\":\"CA-D-LAW-2352-H\",\"dept\":\"LAW\",\"total\":469607.59},{\"project\":\"CA-D-LAW-2386-OG \",\"dept\":\"LAW\",\"total\":122554.14},{\"project\":\"CA-D-LAW-4264-H\",\"dept\":\"LAW\",\"total\":309180.3},{\"project\":\"CA-D-LAW-4526-H\",\"dept\":\"LAW\",\"total\":373464.52},{\"project\":\"CA-D-LAW-5332-H\",\"dept\":\"LAW\",\"total\":308785.21},{\"project\":\"CA-D-LAW-5631-RR\",\"dept\":\"LAW\",\"total\":918607.08},{\"project\":\"CA-D-LAW-5661-H\",\"dept\":\"LAW\",\"total\":520641.83},{\"project\":\"CA-D-LAW-6036-H\",\"dept\":\"LAW\",\"total\":811808.18},{\"project\":\"CA-D-LAW-6397-H\",\"dept\":\"LAW\",\"total\":114036.55},{\"project\":\"CA-D-LAW-6403-RR\",\"dept\":\"LAW\",\"total\":327200.87},{\"project\":\"CA-D-LAW-6864-H\",\"dept\":\"LAW\",\"total\":169339.44},{\"project\":\"CA-D-LAW-6910-H\",\"dept\":\"LAW\",\"total\":227308.7},{\"project\":\"CA-D-LAW-6999-H\",\"dept\":\"LAW\",\"total\":376553.99},{\"project\":\"CA-D-LAW-7034-H\",\"dept\":\"LAW\",\"total\":482660.73},{\"project\":\"CA-D-LAW-7137-H\",\"dept\":\"LAW\",\"total\":256455.24},{\"project\":\"CA-D-LAW-7214-RR\",\"dept\":\"LAW\",\"total\":373464.52},{\"project\":\"CA-D-LAW-7348-RR\",\"dept\":\"LAW\",\"total\":215087.81},{\"project\":\"CA-D-LAW-7349-RR\",\"dept\":\"LAW\",\"total\":120880.39},{\"project\":\"CA-D-LAW-7350-RR\",\"dept\":\"LAW\",\"total\":120880.39},{\"project\":\"CA-D-LAW-7551-RR\",\"dept\":\"LAW\",\"total\":221414.92},{\"project\":\"CA-D-MCB-2310-H\",\"dept\":\"MCB\",\"total\":53294.96},{\"project\":\"CA-D-MCB-4126-H\",\"dept\":\"MCB\",\"total\":543605.77},{\"project\":\"CA-D-MCB-5554-H\",\"dept\":\"MCB\",\"total\":618483.22},{\"project\":\"CA-D-MCB-5896-H\",\"dept\":\"MCB\",\"total\":109084.6},{\"project\":\"CA-D-MCB-6239-H\",\"dept\":\"MCB\",\"total\":211795.51},{\"project\":\"CA-D-MCB-6365-H\",\"dept\":\"MCB\",\"total\":168706.63},{\"project\":\"CA-D-MCB-6471-H\",\"dept\":\"MCB\",\"total\":48556.64},{\"project\":\"CA-D-MCB-6731-H\",\"dept\":\"MCB\",\"total\":58146.64},{\"project\":\"CA-D-MCB-6735-H\",\"dept\":\"MCB\",\"total\":295257.33},{\"project\":\"CA-D-MCB-7165-H\",\"dept\":\"MCB\",\"total\":62918.16},{\"project\":\"CA-D-MCB-7237-H\",\"dept\":\"MCB\",\"total\":240170.78},{\"project\":\"CA-D-MCB-7399-H\",\"dept\":\"MCB\",\"total\":214952.25},{\"project\":\"CA-D-MCB-7420-H\",\"dept\":\"MCB\",\"total\":347008.31},{\"project\":\"CA-D-MMG-2313-H\",\"dept\":\"MIC\",\"total\":81518.49},{\"project\":\"CA-D-MMG-5733-H\",\"dept\":\"MIC\",\"total\":76769.34},{\"project\":\"CA-D-MMG-7235-H\",\"dept\":\"MIC\",\"total\":217780.93},{\"project\":\"CA-D-MMG-7402-H\",\"dept\":\"MIC\",\"total\":64986.84},{\"project\":\"CA-D-MMG-7473-H\",\"dept\":\"MIC\",\"total\":211160.9},{\"project\":\"CA-D-NPB-2330-H\",\"dept\":\"NPB\",\"total\":383187.29},{\"project\":\"CA-D-NPB-3512-H\",\"dept\":\"NPB\",\"total\":503868.4},{\"project\":\"CA-D-NPB-6309-H\",\"dept\":\"NPB\",\"total\":804803.98},{\"project\":\"CA-D-NPB-7153-H\",\"dept\":\"NPB\",\"total\":389995},{\"project\":\"CA-D-NTR-2060-H\",\"dept\":\"NTR\",\"total\":276147.45},{\"project\":\"CA-D-NTR-2092-H\",\"dept\":\"NTR\",\"total\":1637848.92},{\"project\":\"CA-D-NTR-2242-H\",\"dept\":\"NTR\",\"total\":340306.83},{\"project\":\"CA-D-NTR-2285-CG\",\"dept\":\"NTR\",\"total\":837141.47},{\"project\":\"CA-D-NTR-2407-CG\",\"dept\":\"NTR\",\"total\":255443.45},{\"project\":\"CA-D-NTR-4543-H\",\"dept\":\"NTR\",\"total\":1745304.75},{\"project\":\"CA-D-NTR-5908-H\",\"dept\":\"NTR\",\"total\":1648725.69},{\"project\":\"CA-D-NTR-5966-H\",\"dept\":\"NTR\",\"total\":503003.67},{\"project\":\"CA-D-NTR-6316-H\",\"dept\":\"NTR\",\"total\":2700298.97},{\"project\":\"CA-D-NTR-7836-H\",\"dept\":\"NTR\",\"total\":692505.85},{\"project\":\"CA-D-PLB-2259-H\",\"dept\":\"PLB\",\"total\":751667.86},{\"project\":\"CA-D-PLB-2260-H\",\"dept\":\"PLB\",\"total\":296373.15},{\"project\":\"CA-D-PLB-3504-H\",\"dept\":\"PLB\",\"total\":119312.55},{\"project\":\"CA-D-PLB-3511-CG\",\"dept\":\"PLB\",\"total\":327030.52},{\"project\":\"CA-D-PLB-3514-CG\",\"dept\":\"PLB\",\"total\":373991.52},{\"project\":\"CA-D-PLB-6167-H\",\"dept\":\"PLB\",\"total\":636835.15},{\"project\":\"CA-D-PLB-6991-H\",\"dept\":\"PLB\",\"total\":353546.17},{\"project\":\"CA-D-PLB-7226-H\",\"dept\":\"PLB\",\"total\":220838.99},{\"project\":\"CA-D-PLB-7381-H\",\"dept\":\"PLB\",\"total\":366547.81},{\"project\":\"CA-D-PLB-7412-H\",\"dept\":\"PLB\",\"total\":230911.52},{\"project\":\"CA-D-PLS-2013-H\",\"dept\":\"PLS\",\"total\":2260041.66},{\"project\":\"CA-D-PLS-2016-H\",\"dept\":\"PLS\",\"total\":952918.4},{\"project\":\"CA-D-PLS-2017-H\",\"dept\":\"PLS\",\"total\":279425.33},{\"project\":\"CA-D-PLS-2066-H\",\"dept\":\"PLS\",\"total\":1219983.83},{\"project\":\"CA-D-PLS-2073-H\",\"dept\":\"PLS\",\"total\":357603.83},{\"project\":\"CA-D-PLS-2078-H\",\"dept\":\"PLS\",\"total\":884739.72},{\"project\":\"CA-D-PLS-2079-H\",\"dept\":\"PLS\",\"total\":340808.54},{\"project\":\"CA-D-PLS-2125-CG\",\"dept\":\"PLS\",\"total\":1482012.44},{\"project\":\"CA-D-PLS-2127-CG\",\"dept\":\"PLS\",\"total\":683139.33},{\"project\":\"CA-D-PLS-2129-H\",\"dept\":\"PLS\",\"total\":850719.93},{\"project\":\"CA-D-PLS-2132-H\",\"dept\":\"PLS\",\"total\":406063.02},{\"project\":\"CA-D-PLS-2164-H\",\"dept\":\"PLS\",\"total\":229432.81},{\"project\":\"CA-D-PLS-2173-H\",\"dept\":\"PLS\",\"total\":233775.47},{\"project\":\"CA-D-PLS-2179-H\",\"dept\":\"PLS\",\"total\":1064739.62},{\"project\":\"CA-D-PLS-2183-H\",\"dept\":\"PLS\",\"total\":919012.02},{\"project\":\"CA-D-PLS-2205-H\",\"dept\":\"PLS\",\"total\":200617.29},{\"project\":\"CA-D-PLS-2218-OG\",\"dept\":\"PLS\",\"total\":329737.57},{\"project\":\"CA-D-PLS-2219-H\",\"dept\":\"PLS\",\"total\":339298.54},{\"project\":\"CA-D-PLS-2221-CG\",\"dept\":\"PLS\",\"total\":262918.18},{\"project\":\"CA-D-PLS-2222-CG\",\"dept\":\"PLS\",\"total\":263445.31},{\"project\":\"CA-D-PLS-2224-H\",\"dept\":\"PLS\",\"total\":724643.36},{\"project\":\"CA-D-PLS-2235-H\",\"dept\":\"PLS\",\"total\":279978.08},{\"project\":\"CA-D-PLS-2246-RR\",\"dept\":\"PLS\",\"total\":687222.01},{\"project\":\"CA-D-PLS-2247-H\",\"dept\":\"PLS\",\"total\":962770.72},{\"project\":\"CA-D-PLS-2272-OG\",\"dept\":\"PLS\",\"total\":212266.09},{\"project\":\"CA-D-PLS-2273-OG\",\"dept\":\"PLS\",\"total\":214788.7},{\"project\":\"CA-D-PLS-2276-OG\",\"dept\":\"PLS\",\"total\":273668.25},{\"project\":\"CA-D-PLS-2279-OG\",\"dept\":\"PLS\",\"total\":292535.3},{\"project\":\"CA-D-PLS-2289-OG\",\"dept\":\"PLS\",\"total\":236080.7},{\"project\":\"CA-D-PLS-2291-CG\",\"dept\":\"PLS\",\"total\":207636.7},{\"project\":\"CA-D-PLS-2305-CG\",\"dept\":\"PLS\",\"total\":196764.12},{\"project\":\"CA-D-PLS-2311-OG\",\"dept\":\"PLS\",\"total\":299355.7},{\"project\":\"CA-D-PLS-2324-OG\",\"dept\":\"PLS\",\"total\":187819.7},{\"project\":\"CA-D-PLS-2325-OG\",\"dept\":\"PLS\",\"total\":321920.18},{\"project\":\"CA-D-PLS-2327-H\",\"dept\":\"PLS\",\"total\":240858.96},{\"project\":\"CA-D-PLS-2329-OG\",\"dept\":\"PLS\",\"total\":304008.44},{\"project\":\"CA-D-PLS-2332-H\",\"dept\":\"PLS\",\"total\":579317.42},{\"project\":\"CA-D-PLS-2343-RR\",\"dept\":\"PLS\",\"total\":555935.26},{\"project\":\"CA-D-PLS-2349-H\",\"dept\":\"PLS\",\"total\":3112393.34},{\"project\":\"CA-D-PLS-2350-H\",\"dept\":\"PLS\",\"total\":515660.7},{\"project\":\"CA-D-PLS-2359-OG\",\"dept\":\"PLS\",\"total\":358947.08},{\"project\":\"CA-D-PLS-2370-CG\",\"dept\":\"PLS\",\"total\":217902.23},{\"project\":\"CA-D-PLS-2373-CG\",\"dept\":\"PLS\",\"total\":471580.44},{\"project\":\"CA-D-PLS-2378-OG\",\"dept\":\"PLS\",\"total\":168413.7},{\"project\":\"CA-D-PLS-2383-OG\",\"dept\":\"PLS\",\"total\":149728.7},{\"project\":\"CA-D-PLS-2384-OG\",\"dept\":\"PLS\",\"total\":234617.33},{\"project\":\"CA-D-PLS-2385-OG\",\"dept\":\"PLS\",\"total\":175370.32},{\"project\":\"CA-D-PLS-2418-CG\",\"dept\":\"PLS\",\"total\":149480.7},{\"project\":\"CA-D-PLS-2424-CG\",\"dept\":\"PLS\",\"total\":140984.12},{\"project\":\"CA-D-PLS 5457-RR\",\"dept\":\"PLS\",\"total\":203897.48},{\"project\":\"CA-D-PLS-5629-H\",\"dept\":\"PLS\",\"total\":750807.18},{\"project\":\"CA-D-PLS-5884-H\",\"dept\":\"PLS\",\"total\":635037.43},{\"project\":\"CA-D-PLS-5983-H\",\"dept\":\"PLS\",\"total\":265194.69},{\"project\":\"CA-D-PLS-6063-H\",\"dept\":\"PLS\",\"total\":468454.17},{\"project\":\"CA-D-PLS-6254-H\",\"dept\":\"PLS\",\"total\":477100.79},{\"project\":\"CA-D-PLS-6273-H\",\"dept\":\"PLS\",\"total\":544197.05},{\"project\":\"CA-D-PLS-6278-H\",\"dept\":\"PLS\",\"total\":2182727.25},{\"project\":\"CA-D-PLS-6315-H\",\"dept\":\"PLS\",\"total\":445881.08},{\"project\":\"CA-D-PLS-6410-H\",\"dept\":\"PLS\",\"total\":239504.76},{\"project\":\"CA-D-PLS-6418-H\",\"dept\":\"PLS\",\"total\":1721644.84},{\"project\":\"CA-D-PLS-6470-H\",\"dept\":\"PLS\",\"total\":372463.26},{\"project\":\"CA-D-PLS-6599-H\",\"dept\":\"PLS\",\"total\":433037.44},{\"project\":\"CA-D-PLS-6884-H\",\"dept\":\"PLS\",\"total\":2522314.11},{\"project\":\"CA-D-PLS-7033-H\",\"dept\":\"PLS\",\"total\":512903.62},{\"project\":\"CA-D-PLS-7121-H\",\"dept\":\"PLS\",\"total\":346040.87},{\"project\":\"CA-D-PLS-7250-RR\",\"dept\":\"PLS\",\"total\":1428686.79},{\"project\":\"CA-D-PLS-7259-RR\",\"dept\":\"PLS\",\"total\":671334.09},{\"project\":\"CA-D-PLS-7262-RR\",\"dept\":\"PLS\",\"total\":750808.33},{\"project\":\"CA-D-PLS-7279-H\",\"dept\":\"PLS\",\"total\":270638.48},{\"project\":\"CA-D-PLS-7311-H\",\"dept\":\"PLS\",\"total\":720737.52},{\"project\":\"CA-D-PLS-7344-H\",\"dept\":\"PLS\",\"total\":1147603.24},{\"project\":\"CA-D-PLS-7514-RR\",\"dept\":\"PLS\",\"total\":508698.05},{\"project\":\"CA-D-PLS-7641-H\",\"dept\":\"PLS\",\"total\":400080.02},{\"project\":\"CA-D-PLS-7658-H\",\"dept\":\"PLS\",\"total\":188312.21},{\"project\":\"CA-D-PLS-7663-RR\",\"dept\":\"PLS\",\"total\":454202.22},{\"project\":\"CA-D-PLS-7680-H\",\"dept\":\"PLS\",\"total\":328837.88},{\"project\":\"CA-D-PLS-7749-RR\",\"dept\":\"PLS\",\"total\":397349.42},{\"project\":\"CA-D-PLS-7864-RR\",\"dept\":\"PLS\",\"total\":212473.21},{\"project\":\"CA-D-PLS-7869-H\",\"dept\":\"PLS\",\"total\":279986.97},{\"project\":\"CA-D-PPA-2021-H\",\"dept\":\"PPA\",\"total\":619532.47},{\"project\":\"CA-D-PPA-2022-H\",\"dept\":\"PPA\",\"total\":363585.5},{\"project\":\"CA-D-PPA-2025-H\",\"dept\":\"PPA\",\"total\":1297756.69},{\"project\":\"CA-D-PPA-2057-CG\",\"dept\":\"PPA\",\"total\":638410.19},{\"project\":\"CA-D-PPA-2131-H\",\"dept\":\"PPA\",\"total\":502529.82},{\"project\":\"CA-D-PPA-2165-H\",\"dept\":\"PPA\",\"total\":459112.75},{\"project\":\"CA-D-PPA-2167-OG\",\"dept\":\"PPA\",\"total\":450542.33},{\"project\":\"CA-D-PPA-2185-H\",\"dept\":\"PPA\",\"total\":460135.27},{\"project\":\"CA-D-PPA-2223-CG\",\"dept\":\"PPA\",\"total\":474221.5},{\"project\":\"CA-D-PPA-2226-CG\",\"dept\":\"PPA\",\"total\":207580.64},{\"project\":\"CA-D-PPA-2258-CG \",\"dept\":\"PPA\",\"total\":480331.03},{\"project\":\"CA-D-PPA-2283-CG\",\"dept\":\"PPA\",\"total\":2319053.47},{\"project\":\"CA-D-PPA-2297-H\",\"dept\":\"PPA\",\"total\":517720.89},{\"project\":\"CA-D-PPA-2323-OG\",\"dept\":\"PPA\",\"total\":159950.01},{\"project\":\"CA-D-PPA-2347-OG\",\"dept\":\"PPA\",\"total\":878553.82},{\"project\":\"CA-D-PPA-2368-CG \",\"dept\":\"PPA\",\"total\":157116.01},{\"project\":\"CA-D-PPA-2392-CG\",\"dept\":\"PPA\",\"total\":951423.07},{\"project\":\"CA-D-PPA-5484-H\",\"dept\":\"PPA\",\"total\":466994.23},{\"project\":\"CA-D-PPA-5681-H\",\"dept\":\"PPA\",\"total\":362829.03},{\"project\":\"CA-D-PPA-6395-H\",\"dept\":\"PPA\",\"total\":341577.33},{\"project\":\"CA-D-PPA-6456-H\",\"dept\":\"PPA\",\"total\":577440.2},{\"project\":\"CA-D-PPA-6575-H\",\"dept\":\"PPA\",\"total\":943877.07},{\"project\":\"CA-D-PPA-6699-H\",\"dept\":\"PPA\",\"total\":563534.4},{\"project\":\"CA-D-PPA-6738-H\",\"dept\":\"PPA\",\"total\":879834.09},{\"project\":\"CA-D-PPA-7268-RR\",\"dept\":\"PPA\",\"total\":362893},{\"project\":\"CA-D-PPA-7536-H\",\"dept\":\"PPA\",\"total\":2872991.03},{\"project\":\"CA-D-PPA-7629-RR\",\"dept\":\"PPA\",\"total\":504771.23},{\"project\":\"CA-D-PPA-7757-H\",\"dept\":\"PPA\",\"total\":438992.19},{\"project\":\"CA-D-TXC-4313-RR\",\"dept\":\"TXC\",\"total\":5505},{\"project\":\"CA-D-TXC-6424-RR\",\"dept\":\"TXC\",\"total\":99351.41},{\"project\":\"CA-D-TXC-6425-RR\",\"dept\":\"TXC\",\"total\":140790.13},{\"project\":\"CA-D-TXC-6706-H\",\"dept\":\"TXC\",\"total\":269785.77},{\"project\":\"CA-D-TXC-7694-H\",\"dept\":\"TXC\",\"total\":54781.41},{\"project\":\"CA-D-TXC-7739-H\",\"dept\":\"TXC\",\"total\":140783.81},{\"project\":\"CA-D-VIT-2196-H\",\"dept\":\"VIT\",\"total\":1171739.6},{\"project\":\"CA-D-VIT-2322-H\",\"dept\":\"VIT\",\"total\":458077.79},{\"project\":\"CA-D-VIT-2346-H\",\"dept\":\"VIT\",\"total\":446791.93},{\"project\":\"CA-D-VIT-4345-H\",\"dept\":\"VIT\",\"total\":500147.86},{\"project\":\"CA-D-VIT-4662-H\",\"dept\":\"VIT\",\"total\":441864.55},{\"project\":\"CA-D-VIT-6013-H\",\"dept\":\"VIT\",\"total\":427761.83},{\"project\":\"CA-D-VIT-6700-H\",\"dept\":\"VIT\",\"total\":237387.98},{\"project\":\"CA-D-VIT-6923-H\",\"dept\":\"VIT\",\"total\":677161},{\"project\":\"CA-D-VIT-7086-H\",\"dept\":\"VIT\",\"total\":2043091.92},{\"project\":\"CA-D-VIT-7120-H\",\"dept\":\"VIT\",\"total\":381555.51},{\"project\":\"CA-D-VIT-7727-H\",\"dept\":\"VIT\",\"total\":237387.98},{\"project\":\"CA-D-VIT-7728-H\",\"dept\":\"VIT\",\"total\":679212.16},{\"project\":\"CA-D-VIT-7729-H\",\"dept\":\"VIT\",\"total\":671245.8},{\"project\":\"CA-D-WFB-2097-H\",\"dept\":\"WFB\",\"total\":656373.95},{\"project\":\"CA-D-WFB-2098-H\",\"dept\":\"WFB\",\"total\":1628578.76},{\"project\":\"CA-D-WFB-2376-RR\",\"dept\":\"WFB\",\"total\":656373.95},{\"project\":\"CA-D-WFB-2381-OG\",\"dept\":\"WFB\",\"total\":606781.82},{\"project\":\"CA-D-WFB-4071-H\",\"dept\":\"WFB\",\"total\":740050.27},{\"project\":\"CA-D-WFB-5245-H\",\"dept\":\"WFB\",\"total\":701117.55},{\"project\":\"CA-D-WFB-6126-H\",\"dept\":\"WFB\",\"total\":732570},{\"project\":\"CA-D-WFB-6342-H\",\"dept\":\"WFB\",\"total\":980186.51},{\"project\":\"CA-D-WFB-6721-H\",\"dept\":\"WFB\",\"total\":529908.74}]\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"f201\":{\"ARE\":118614,\"ASC\":197084,\"BAE\":102751,\"ENM\":162230,\"ESP\":42321,\"ETX\":70749,\"EVE\":67244,\"FST\":87323,\"HCE\":82584,\"LAW\":164470,\"MCB\":46619,\"MIC\":18238,\"NPB\":14732,\"NTR\":66300,\"PLB\":37751,\"PLS\":443446,\"PPA\":108406,\"TXC\":17880,\"VIT\":91277,\"WFB\":43563},\"f202\":{\"ARE\":46705,\"ASC\":497443,\"BAE\":111943,\"ENM\":61342,\"ESP\":0,\"ETX\":21721,\"EVE\":0,\"FST\":30029,\"HCE\":27933,\"LAW\":108730,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":91992,\"PPA\":37777,\"TXC\":44570,\"VIT\":0,\"WFB\":0},\"f203\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f204\":{\"ARE\":0,\"ASC\":311268,\"BAE\":1668245,\"ENM\":796243,\"ESP\":40344,\"ETX\":1993381,\"EVE\":0,\"FST\":1096984,\"HCE\":0,\"LAW\":944159,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":641322,\"PLB\":239271,\"PLS\":3616446,\"PPA\":2812899,\"TXC\":0,\"VIT\":0,\"WFB\":2331},\"f205\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f231\":{\"ARE\":165319,\"ASC\":1005795,\"BAE\":1882939,\"ENM\":1019815,\"ESP\":82665,\"ETX\":2085851,\"EVE\":67244,\"FST\":1214336,\"HCE\":110517,\"LAW\":1217359,\"MCB\":46619,\"MIC\":18238,\"NPB\":14732,\"NTR\":707622,\"PLB\":277022,\"PLS\":4151884,\"PPA\":2959082,\"TXC\":62450,\"VIT\":91277,\"WFB\":45894},\"f219\":{\"ARE\":673303.22,\"ASC\":918055.9399999996,\"BAE\":470735.6899999999,\"ENM\":2280171.5500000003,\"ESP\":787009.3400000003,\"ETX\":278983.71,\"EVE\":139456.74,\"FST\":747304.8600000002,\"HCE\":9836.28,\"LAW\":969787.3399999996,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":1896739.8399999999,\"PLB\":0,\"PLS\":3569989.5799999987,\"PPA\":2987236.5300000003,\"TXC\":0,\"VIT\":762493.44,\"WFB\":48826.13},\"f209\":{\"ARE\":262,\"ASC\":266624,\"BAE\":267717,\"ENM\":1087708,\"ESP\":1116680,\"ETX\":123385,\"EVE\":497780,\"FST\":24109,\"HCE\":197508,\"LAW\":1051869,\"MCB\":239175,\"MIC\":301267,\"NPB\":164728,\"NTR\":0,\"PLB\":2339019,\"PLS\":3331749,\"PPA\":995455,\"TXC\":0,\"VIT\":0,\"WFB\":72394},\"f310\":{\"ARE\":0,\"ASC\":98550,\"BAE\":21998,\"ENM\":0,\"ESP\":0,\"ETX\":111021,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":694922,\"MCB\":269991,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":1200006,\"PPA\":978514,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f308\":{\"ARE\":5347896.92,\"ASC\":518473.8799999999,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":141796.1,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":264617.03,\"PLB\":0,\"PLS\":1091586.72,\"PPA\":1762485.4600000002,\"TXC\":0,\"VIT\":13150.47,\"WFB\":0},\"f311\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":73654,\"ESP\":9861,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":22181,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":190505,\"TXC\":0,\"VIT\":0,\"WFB\":26985},\"f316\":{\"ARE\":0,\"ASC\":82439,\"BAE\":0,\"ENM\":3064205,\"ESP\":0,\"ETX\":530625,\"EVE\":1141192,\"FST\":534614,\"HCE\":414006,\"LAW\":17476,\"MCB\":1073539,\"MIC\":0,\"NPB\":637665,\"NTR\":948825,\"PLB\":290489,\"PLS\":12470,\"PPA\":322810,\"TXC\":13926,\"VIT\":5630,\"WFB\":0},\"f312\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f313\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f314\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":285353,\"MCB\":0,\"MIC\":0,\"NPB\":768276,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f315\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f318\":{\"ARE\":54446,\"ASC\":316861,\"BAE\":1022832,\"ENM\":83990,\"ESP\":913685,\"ETX\":1076351,\"EVE\":12298,\"FST\":935,\"HCE\":260755,\"LAW\":606362,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":6205,\"PPA\":1234,\"TXC\":0,\"VIT\":0,\"WFB\":759307},\"f332\":{\"ARE\":6075908.140000001,\"ASC\":2201003.820000001,\"BAE\":1783282.69,\"ENM\":6589728.549999997,\"ESP\":2827235.3399999994,\"ETX\":2120365.71,\"EVE\":1790726.74,\"FST\":1306962.8599999999,\"HCE\":882105.28,\"LAW\":3767565.439999999,\"MCB\":1604886,\"MIC\":301267,\"NPB\":1570669,\"NTR\":3110181.87,\"PLB\":2629508,\"PLS\":9212006.30000001,\"PPA\":7238239.990000001,\"TXC\":13926,\"VIT\":781273.91,\"WFB\":907512.1300000001},\"f220\":{\"ARE\":4037386.229999999,\"ASC\":7736238.679999997,\"BAE\":3082284.0999999996,\"ENM\":3355367.4400000004,\"ESP\":2520438.52,\"ETX\":1854511.2299999997,\"EVE\":1595885.66,\"FST\":3372363.83,\"HCE\":2615703.1399999997,\"LAW\":6395737.249999999,\"MCB\":1056809.82,\"MIC\":332521.6,\"NPB\":415508.58,\"NTR\":1786273.26,\"PLB\":615541.63,\"PLS\":13474768.680000007,\"PPA\":5166565.890000001,\"TXC\":512375.3099999999,\"VIT\":3229956.7200000007,\"WFB\":5329331.02},\"f22F\":{\"ARE\":0,\"ASC\":3174,\"BAE\":0,\"ENM\":26257,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":41165,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":699141,\"PPA\":193562,\"TXC\":0,\"VIT\":44435,\"WFB\":0},\"f221\":{\"ARE\":51518.22,\"ASC\":2756788.5500000003,\"BAE\":510755.44,\"ENM\":35381.38,\"ESP\":43116.2,\"ETX\":23380.32,\"EVE\":104044.76,\"FST\":443447.34,\"HCE\":77623.75,\"LAW\":511546.2899999999,\"MCB\":3122.1,\"MIC\":189.9,\"NPB\":33793.64,\"NTR\":345324.03,\"PLB\":1412.92,\"PLS\":6055969.520000001,\"PPA\":217180.35,\"TXC\":10301.76,\"VIT\":269837.0999999999,\"WFB\":207643.86},\"f222\":{\"ARE\":686751.2499999998,\"ASC\":436821.7899999998,\"BAE\":1114407.99,\"ENM\":962778.71,\"ESP\":188479.46,\"ETX\":60539.97,\"EVE\":64884.92,\"FST\":2580667.4699999997,\"HCE\":191908.2299999997,\"LAW\":708898.2300000006,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":3388146.6699999995,\"PLB\":148533.91,\"PLS\":7558511.640000004,\"PPA\":2145508.6899999995,\"TXC\":94611.13,\"VIT\":1989243.95,\"WFB\":6948.37},\"f223\":{\"ARE\":647124.76,\"ASC\":1502095.2,\"BAE\":243597.95,\"ENM\":1817281.5100000002,\"ESP\":428938.88,\"ETX\":171408.78,\"EVE\":62072.06,\"FST\":884798.6299999999,\"HCE\":223417.9699999999,\"LAW\":1016280.31,\"MCB\":260543.88,\"MIC\":0,\"NPB\":47151.45,\"NTR\":1299179.22,\"PLB\":5036.78,\"PLS\":4761754.500000001,\"PPA\":1333150.3399999996,\"TXC\":17333.33,\"VIT\":1967402.23,\"WFB\":734612.17},\"f233\":{\"ARE\":5422780.46,\"ASC\":12435118.219999999,\"BAE\":4951045.4799999995,\"ENM\":6197066.040000001,\"ESP\":3180973.06,\"ETX\":2109840.3,\"EVE\":1826887.4,\"FST\":7281277.27,\"HCE\":3108653.0900000003,\"LAW\":8673627.079999998,\"MCB\":1320475.8,\"MIC\":332711.5,\"NPB\":496453.67,\"NTR\":6818923.180000001,\"PLB\":770525.24,\"PLS\":32550145.33999999,\"PPA\":9055967.270000001,\"TXC\":634621.53,\"VIT\":7500875,\"WFB\":6278535.420000001},\"f234\":{\"ARE\":11664007.6,\"ASC\":15641917.040000001,\"BAE\":8617267.170000002,\"ENM\":13806609.59,\"ESP\":6090873.400000001,\"ETX\":6316057.01,\"EVE\":3684858.140000001,\"FST\":9802576.13,\"HCE\":4101275.3699999996,\"LAW\":13658551.520000001,\"MCB\":2971980.8,\"MIC\":652216.5,\"NPB\":2081854.67,\"NTR\":10636727.05,\"PLB\":3677055.24,\"PLS\":45914035.64,\"PPA\":19253289.26,\"TXC\":710997.53,\"VIT\":8373425.91,\"WFB\":7231941.55}}\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = __webpack_require__(0);\r\nvar force = __webpack_require__(0);\r\nvar Color = __webpack_require__(8);\r\nvar d3_1 = __webpack_require__(0);\r\nvar data_1 = __webpack_require__(1);\r\nvar projects = data_1.getProjects();\r\nvar sumTotal = projects.reduce(function (prev, d) { return prev + d.total; }, 0);\r\nvar maxTotal = projects.reduce(function (prev, d) { return Math.max(prev, d.total); }, 0);\r\nvar chartSelector = \"#bubble\";\r\nvar width = 800;\r\nvar height = 800;\r\nvar center = {\r\n    x: (width / 2),\r\n    y: (height / 2),\r\n};\r\nvar scale = 50;\r\nvar categories = data_1.getCategories();\r\n// map to datam\r\nvar data = projects;\r\n// sort by total, limit\r\ndata.sort(function (a, b) { return b.total - a.total; });\r\nfunction getCircleColor(index) {\r\n    var defaultColor = \"#C7C8CC\";\r\n    var selectedCategory = data_1.getSelectedCategory();\r\n    if (selectedCategory < 0) {\r\n        return categories[index].color || defaultColor;\r\n    }\r\n    if (index === selectedCategory) {\r\n        return categories[index].color || defaultColor;\r\n    }\r\n    return defaultColor;\r\n}\r\nfunction getCircleStroke(index) {\r\n    return Color(categories[index].color)\r\n        .darken(0.5)\r\n        .hex();\r\n}\r\nfunction getCircleRadius(total) {\r\n    return Math.sqrt(total) / scale;\r\n}\r\nfunction getTargetX(categoryIndex) {\r\n    return Math.sin(2 * Math.PI * categoryIndex / categories.length) * (width / 5)\r\n        + center.x;\r\n}\r\nfunction getTargetY(categoryIndex) {\r\n    return Math.cos(2 * Math.PI * categoryIndex / categories.length) * (height / 5)\r\n        + center.y;\r\n}\r\nfunction getTargetRadius(d) {\r\n    var selectedCategory = data_1.getSelectedCategory();\r\n    if (selectedCategory < 0) {\r\n        return 0;\r\n    }\r\n    if (d.categoryIndex === selectedCategory) {\r\n        return 0;\r\n    }\r\n    return (width / 3);\r\n}\r\nfunction getStrengthMultiplier(d) {\r\n    return 2 + (d.total / maxTotal);\r\n}\r\n// build chart\r\nvar svg = d3\r\n    .select(chartSelector)\r\n    .append(\"svg\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height)\r\n    .append(\"g\");\r\n// initial setup\r\nvar circles = svg\r\n    .append(\"svg:g\")\r\n    .attr(\"id\", \"circles\")\r\n    .selectAll(\"circle\")\r\n    .data(data)\r\n    .enter()\r\n    .append(\"svg:circle\")\r\n    .attr(\"fill\", function (d) { return getCircleColor(d.categoryIndex); })\r\n    .attr(\"stroke\", function (d) { return getCircleStroke(d.categoryIndex); })\r\n    .attr(\"stroke-width\", \"1\")\r\n    .attr(\"cx\", function (d) { return getTargetX(d.categoryIndex); })\r\n    .attr(\"cy\", function (d) { return getTargetY(d.categoryIndex); })\r\n    .attr(\"r\", function (d) { return getCircleRadius(d.total); });\r\n// mouse over thick border and project view\r\nvar mouseoverChart = d3.select(\"#bubble-mouseover-chart\");\r\ncircles\r\n    .on(\"mouseover\", function () {\r\n    var project = d3.select(this).datum();\r\n    var category = categories[project.categoryIndex];\r\n    d3.select(this)\r\n        .transition()\r\n        .duration(100)\r\n        .attr(\"stroke\", \"#1d1d1d\")\r\n        .attr(\"stroke-width\", \"2\");\r\n    // show the chart\r\n    mouseoverChart\r\n        .classed(\"opaque\", false);\r\n    mouseoverChart.select(\"#bubble-mouseover-chart-icon\");\r\n    mouseoverChart.select(\"#bubble-mouseover-chart-topic\")\r\n        .text(category.name);\r\n    mouseoverChart.select(\"#bubble-mouseover-chart-title\")\r\n        .text(project.name);\r\n    mouseoverChart.select(\"#bubble-mouseover-chart-total\")\r\n        .text(\"$\" + (project.total / 1000000).toFixed(1) + \"M\");\r\n})\r\n    .on(\"mouseout\", function () {\r\n    d3.select(this)\r\n        .transition()\r\n        .duration(100)\r\n        .attr(\"stroke\", function (d) { return getCircleStroke(d.categoryIndex); })\r\n        .attr(\"stroke-width\", \"1\");\r\n    mouseoverChart\r\n        .classed(\"opaque\", true);\r\n});\r\nvar simulation;\r\nfunction buildSimulation() {\r\n    var selectedCategory = data_1.getSelectedCategory();\r\n    // build forces\r\n    simulation = force\r\n        .forceSimulation(data)\r\n        .force(\"collision\", force.forceCollide(function (d) { return getCircleRadius(d.total) * 0.95; }).strength(0.5).iterations(3))\r\n        .force(\"center\", force.forceCenter(center.x, center.y));\r\n    if (selectedCategory >= 0) {\r\n        // use radial positioning\r\n        simulation\r\n            .force(\"r\", force.forceRadial(function (d) { return getTargetRadius(d); }, center.x, center.y).strength(function (d) { return 0.1 * getStrengthMultiplier(d); }));\r\n    }\r\n    else {\r\n        // use x/y positioning\r\n        simulation\r\n            .force(\"x\", force.forceX(function (d) { return getTargetX(d.categoryIndex); }).strength(function (d) { return 0.05 * getStrengthMultiplier(d); }))\r\n            .force(\"y\", force.forceY(function (d) { return getTargetY(d.categoryIndex); }).strength(function (d) { return 0.05 * getStrengthMultiplier(d); }));\r\n    }\r\n    // listen to ticks\r\n    simulation.on(\"tick\", function () {\r\n        circles\r\n            .attr(\"cx\", function (d) {\r\n            return d.x;\r\n        })\r\n            .attr(\"cy\", function (d) {\r\n            return d.y;\r\n        });\r\n    });\r\n    // if no selected category, group items\r\n    if (selectedCategory < 0) {\r\n        d3_1.timeout(function () {\r\n            var forceX = simulation.force(\"x\");\r\n            if (forceX === undefined)\r\n                return;\r\n            var forceY = simulation.force(\"y\");\r\n            if (forceY === undefined)\r\n                return;\r\n            forceX.strength(0);\r\n            forceY.strength(0);\r\n            simulation.force(\"r\", force.forceRadial(0, center.x, center.y).strength(0.1));\r\n        }, 3000);\r\n    }\r\n}\r\nbuildSimulation();\r\nvar collisionTimer;\r\nfunction easeCollision() {\r\n    // slowly build collision strength\r\n    var forceCollide = simulation.force(\"collision\");\r\n    if (forceCollide === undefined)\r\n        return;\r\n    var strength = forceCollide.strength();\r\n    var endTime = 2000;\r\n    collisionTimer = d3_1.timer(function (elapsed) {\r\n        var dt = elapsed / endTime;\r\n        // half default, half exp growth\r\n        var newStrength = (0.3 * strength) + (0.7 * Math.pow(dt, (endTime / 1000) * strength));\r\n        forceCollide.strength(newStrength);\r\n        if (dt >= 1.0) {\r\n            collisionTimer.stop();\r\n        }\r\n    });\r\n}\r\neaseCollision();\r\nvar totalChart = d3.select(\"#bubble-summary-chart\");\r\ndata_1.onSelectedCategoryChanged(function () {\r\n    // stop previous simulation\r\n    simulation.stop();\r\n    collisionTimer.stop();\r\n    // rebuild\r\n    buildSimulation();\r\n    easeCollision();\r\n    // re-colorize\r\n    circles\r\n        .attr(\"fill\", function (d) { return getCircleColor(d.categoryIndex); });\r\n    // update chart\r\n    var selectedCategory = data_1.getSelectedCategory();\r\n    if (selectedCategory < 0) {\r\n        var total = sumTotal;\r\n        var count = data.length;\r\n        totalChart.select(\"#bubble-summary-chart-icon\");\r\n        totalChart.select(\"#bubble-summary-chart-topic\")\r\n            .text(\"\");\r\n        totalChart.select(\"#bubble-summary-chart-total\")\r\n            .text(\"$\" + (total / 1000000).toFixed(1) + \"M\");\r\n        totalChart.select(\"#bubble-summary-chart-count\")\r\n            .text(count);\r\n    }\r\n    else {\r\n        var category = categories[selectedCategory];\r\n        var total = data.reduce(function (prev, p) { return p.categoryIndex !== selectedCategory ? prev : prev + p.total; }, 0);\r\n        var count = data.reduce(function (prev, p) { return p.categoryIndex !== selectedCategory ? prev : prev + 1; }, 0);\r\n        totalChart.select(\"#bubble-summary-chart-icon\")\r\n            .attr(\"src\", category.icon || \"\");\r\n        totalChart.select(\"#bubble-summary-chart-topic\")\r\n            .text(category.name);\r\n        totalChart.select(\"#bubble-summary-chart-total\")\r\n            .text(\"$\" + (total / 1000000).toFixed(1) + \"M\");\r\n        totalChart.select(\"#bubble-summary-chart-count\")\r\n            .text(count);\r\n    }\r\n});\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar colorNames = __webpack_require__(9);\nvar swizzle = __webpack_require__(29);\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar isArrayish = __webpack_require__(30);\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar conversions = __webpack_require__(10);\nvar route = __webpack_require__(32);\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar conversions = __webpack_require__(10);\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = __webpack_require__(0);\r\nvar force = __webpack_require__(0);\r\nvar Color = __webpack_require__(8);\r\nvar d3_1 = __webpack_require__(0);\r\nvar common_1 = __webpack_require__(34);\r\nvar data_1 = __webpack_require__(1);\r\n// prepare data\r\nvar sources = data_1.getSourceTotals();\r\nsources = sources.filter(function (s) { return s.total > 0; });\r\nsources.sort(function (a, b) { return b.total - a.total; });\r\nsources = sources.slice(0, 15);\r\nvar sumTotal = sources.reduce(function (prev, d) { return prev + d.total; }, 0);\r\nvar maxTotal = sources.reduce(function (prev, d) { return Math.max(prev, d.total); }, 0);\r\nvar chartSelector = \"#sources\";\r\nvar scale = 80;\r\nvar categories = data_1.getCategories();\r\nfunction getCircleColor(index) {\r\n    var defaultColor = \"#C7C8CC\";\r\n    var selectedCategory = data_1.getSelectedCategory();\r\n    if (selectedCategory < 0) {\r\n        return categories[index].color || defaultColor;\r\n    }\r\n    if (index === selectedCategory) {\r\n        return categories[index].color || defaultColor;\r\n    }\r\n    return defaultColor;\r\n}\r\nfunction getSelectedTotal(source) {\r\n    var selectedCategory = data_1.getSelectedCategory();\r\n    if (selectedCategory < 0) {\r\n        return source.total;\r\n    }\r\n    return source.byCategory[selectedCategory].total;\r\n}\r\nfunction getTotalLabelColor() {\r\n    var selectedCategory = data_1.getSelectedCategory();\r\n    if (selectedCategory < 0) {\r\n        return \"inherit\";\r\n    }\r\n    return Color(categories[selectedCategory].color)\r\n        .darken(0.5)\r\n        .hex();\r\n}\r\nfunction getCircleStroke(index) {\r\n    return Color(categories[index].color)\r\n        .darken(0.5)\r\n        .hex();\r\n}\r\nfunction getCircleRadius(total) {\r\n    return Math.sqrt(total) / scale;\r\n}\r\nvar targetHeights = [100, 150, 200, 300];\r\nfunction getTargetHeight(total) {\r\n    var result = 3.5 * getCircleRadius(total);\r\n    for (var i = 0; i < targetHeights.length; i++) {\r\n        var target = targetHeights[i];\r\n        if (target > result)\r\n            return target;\r\n    }\r\n    return result;\r\n}\r\n// tranform data into datams\r\nvar data = sources.map(function (s, i) {\r\n    return __assign({}, s, { width: Math.max(3 * getCircleRadius(s.total), 75) + 50, height: Math.max(3 * getCircleRadius(s.total), 150) + 40, byCategory: s.byCategory.map(function (c) {\r\n            return __assign({}, c, { categoryIndex: categories.findIndex(function (x) { return x.name === c.name; }) });\r\n        }) });\r\n});\r\n// select target div\r\nvar svg = d3.select(chartSelector);\r\n// build individual charts\r\nvar charts = svg\r\n    .selectAll(\".chart\")\r\n    .data(data)\r\n    .enter()\r\n    .append(\"div\")\r\n    .attr(\"class\", \"chart-container\")\r\n    .attr(\"style\", function (d) { return \"min-height:\" + d.height; })\r\n    .append(\"svg\")\r\n    .attr(\"class\", \"chart\")\r\n    .attr(\"width\", function (d) { return d.width; })\r\n    .attr(\"height\", \"100%\");\r\ncharts.each(function (sourceTotal) {\r\n    var chart = d3.select(this);\r\n    var center = {\r\n        x: (sourceTotal.width / 2),\r\n        y: (sourceTotal.height / 2),\r\n    };\r\n    // setup circles\r\n    var circles = chart\r\n        .selectAll(\".circle\")\r\n        .data(sourceTotal.byCategory)\r\n        .enter()\r\n        .append(\"svg:circle\")\r\n        .attr(\"class\", \"circle\")\r\n        .attr(\"fill\", function (d) { return getCircleColor(d.categoryIndex); })\r\n        .attr(\"stroke\", function (d) { return getCircleStroke(d.categoryIndex); })\r\n        .attr(\"stroke-width\", \"1\")\r\n        .attr(\"r\", function (d) { return getCircleRadius(d.total); })\r\n        .attr(\"cx\", center.x)\r\n        .attr(\"cy\", center.y);\r\n    // add labels\r\n    var label = chart\r\n        .append(\"text\")\r\n        .attr(\"class\", \"chart-label\")\r\n        .attr(\"x\", center.x)\r\n        .attr(\"y\", 10)\r\n        .attr(\"dy\", \"1.1em\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .text(sourceTotal.source.name);\r\n    // word wrap label\r\n    label.call(wrap, sourceTotal.width - 30);\r\n    var totals = label\r\n        .selectAll(\".total-label\")\r\n        .data([sourceTotal])\r\n        .enter()\r\n        .append(\"tspan\")\r\n        .attr(\"class\", \"total-label\")\r\n        .attr(\"x\", center.x)\r\n        .attr(\"y\", 10)\r\n        .attr(\"dy\", function () {\r\n        var count = label.selectAll(\"tspan\").size();\r\n        var dy = parseFloat(label.attr(\"dy\"));\r\n        return count * dy + \"em\";\r\n    })\r\n        .text(function (d) { return \"$\" + (getSelectedTotal(d) / 1000000).toFixed(1) + \"M\"; });\r\n    // mouse over thick border\r\n    circles\r\n        .on(\"mouseover\", function () {\r\n        d3.select(this)\r\n            .transition()\r\n            .duration(100)\r\n            .attr(\"stroke\", \"#1d1d1d\")\r\n            .attr(\"stroke-width\", \"2\");\r\n    })\r\n        .on(\"mouseout\", function () {\r\n        d3.select(this)\r\n            .transition()\r\n            .duration(100)\r\n            .attr(\"stroke\", function (d) { return getCircleStroke(d.categoryIndex); })\r\n            .attr(\"stroke-width\", \"1\");\r\n    });\r\n});\r\nfunction wrap(text, width) {\r\n    var words = text.text().split(/\\s+/).reverse();\r\n    var word;\r\n    var line = [];\r\n    var lineNumber = 0;\r\n    var lineHeight = 1.1; // ems\r\n    var x = text.attr(\"x\");\r\n    var y = text.attr(\"y\");\r\n    var dy = parseFloat(text.attr(\"dy\"));\r\n    var tspan = text\r\n        .text(\"\") // clear existing text\r\n        .append(\"tspan\") // add new tspan items\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", y)\r\n        .attr(\"dy\", dy + \"em\");\r\n    while (word = words.pop() || \"\") {\r\n        line.push(word);\r\n        tspan.text(line.join(\" \"));\r\n        var node = tspan.node();\r\n        if (node !== null && node.getComputedTextLength() > width && line.length > 1) {\r\n            line.pop();\r\n            tspan.text(line.join(\" \"));\r\n            line = [word];\r\n            tspan = text\r\n                .append(\"tspan\")\r\n                .attr(\"x\", x)\r\n                .attr(\"y\", y)\r\n                .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\r\n                .text(word);\r\n        }\r\n    }\r\n}\r\nvar simulations = [];\r\nvar buildSimulation = common_1.debounce(function () {\r\n    // stop and clear simulations\r\n    simulations.forEach(function (s) { return s.stop; });\r\n    simulations = [];\r\n    // iterate over charts\r\n    charts.each(function (source) {\r\n        var element = this;\r\n        if (element === null) {\r\n            return;\r\n        }\r\n        // fetch category so we can \"lift\" active bubbles\r\n        var selectedCategory = data_1.getSelectedCategory();\r\n        // calculate height from container div\r\n        var parent = element.parentElement;\r\n        var height = source.height;\r\n        if (parent !== null) {\r\n            height = parent.clientHeight;\r\n        }\r\n        var center = {\r\n            x: (source.width / 2),\r\n            y: (height / 2),\r\n        };\r\n        // build forces\r\n        var simulation = force\r\n            .forceSimulation(source.byCategory)\r\n            .force(\"collision\", force.forceCollide(function (d) { return getCircleRadius(d.total) * 0.95; }).strength(0.3).iterations(3))\r\n            .force(\"x\", force.forceX(center.x))\r\n            .force(\"y\", force.forceY(function (d) { return d.categoryIndex === selectedCategory ? center.y * 0.5 : center.y; }));\r\n        // listen to ticks\r\n        var chart = d3.select(element);\r\n        var circles = chart.selectAll(\".circle\");\r\n        simulation.on(\"tick\", function () {\r\n            circles\r\n                .attr(\"cx\", function (d) {\r\n                return d.x;\r\n            })\r\n                .attr(\"cy\", function (d) {\r\n                return d.y;\r\n            });\r\n        });\r\n        // ease collision\r\n        var collisionTimer;\r\n        var forceCollide = simulation.force(\"collision\");\r\n        if (forceCollide === undefined)\r\n            return;\r\n        var strength = forceCollide.strength();\r\n        var endTime = 3500;\r\n        collisionTimer = d3_1.timer(function (elapsed) {\r\n            var dt = elapsed / endTime;\r\n            // half default, half exp growth\r\n            var newStrength = (0.1 * strength) + (0.7 * Math.pow(dt, (endTime / 1000) * strength));\r\n            forceCollide.strength(newStrength);\r\n            if (dt >= 1.0) {\r\n                collisionTimer.stop();\r\n            }\r\n        });\r\n        simulations.push(simulation);\r\n    });\r\n}, 500);\r\nd3_1.timeout(buildSimulation, 500);\r\nwindow.addEventListener(\"resize\", buildSimulation);\r\ndata_1.onSelectedCategoryChanged(function () {\r\n    // re-colorize bubbles\r\n    charts\r\n        .selectAll(\".circle\")\r\n        .attr(\"fill\", function (d) { return getCircleColor(d.categoryIndex); });\r\n    // re-colorize labels\r\n    charts\r\n        .selectAll(\".total-label\")\r\n        .attr(\"fill\", getTotalLabelColor)\r\n        .text(function (d) { return \"$\" + (getSelectedTotal(d) / 1000000).toFixed(1) + \"M\"; });\r\n    // move bubbles a bit\r\n    buildSimulation();\r\n});\r\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction debounce(func, wait) {\r\n    if (wait === void 0) { wait = 50; }\r\n    var h;\r\n    return function () {\r\n        clearTimeout(h);\r\n        h = setTimeout(function () { return func(); }, wait);\r\n    };\r\n}\r\nexports.debounce = debounce;\r\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar d3 = __webpack_require__(0);\r\nvar geo = __webpack_require__(0);\r\nvar topojson = __webpack_require__(36);\r\nvar data = __webpack_require__(63);\r\nvar state_data = __webpack_require__(64);\r\nvar counties_data = __webpack_require__(65);\r\nvar selector = \"#map\";\r\nvar width = 500;\r\nvar height = 600;\r\n// create projection translation\r\nvar projection = geo.geoMercator()\r\n    .center([-121, 38])\r\n    .scale(2500)\r\n    .translate([175, 250]);\r\nvar path = geo.geoPath()\r\n    .projection(projection);\r\nvar svg = d3.select(selector)\r\n    .insert(\"svg:svg\", \"h2\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height);\r\nvar states = svg.append(\"svg:g\")\r\n    .attr(\"id\", \"states\")\r\n    .attr(\"fill\", \"#ccc\")\r\n    .attr(\"stroke\", \"#fff\");\r\nvar counties = svg.append(\"svg:g\")\r\n    .attr(\"id\", \"counties\")\r\n    .attr(\"fill\", \"#ccc\")\r\n    .attr(\"stroke\", \"#fff\");\r\nvar circles = svg.append(\"svg:g\")\r\n    .attr(\"id\", \"circles\");\r\nvar tooltip = d3.select(\"body\").append(\"div\")\r\n    .attr(\"class\", \"tooltip\")\r\n    .style(\"opacity\", 0);\r\nstates.selectAll(\"path\")\r\n    .data([state_data])\r\n    .enter().append(\"svg:path\")\r\n    .attr(\"d\", path);\r\ncounties.selectAll(\"path\")\r\n    .data(topojson.feature(counties_data, counties_data.objects.counties).features)\r\n    .enter().append(\"svg:path\")\r\n    .attr(\"d\", path)\r\n    .attr(\"stroke-dasharray\", function () {\r\n    var len = this.getTotalLength();\r\n    return len + \" \" + len;\r\n})\r\n    .attr(\"stroke-dashoffset\", function () {\r\n    return this.getTotalLength();\r\n});\r\n// load in animation\r\ncounties.selectAll(\"path\")\r\n    .transition()\r\n    .duration(3000)\r\n    .attr(\"stroke-dashoffset\", 0);\r\nvar positions = data.features\r\n    .map(function (f) { return projection([f.geometry.coordinates[0], f.geometry.coordinates[1]]) || [0, 0]; });\r\n// initial setup\r\ncircles.selectAll(\"circle\")\r\n    .data(data.features)\r\n    .enter().append(\"svg:circle\")\r\n    .attr(\"fill\", \"#ba0c2f\")\r\n    .attr(\"fill-opacity\", \"0.8\")\r\n    .attr(\"cx\", function (d, i) { return positions[i][0]; })\r\n    .attr(\"cy\", function (d, i) { return positions[i][1]; })\r\n    .attr(\"r\", 0);\r\n// load in animation\r\ncircles.selectAll(\"circle\")\r\n    .transition()\r\n    .duration(3000)\r\n    .delay(function () { return Math.random() * 3000 + 500; })\r\n    .ease(d3.easeElasticInOut)\r\n    .attr(\"r\", function (d) { return d.properties.Name.length; });\r\n// mouse overs\r\ncircles.selectAll(\"circle\")\r\n    .on(\"mouseover\", function (d, i) {\r\n    d3.select(this)\r\n        .transition()\r\n        .duration(200)\r\n        .attr(\"r\", function (d) { return d.properties.Name.length * 1.5; });\r\n    tooltip.transition()\r\n        .duration(200)\r\n        .style(\"opacity\", .9);\r\n    tooltip.html(d.properties.Name)\r\n        .style(\"left\", (d3.event.pageX) + \"px\")\r\n        .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n})\r\n    .on(\"mouseout\", function () {\r\n    d3.select(this)\r\n        .transition()\r\n        .duration(1000)\r\n        .attr(\"r\", function (d) { return d.properties.Name.length; });\r\n    tooltip.transition()\r\n        .duration(500)\r\n        .style(\"opacity\", 0);\r\n});\r\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_topojson_client__ = __webpack_require__(2);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"bbox\", function() { return __WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"feature\", function() { return __WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"mesh\", function() { return __WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"meshArcs\", function() { return __WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"merge\", function() { return __WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"mergeArcs\", function() { return __WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"neighbors\", function() { return __WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"g\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"quantize\", function() { return __WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"h\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"transform\", function() { return __WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"i\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"untransform\", function() { return __WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"j\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_topojson_server__ = __webpack_require__(43);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"topology\", function() { return __WEBPACK_IMPORTED_MODULE_1_topojson_server__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__ = __webpack_require__(54);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"filter\", function() { return __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"filterAttached\", function() { return __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"filterAttachedWeight\", function() { return __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"filterWeight\", function() { return __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"planarRingArea\", function() { return __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"planarTriangleArea\", function() { return __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"presimplify\", function() { return __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__[\"g\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"quantile\", function() { return __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__[\"h\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"simplify\", function() { return __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__[\"i\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"sphericalRingArea\", function() { return __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__[\"j\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"sphericalTriangleArea\", function() { return __WEBPACK_IMPORTED_MODULE_2_topojson_simplify__[\"k\"]; });\n\n\n\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n});\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = meshArcs;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__feature__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stitch__ = __webpack_require__(13);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__feature__[\"b\" /* object */])(topology, meshArcs.apply(this, arguments));\n});\n\nfunction meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: Object(__WEBPACK_IMPORTED_MODULE_1__stitch__[\"a\" /* default */])(topology, arcs)};\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = mergeArcs;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__feature__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stitch__ = __webpack_require__(13);\n\n\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__feature__[\"b\" /* object */])(topology, mergeArcs.apply(this, arguments));\n});\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(Object(__WEBPACK_IMPORTED_MODULE_0__feature__[\"b\" /* object */])(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = Object(__WEBPACK_IMPORTED_MODULE_1__stitch__[\"a\" /* default */])(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bisect__ = __webpack_require__(41);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = Object(__WEBPACK_IMPORTED_MODULE_0__bisect__[\"a\" /* default */])(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = Object(__WEBPACK_IMPORTED_MODULE_0__bisect__[\"a\" /* default */])(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n});\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n});\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bbox__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__untransform__ = __webpack_require__(14);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be ≥2\");\n    box = topology.bbox || Object(__WEBPACK_IMPORTED_MODULE_0__bbox__[\"a\" /* default */])(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = Object(__WEBPACK_IMPORTED_MODULE_1__untransform__[\"a\" /* default */])(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n});\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_topology__ = __webpack_require__(44);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_topology__[\"a\"]; });\n\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bounds__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__cut__ = __webpack_require__(46);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dedup__ = __webpack_require__(49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__delta__ = __webpack_require__(50);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__extract__ = __webpack_require__(51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__geometry__ = __webpack_require__(52);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__hash_hashmap__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__prequantize__ = __webpack_require__(53);\n\n\n\n\n\n\n\n\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(objects, quantization) {\n  var bbox = Object(__WEBPACK_IMPORTED_MODULE_0__bounds__[\"a\" /* default */])(objects = Object(__WEBPACK_IMPORTED_MODULE_5__geometry__[\"a\" /* default */])(objects)),\n      transform = quantization > 0 && bbox && Object(__WEBPACK_IMPORTED_MODULE_7__prequantize__[\"a\" /* default */])(objects, bbox, quantization),\n      topology = Object(__WEBPACK_IMPORTED_MODULE_2__dedup__[\"a\" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_1__cut__[\"a\" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_4__extract__[\"a\" /* default */])(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = Object(__WEBPACK_IMPORTED_MODULE_6__hash_hashmap__[\"a\" /* default */])(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry) {\n    if (geometry && indexGeometryType.hasOwnProperty(geometry.type)) indexGeometryType[geometry.type](geometry);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = Object(__WEBPACK_IMPORTED_MODULE_3__delta__[\"a\" /* default */])(topology.arcs);\n  }\n\n  return topology;\n});\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// Computes the bounding box of the specified hash of GeoJSON objects.\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n    Polygon: function(o) { o.arcs.forEach(boundLine); },\n    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n});\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__join__ = __webpack_require__(47);\n\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology) {\n  var junctions = Object(__WEBPACK_IMPORTED_MODULE_0__join__[\"a\" /* default */])(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i, n;\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n});\n\nfunction rotateArray(array, start, end, offset) {\n  reverse(array, start, end);\n  reverse(array, start, start + offset);\n  reverse(array, start + offset, end);\n}\n\nfunction reverse(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__hash_hashset__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__hash_hashmap__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__hash_point_equal__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__hash_point_hash__ = __webpack_require__(16);\n\n\n\n\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0, // upper bound on number of junctions\n      i, n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = Object(__WEBPACK_IMPORTED_MODULE_1__hash_hashmap__[\"a\" /* default */])(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return Object(__WEBPACK_IMPORTED_MODULE_3__hash_point_hash__[\"a\" /* default */])(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return Object(__WEBPACK_IMPORTED_MODULE_2__hash_point_equal__[\"a\" /* default */])(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = Object(__WEBPACK_IMPORTED_MODULE_0__hash_hashset__[\"a\" /* default */])(junctionCount * 1.4, __WEBPACK_IMPORTED_MODULE_3__hash_point_hash__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_2__hash_point_equal__[\"a\" /* default */]), j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n});\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n});\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__hash_hashmap__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__hash_point_equal__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__hash_point_hash__ = __webpack_require__(16);\n\n\n\n\n// Given a cut topology, combines duplicate arcs.\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines, line,\n      rings = topology.rings, ring,\n      arcCount = lines.length + rings.length,\n      i, n;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = Object(__WEBPACK_IMPORTED_MODULE_0__hash_hashmap__[\"a\" /* default */])(arcCount * 2 * 1.4, __WEBPACK_IMPORTED_MODULE_2__hash_point_hash__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_1__hash_point_equal__[\"a\" /* default */]),\n      arcs = topology.arcs = [];\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs, startArc,\n        endArcs, endArc,\n        i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs,\n        endArc,\n        i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!Object(__WEBPACK_IMPORTED_MODULE_1__hash_point_equal__[\"a\" /* default */])(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!Object(__WEBPACK_IMPORTED_MODULE_1__hash_point_equal__[\"a\" /* default */])(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!Object(__WEBPACK_IMPORTED_MODULE_1__hash_point_equal__[\"a\" /* default */])(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!Object(__WEBPACK_IMPORTED_MODULE_1__hash_point_equal__[\"a\" /* default */])(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n});\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(arcs) {\n  var i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n\n  return arcs;\n});\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n});\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n});\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        pi,\n        px,\n        py,\n        x,\n        y;\n\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n\n  function quantizeGeometry(o) {\n    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n});\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_filter__ = __webpack_require__(55);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_filter__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_filterAttached__ = __webpack_require__(17);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_filterAttached__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_filterAttachedWeight__ = __webpack_require__(57);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_filterAttachedWeight__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_filterWeight__ = __webpack_require__(18);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_filterWeight__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_planar__ = __webpack_require__(6);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_4__src_planar__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_4__src_planar__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__src_presimplify__ = __webpack_require__(58);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_5__src_presimplify__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__src_quantile__ = __webpack_require__(60);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_6__src_quantile__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__src_simplify__ = __webpack_require__(61);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_7__src_simplify__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__src_spherical__ = __webpack_require__(62);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_8__src_spherical__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_8__src_spherical__[\"b\"]; });\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__prune__ = __webpack_require__(56);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology, filter) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      key;\n\n  if (filter == null) filter = filterTrue;\n\n  function filterGeometry(input) {\n    var output, arcs;\n    switch (input.type) {\n      case \"Polygon\": {\n        arcs = filterRings(input.arcs);\n        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"MultiPolygon\": {\n        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"GeometryCollection\": {\n        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n        break;\n      }\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function filterRings(arcs) {\n    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n        : null;\n  }\n\n  function filterExteriorRing(ring) {\n    return filter(ring, false);\n  }\n\n  function filterInteriorRing(ring) {\n    return filter(ring, true);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = filterGeometry(oldObjects[key]);\n  }\n\n  return Object(__WEBPACK_IMPORTED_MODULE_0__prune__[\"a\" /* default */])({\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: topology.arcs\n  });\n});\n\nfunction filterTrue() {\n  return true;\n}\n\nfunction filterIdentity(x) {\n  return x;\n}\n\nfunction filterNotNull(geometry) {\n  return geometry.type != null;\n}\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      oldArcs = topology.arcs,\n      oldArcsLength = oldArcs.length,\n      oldIndex = -1,\n      newIndexByOldIndex = new Array(oldArcsLength),\n      newArcsLength = 0,\n      newArcs,\n      newIndex = -1,\n      key;\n\n  function scanGeometry(input) {\n    switch (input.type) {\n      case \"GeometryCollection\": input.geometries.forEach(scanGeometry); break;\n      case \"LineString\": scanArcs(input.arcs); break;\n      case \"MultiLineString\": input.arcs.forEach(scanArcs); break;\n      case \"Polygon\": input.arcs.forEach(scanArcs); break;\n      case \"MultiPolygon\": input.arcs.forEach(scanMultiArcs); break;\n    }\n  }\n\n  function scanArc(index) {\n    if (index < 0) index = ~index;\n    if (!newIndexByOldIndex[index]) newIndexByOldIndex[index] = 1, ++newArcsLength;\n  }\n\n  function scanArcs(arcs) {\n    arcs.forEach(scanArc);\n  }\n\n  function scanMultiArcs(arcs) {\n    arcs.forEach(scanArcs);\n  }\n\n  function reindexGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(reindexGeometry)}; break;\n      case \"LineString\": output = {type: \"LineString\", arcs: reindexArcs(input.arcs)}; break;\n      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(reindexMultiArcs)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function reindexArc(oldIndex) {\n    return oldIndex < 0 ? ~newIndexByOldIndex[~oldIndex] : newIndexByOldIndex[oldIndex];\n  }\n\n  function reindexArcs(arcs) {\n    return arcs.map(reindexArc);\n  }\n\n  function reindexMultiArcs(arcs) {\n    return arcs.map(reindexArcs);\n  }\n\n  for (key in oldObjects) {\n    scanGeometry(oldObjects[key]);\n  }\n\n  newArcs = new Array(newArcsLength);\n\n  while (++oldIndex < oldArcsLength) {\n    if (newIndexByOldIndex[oldIndex]) {\n      newIndexByOldIndex[oldIndex] = ++newIndex;\n      newArcs[newIndex] = oldArcs[oldIndex];\n    }\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = reindexGeometry(oldObjects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: newArcs\n  };\n});\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__filterAttached__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__filterWeight__ = __webpack_require__(18);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology, minWeight, weight) {\n  var a = Object(__WEBPACK_IMPORTED_MODULE_0__filterAttached__[\"a\" /* default */])(topology),\n      w = Object(__WEBPACK_IMPORTED_MODULE_1__filterWeight__[\"a\" /* default */])(topology, minWeight, weight);\n  return function(ring, interior) {\n    return a(ring, interior) || w(ring, interior);\n  };\n});\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_topojson_client__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__heap__ = __webpack_require__(59);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__planar__ = __webpack_require__(6);\n\n\n\n\nfunction copy(point) {\n  return [point[0], point[1], 0];\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology, weight) {\n  var point = topology.transform ? Object(__WEBPACK_IMPORTED_MODULE_0_topojson_client__[\"i\" /* transform */])(topology.transform) : copy,\n      heap = Object(__WEBPACK_IMPORTED_MODULE_1__heap__[\"a\" /* default */])();\n\n  if (weight == null) weight = __WEBPACK_IMPORTED_MODULE_2__planar__[\"b\" /* planarTriangleArea */];\n\n  var arcs = topology.arcs.map(function(arc) {\n    var triangles = [],\n        maxWeight = 0,\n        triangle,\n        i,\n        n;\n\n    arc = arc.map(point);\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n      triangle[1][2] = weight(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    // Always keep the arc endpoints!\n    arc[0][2] = arc[n][2] = Infinity;\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the weight of the current point is less than that of the previous\n      // point to be eliminated, use the latter’s weight instead. This ensures\n      // that the current point cannot be eliminated without eliminating\n      // previously- eliminated points.\n      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n      else maxWeight = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    return arc;\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = weight(triangle);\n    heap.push(triangle);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n});\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction compare(a, b) {\n  return a[1][2] - b[1][2];\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compare(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n});\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology, p) {\n  var array = [];\n\n  topology.arcs.forEach(function(arc) {\n    arc.forEach(function(point) {\n      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n        array.push(point[2]);\n      }\n    });\n  });\n\n  return array.length && quantile(array.sort(descending), p);\n});\n\nfunction quantile(array, p) {\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return array[0];\n  if (p >= 1) return array[n - 1];\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = array[i],\n      b = array[i + 1];\n  return a + (b - a) * (h - i);\n}\n\nfunction descending(a, b) {\n  return b - a;\n}\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(topology, minWeight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  // Remove points whose weight is less than the minimum weight.\n  var arcs = topology.arcs.map(function(input) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        point;\n\n    while (++i < n) {\n      if ((point = input[i])[2] >= minWeight) {\n        output[j++] = [point[0], point[1]];\n      }\n    }\n\n    output.length = j;\n    return output;\n  });\n\n  return {\n    type: \"Topology\",\n    transform: topology.transform,\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n});\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = sphericalRingArea;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = sphericalTriangleArea;\nvar pi = Math.PI,\n    tau = 2 * pi,\n    quarterPi = pi / 4,\n    radians = pi / 180,\n    abs = Math.abs,\n    atan2 = Math.atan2,\n    cos = Math.cos,\n    sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0, lambda1 = point[0] * radians,\n      phi1 = (point[1] * radians) / 2 + quarterPi,\n      cosPhi0, cosPhi1 = cos(phi1),\n      sinPhi0, sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = (point[1] * radians) / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nfunction sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nfunction sphericalTriangleArea(t) {\n  return abs(halfArea(t, false)) * 2;\n}\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"type\":\"FeatureCollection\",\"crs\":{\"type\":\"name\",\"properties\":{\"name\":\"urn:ogc:def:crs:OGC:1.3:CRS84\"}},\"features\":[{\"type\":\"Feature\",\"properties\":{\"Name\":\"Tulelake\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.4774916,41.9559884,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"El Centro\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-115.5630514,32.792,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Solano County\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.9017954,38.3104969,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Arcade Creek\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.354107,38.6549656,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Sacramento\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.4943996,38.5815719,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"San Joaquin Valley\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.8677352,37.9832553,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Tulare\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-119.3473379,36.2077288,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Grizzly Island Wildlife Area\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.975662,38.1551766,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Woodland\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.7732971,38.6785157,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Lake Tahoe Basin Management Unit\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-119.9732314,38.9325805,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Big Sur\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.856261,36.3614749,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Point Reyes\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-122.9912711,38.017769,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Muir Woods National Monument\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-122.5811177,37.8970199,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Redwood National and State Parks\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-124.0046275,41.2131788,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Arbuckle\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-122.0577477,39.0173963,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Hopland\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-123.1163918,38.9729541,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"McLaughlin Natural Reserve\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-122.421662,38.8739434,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Davis\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.7405167,38.5449065,0]}}]}\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"type\":\"Feature\",\"id\":\"06\",\"properties\":{\"name\":\"California\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-123.233256,42.006186],[-122.378853,42.011663],[-121.037003,41.995232],[-120.001861,41.995232],[-119.996384,40.264519],[-120.001861,38.999346],[-118.71478,38.101128],[-117.498899,37.21934],[-116.540435,36.501861],[-115.85034,35.970598],[-114.634459,35.00118],[-114.634459,34.87521],[-114.470151,34.710902],[-114.333228,34.448009],[-114.136058,34.305608],[-114.256551,34.174162],[-114.415382,34.108438],[-114.535874,33.933176],[-114.497536,33.697668],[-114.524921,33.54979],[-114.727567,33.40739],[-114.661844,33.034958],[-114.524921,33.029481],[-114.470151,32.843265],[-114.524921,32.755634],[-114.72209,32.717295],[-116.04751,32.624187],[-117.126467,32.536556],[-117.24696,32.668003],[-117.252437,32.876127],[-117.329114,33.122589],[-117.471515,33.297851],[-117.7837,33.538836],[-118.183517,33.763391],[-118.260194,33.703145],[-118.413548,33.741483],[-118.391641,33.840068],[-118.566903,34.042715],[-118.802411,33.998899],[-119.218659,34.146777],[-119.278905,34.26727],[-119.558229,34.415147],[-119.875891,34.40967],[-120.138784,34.475393],[-120.472878,34.448009],[-120.64814,34.579455],[-120.609801,34.858779],[-120.670048,34.902595],[-120.631709,35.099764],[-120.894602,35.247642],[-120.905556,35.450289],[-121.004141,35.461243],[-121.168449,35.636505],[-121.283465,35.674843],[-121.332757,35.784382],[-121.716143,36.195153],[-121.896882,36.315645],[-121.935221,36.638785],[-121.858544,36.6114],[-121.787344,36.803093],[-121.929744,36.978355],[-122.105006,36.956447],[-122.335038,37.115279],[-122.417192,37.241248],[-122.400761,37.361741],[-122.515777,37.520572],[-122.515777,37.783465],[-122.329561,37.783465],[-122.406238,38.15042],[-122.488392,38.112082],[-122.504823,37.931343],[-122.701993,37.893004],[-122.937501,38.029928],[-122.97584,38.265436],[-123.129194,38.451652],[-123.331841,38.566668],[-123.44138,38.698114],[-123.737134,38.95553],[-123.687842,39.032208],[-123.824765,39.366301],[-123.764519,39.552517],[-123.85215,39.831841],[-124.109566,40.105688],[-124.361506,40.259042],[-124.410798,40.439781],[-124.158859,40.877937],[-124.109566,41.025814],[-124.158859,41.14083],[-124.065751,41.442061],[-124.147905,41.715908],[-124.257444,41.781632],[-124.213628,42.000709],[-123.233256,42.006186]]]}}\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"type\":\"Topology\",\"bbox\":[-124.409591,32.534156,-114.134427,42.009518],\"objects\":{\"counties\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"GEO_ID\":\"0500000US06035\",\"STATE\":\"06\",\"COUNTY\":\"035\",\"NAME\":\"Lassen\",\"LSAD\":\"County\",\"CENSUSAREA\":4541.184}},{\"type\":\"Polygon\",\"arcs\":[[-4,5,6,7]],\"properties\":{\"GEO_ID\":\"0500000US06049\",\"STATE\":\"06\",\"COUNTY\":\"049\",\"NAME\":\"Modoc\",\"LSAD\":\"County\",\"CENSUSAREA\":3917.77}},{\"type\":\"MultiPolygon\",\"arcs\":[[[8]],[[9,10]],[[11,12]],[[13,14]],[[15]],[[16,17]]],\"properties\":{\"GEO_ID\":\"0500000US06075\",\"STATE\":\"06\",\"COUNTY\":\"075\",\"NAME\":\"San Francisco\",\"LSAD\":\"County\",\"CENSUSAREA\":46.873}},{\"type\":\"MultiPolygon\",\"arcs\":[[[18]],[[19]],[[20]],[[21]],[[22,23,24,25]]],\"properties\":{\"GEO_ID\":\"0500000US06083\",\"STATE\":\"06\",\"COUNTY\":\"083\",\"NAME\":\"Santa Barbara\",\"LSAD\":\"County\",\"CENSUSAREA\":2735.085}},{\"type\":\"Polygon\",\"arcs\":[[26,27,28,-1,29]],\"properties\":{\"GEO_ID\":\"0500000US06091\",\"STATE\":\"06\",\"COUNTY\":\"091\",\"NAME\":\"Sierra\",\"LSAD\":\"County\",\"CENSUSAREA\":953.214}},{\"type\":\"Polygon\",\"arcs\":[[30,31,32,33,34,35]],\"properties\":{\"GEO_ID\":\"0500000US06095\",\"STATE\":\"06\",\"COUNTY\":\"095\",\"NAME\":\"Solano\",\"LSAD\":\"County\",\"CENSUSAREA\":821.765}},{\"type\":\"Polygon\",\"arcs\":[[36,37,38,39,40,41]],\"properties\":{\"GEO_ID\":\"0500000US06101\",\"STATE\":\"06\",\"COUNTY\":\"101\",\"NAME\":\"Sutter\",\"LSAD\":\"County\",\"CENSUSAREA\":602.41}},{\"type\":\"Polygon\",\"arcs\":[[42,43,44,45,46]],\"properties\":{\"GEO_ID\":\"0500000US06105\",\"STATE\":\"06\",\"COUNTY\":\"105\",\"NAME\":\"Trinity\",\"LSAD\":\"County\",\"CENSUSAREA\":3179.254}},{\"type\":\"MultiPolygon\",\"arcs\":[[[47]],[[48]],[[-26,49,50,51]]],\"properties\":{\"GEO_ID\":\"0500000US06111\",\"STATE\":\"06\",\"COUNTY\":\"111\",\"NAME\":\"Ventura\",\"LSAD\":\"County\",\"CENSUSAREA\":1843.133}},{\"type\":\"Polygon\",\"arcs\":[[-41,52,53,-28,54,55]],\"properties\":{\"GEO_ID\":\"0500000US06115\",\"STATE\":\"06\",\"COUNTY\":\"115\",\"NAME\":\"Yuba\",\"LSAD\":\"County\",\"CENSUSAREA\":631.839}},{\"type\":\"Polygon\",\"arcs\":[[56,57,58,59,60,61]],\"properties\":{\"GEO_ID\":\"0500000US06033\",\"STATE\":\"06\",\"COUNTY\":\"033\",\"NAME\":\"Lake\",\"LSAD\":\"County\",\"CENSUSAREA\":1256.464}},{\"type\":\"Polygon\",\"arcs\":[[62,63,64,65,66,67]],\"properties\":{\"GEO_ID\":\"0500000US06071\",\"STATE\":\"06\",\"COUNTY\":\"071\",\"NAME\":\"San Bernardino\",\"LSAD\":\"County\",\"CENSUSAREA\":20056.938}},{\"type\":\"Polygon\",\"arcs\":[[68,69,70,71,72]],\"properties\":{\"GEO_ID\":\"0500000US06087\",\"STATE\":\"06\",\"COUNTY\":\"087\",\"NAME\":\"Santa Cruz\",\"LSAD\":\"County\",\"CENSUSAREA\":445.17}},{\"type\":\"Polygon\",\"arcs\":[[73,74,75,76,77,78]],\"properties\":{\"GEO_ID\":\"0500000US06001\",\"STATE\":\"06\",\"COUNTY\":\"001\",\"NAME\":\"Alameda\",\"LSAD\":\"County\",\"CENSUSAREA\":739.017}},{\"type\":\"Polygon\",\"arcs\":[[79,80,81,82,83,84]],\"properties\":{\"GEO_ID\":\"0500000US06003\",\"STATE\":\"06\",\"COUNTY\":\"003\",\"NAME\":\"Alpine\",\"LSAD\":\"County\",\"CENSUSAREA\":738.332}},{\"type\":\"Polygon\",\"arcs\":[[85,86,87,-83,88]],\"properties\":{\"GEO_ID\":\"0500000US06005\",\"STATE\":\"06\",\"COUNTY\":\"005\",\"NAME\":\"Amador\",\"LSAD\":\"County\",\"CENSUSAREA\":594.583}},{\"type\":\"Polygon\",\"arcs\":[[89,-53,-40,90,91,92]],\"properties\":{\"GEO_ID\":\"0500000US06007\",\"STATE\":\"06\",\"COUNTY\":\"007\",\"NAME\":\"Butte\",\"LSAD\":\"County\",\"CENSUSAREA\":1636.464}},{\"type\":\"Polygon\",\"arcs\":[[-82,93,94,95,-89]],\"properties\":{\"GEO_ID\":\"0500000US06009\",\"STATE\":\"06\",\"COUNTY\":\"009\",\"NAME\":\"Calaveras\",\"LSAD\":\"County\",\"CENSUSAREA\":1020.012}},{\"type\":\"Polygon\",\"arcs\":[[-91,-39,96,-60,97]],\"properties\":{\"GEO_ID\":\"0500000US06011\",\"STATE\":\"06\",\"COUNTY\":\"011\",\"NAME\":\"Colusa\",\"LSAD\":\"County\",\"CENSUSAREA\":1150.731}},{\"type\":\"Polygon\",\"arcs\":[[-36,98,99,-74,100]],\"properties\":{\"GEO_ID\":\"0500000US06013\",\"STATE\":\"06\",\"COUNTY\":\"013\",\"NAME\":\"Contra Costa\",\"LSAD\":\"County\",\"CENSUSAREA\":715.937}},{\"type\":\"Polygon\",\"arcs\":[[101,102,103]],\"properties\":{\"GEO_ID\":\"0500000US06015\",\"STATE\":\"06\",\"COUNTY\":\"015\",\"NAME\":\"Del Norte\",\"LSAD\":\"County\",\"CENSUSAREA\":1006.373}},{\"type\":\"Polygon\",\"arcs\":[[-84,-88,104,105,106]],\"properties\":{\"GEO_ID\":\"0500000US06017\",\"STATE\":\"06\",\"COUNTY\":\"017\",\"NAME\":\"El Dorado\",\"LSAD\":\"County\",\"CENSUSAREA\":1707.883}},{\"type\":\"Polygon\",\"arcs\":[[107,108,109,110,111,112,113,114]],\"properties\":{\"GEO_ID\":\"0500000US06019\",\"STATE\":\"06\",\"COUNTY\":\"019\",\"NAME\":\"Fresno\",\"LSAD\":\"County\",\"CENSUSAREA\":5957.991}},{\"type\":\"Polygon\",\"arcs\":[[-98,-59,115,116,-92]],\"properties\":{\"GEO_ID\":\"0500000US06021\",\"STATE\":\"06\",\"COUNTY\":\"021\",\"NAME\":\"Glenn\",\"LSAD\":\"County\",\"CENSUSAREA\":1313.947}},{\"type\":\"Polygon\",\"arcs\":[[-103,117,-43,118,119]],\"properties\":{\"GEO_ID\":\"0500000US06023\",\"STATE\":\"06\",\"COUNTY\":\"023\",\"NAME\":\"Humboldt\",\"LSAD\":\"County\",\"CENSUSAREA\":3567.987}},{\"type\":\"Polygon\",\"arcs\":[[120,121,122]],\"properties\":{\"GEO_ID\":\"0500000US06025\",\"STATE\":\"06\",\"COUNTY\":\"025\",\"NAME\":\"Imperial\",\"LSAD\":\"County\",\"CENSUSAREA\":4176.603}},{\"type\":\"Polygon\",\"arcs\":[[-67,123,124,-114,125,126]],\"properties\":{\"GEO_ID\":\"0500000US06027\",\"STATE\":\"06\",\"COUNTY\":\"027\",\"NAME\":\"Inyo\",\"LSAD\":\"County\",\"CENSUSAREA\":10180.879}},{\"type\":\"Polygon\",\"arcs\":[[-124,-66,127,-50,-25,128,129,130]],\"properties\":{\"GEO_ID\":\"0500000US06029\",\"STATE\":\"06\",\"COUNTY\":\"029\",\"NAME\":\"Kern\",\"LSAD\":\"County\",\"CENSUSAREA\":8131.916}},{\"type\":\"Polygon\",\"arcs\":[[131,132,-108,133,-130]],\"properties\":{\"GEO_ID\":\"0500000US06031\",\"STATE\":\"06\",\"COUNTY\":\"031\",\"NAME\":\"Kings\",\"LSAD\":\"County\",\"CENSUSAREA\":1389.42}},{\"type\":\"MultiPolygon\",\"arcs\":[[[134]],[[135]],[[-51,-128,-65,136,137]]],\"properties\":{\"GEO_ID\":\"0500000US06037\",\"STATE\":\"06\",\"COUNTY\":\"037\",\"NAME\":\"Los Angeles\",\"LSAD\":\"County\",\"CENSUSAREA\":4057.884}},{\"type\":\"Polygon\",\"arcs\":[[138,139,140,141,-112]],\"properties\":{\"GEO_ID\":\"0500000US06039\",\"STATE\":\"06\",\"COUNTY\":\"039\",\"NAME\":\"Madera\",\"LSAD\":\"County\",\"CENSUSAREA\":2137.069}},{\"type\":\"MultiPolygon\",\"arcs\":[[[142,-10]],[[-12,143,-14,144,145,146]]],\"properties\":{\"GEO_ID\":\"0500000US06041\",\"STATE\":\"06\",\"COUNTY\":\"041\",\"NAME\":\"Marin\",\"LSAD\":\"County\",\"CENSUSAREA\":520.306}},{\"type\":\"Polygon\",\"arcs\":[[147,148,149,-140]],\"properties\":{\"GEO_ID\":\"0500000US06043\",\"STATE\":\"06\",\"COUNTY\":\"043\",\"NAME\":\"Mariposa\",\"LSAD\":\"County\",\"CENSUSAREA\":1448.816}},{\"type\":\"Polygon\",\"arcs\":[[-119,-47,150,-116,-58,151,152]],\"properties\":{\"GEO_ID\":\"0500000US06045\",\"STATE\":\"06\",\"COUNTY\":\"045\",\"NAME\":\"Mendocino\",\"LSAD\":\"County\",\"CENSUSAREA\":3506.343}},{\"type\":\"Polygon\",\"arcs\":[[-111,153,154,155,-148,-139]],\"properties\":{\"GEO_ID\":\"0500000US06047\",\"STATE\":\"06\",\"COUNTY\":\"047\",\"NAME\":\"Merced\",\"LSAD\":\"County\",\"CENSUSAREA\":1934.972}},{\"type\":\"Polygon\",\"arcs\":[[-126,-113,-142,156,-80,157]],\"properties\":{\"GEO_ID\":\"0500000US06051\",\"STATE\":\"06\",\"COUNTY\":\"051\",\"NAME\":\"Mono\",\"LSAD\":\"County\",\"CENSUSAREA\":3048.982}},{\"type\":\"Polygon\",\"arcs\":[[-72,158,-109,-133,159,160]],\"properties\":{\"GEO_ID\":\"0500000US06053\",\"STATE\":\"06\",\"COUNTY\":\"053\",\"NAME\":\"Monterey\",\"LSAD\":\"County\",\"CENSUSAREA\":3280.595}},{\"type\":\"Polygon\",\"arcs\":[[-62,161,-33,162]],\"properties\":{\"GEO_ID\":\"0500000US06055\",\"STATE\":\"06\",\"COUNTY\":\"055\",\"NAME\":\"Napa\",\"LSAD\":\"County\",\"CENSUSAREA\":748.362}},{\"type\":\"Polygon\",\"arcs\":[[163,-55,-27,164]],\"properties\":{\"GEO_ID\":\"0500000US06057\",\"STATE\":\"06\",\"COUNTY\":\"057\",\"NAME\":\"Nevada\",\"LSAD\":\"County\",\"CENSUSAREA\":957.772}},{\"type\":\"Polygon\",\"arcs\":[[-137,-64,165,166,167]],\"properties\":{\"GEO_ID\":\"0500000US06059\",\"STATE\":\"06\",\"COUNTY\":\"059\",\"NAME\":\"Orange\",\"LSAD\":\"County\",\"CENSUSAREA\":790.568}},{\"type\":\"Polygon\",\"arcs\":[[168,-106,169,-42,-56,-164]],\"properties\":{\"GEO_ID\":\"0500000US06061\",\"STATE\":\"06\",\"COUNTY\":\"061\",\"NAME\":\"Placer\",\"LSAD\":\"County\",\"CENSUSAREA\":1407.009}},{\"type\":\"Polygon\",\"arcs\":[[-29,-54,-90,170,171,-2]],\"properties\":{\"GEO_ID\":\"0500000US06063\",\"STATE\":\"06\",\"COUNTY\":\"063\",\"NAME\":\"Plumas\",\"LSAD\":\"County\",\"CENSUSAREA\":2553.043}},{\"type\":\"Polygon\",\"arcs\":[[-122,172,-166,-63,173]],\"properties\":{\"GEO_ID\":\"0500000US06065\",\"STATE\":\"06\",\"COUNTY\":\"065\",\"NAME\":\"Riverside\",\"LSAD\":\"County\",\"CENSUSAREA\":7206.48}},{\"type\":\"Polygon\",\"arcs\":[[-105,-87,174,-99,-35,175,-37,-170]],\"properties\":{\"GEO_ID\":\"0500000US06067\",\"STATE\":\"06\",\"COUNTY\":\"067\",\"NAME\":\"Sacramento\",\"LSAD\":\"County\",\"CENSUSAREA\":964.644}},{\"type\":\"Polygon\",\"arcs\":[[-159,-71,176,-154,-110]],\"properties\":{\"GEO_ID\":\"0500000US06069\",\"STATE\":\"06\",\"COUNTY\":\"069\",\"NAME\":\"San Benito\",\"LSAD\":\"County\",\"CENSUSAREA\":1388.71}},{\"type\":\"Polygon\",\"arcs\":[[-167,-173,-121,177]],\"properties\":{\"GEO_ID\":\"0500000US06073\",\"STATE\":\"06\",\"COUNTY\":\"073\",\"NAME\":\"San Diego\",\"LSAD\":\"County\",\"CENSUSAREA\":4206.63}},{\"type\":\"Polygon\",\"arcs\":[[-175,-86,-96,178,-75,-100]],\"properties\":{\"GEO_ID\":\"0500000US06077\",\"STATE\":\"06\",\"COUNTY\":\"077\",\"NAME\":\"San Joaquin\",\"LSAD\":\"County\",\"CENSUSAREA\":1391.322}},{\"type\":\"Polygon\",\"arcs\":[[-160,-132,-129,-24,179]],\"properties\":{\"GEO_ID\":\"0500000US06079\",\"STATE\":\"06\",\"COUNTY\":\"079\",\"NAME\":\"San Luis Obispo\",\"LSAD\":\"County\",\"CENSUSAREA\":3298.567}},{\"type\":\"Polygon\",\"arcs\":[[-78,180,-69,181,-17,182]],\"properties\":{\"GEO_ID\":\"0500000US06081\",\"STATE\":\"06\",\"COUNTY\":\"081\",\"NAME\":\"San Mateo\",\"LSAD\":\"County\",\"CENSUSAREA\":448.408}},{\"type\":\"Polygon\",\"arcs\":[[-181,-77,183,-155,-177,-70]],\"properties\":{\"GEO_ID\":\"0500000US06085\",\"STATE\":\"06\",\"COUNTY\":\"085\",\"NAME\":\"Santa Clara\",\"LSAD\":\"County\",\"CENSUSAREA\":1290.1}},{\"type\":\"Polygon\",\"arcs\":[[-45,184,-6,-3,-172,185]],\"properties\":{\"GEO_ID\":\"0500000US06089\",\"STATE\":\"06\",\"COUNTY\":\"089\",\"NAME\":\"Shasta\",\"LSAD\":\"County\",\"CENSUSAREA\":3775.402}},{\"type\":\"Polygon\",\"arcs\":[[-7,-185,-44,-118,-102,186]],\"properties\":{\"GEO_ID\":\"0500000US06093\",\"STATE\":\"06\",\"COUNTY\":\"093\",\"NAME\":\"Siskiyou\",\"LSAD\":\"County\",\"CENSUSAREA\":6277.887}},{\"type\":\"Polygon\",\"arcs\":[[-152,-57,-163,-32,187,-146,188]],\"properties\":{\"GEO_ID\":\"0500000US06097\",\"STATE\":\"06\",\"COUNTY\":\"097\",\"NAME\":\"Sonoma\",\"LSAD\":\"County\",\"CENSUSAREA\":1575.849}},{\"type\":\"Polygon\",\"arcs\":[[-76,-179,-95,189,-149,-156,-184]],\"properties\":{\"GEO_ID\":\"0500000US06099\",\"STATE\":\"06\",\"COUNTY\":\"099\",\"NAME\":\"Stanislaus\",\"LSAD\":\"County\",\"CENSUSAREA\":1494.827}},{\"type\":\"Polygon\",\"arcs\":[[-171,-93,-117,-151,-46,-186]],\"properties\":{\"GEO_ID\":\"0500000US06103\",\"STATE\":\"06\",\"COUNTY\":\"103\",\"NAME\":\"Tehama\",\"LSAD\":\"County\",\"CENSUSAREA\":2949.709}},{\"type\":\"Polygon\",\"arcs\":[[-134,-115,-125,-131]],\"properties\":{\"GEO_ID\":\"0500000US06107\",\"STATE\":\"06\",\"COUNTY\":\"107\",\"NAME\":\"Tulare\",\"LSAD\":\"County\",\"CENSUSAREA\":4824.215}},{\"type\":\"Polygon\",\"arcs\":[[-141,-150,-190,-94,-81,-157]],\"properties\":{\"GEO_ID\":\"0500000US06109\",\"STATE\":\"06\",\"COUNTY\":\"109\",\"NAME\":\"Tuolumne\",\"LSAD\":\"County\",\"CENSUSAREA\":2220.884}},{\"type\":\"Polygon\",\"arcs\":[[-162,-61,-97,-38,-176,-34]],\"properties\":{\"GEO_ID\":\"0500000US06113\",\"STATE\":\"06\",\"COUNTY\":\"113\",\"NAME\":\"Yolo\",\"LSAD\":\"County\",\"CENSUSAREA\":1014.689}}]}},\"arcs\":[[[-120.001319,39.722416],[-120.015804,39.722359],[-120.015734,39.708721],[-120.126036,39.708888],[-120.147149,39.707658]],[[-120.147149,39.707658],[-120.14658,39.736406],[-120.127763,39.736159],[-120.127635,39.750954],[-120.11911,39.751087],[-120.119584,39.765627],[-120.110627,39.765779],[-120.111068,39.780817],[-120.10781,39.794214],[-120.108321,39.828391],[-120.108099,39.881266],[-120.099339,39.881219],[-120.099556,39.910339],[-120.108883,39.910374],[-120.108761,39.93951],[-120.126574,39.939551],[-120.126711,39.947749],[-120.135768,39.947757],[-120.135735,39.95504],[-120.144991,39.955067],[-120.145015,39.962292],[-120.154379,39.962351],[-120.15433,39.968534],[-120.163654,39.968659],[-120.163406,39.98378],[-120.173274,39.983889],[-120.173003,39.998325],[-120.182454,39.998521],[-120.182484,40.01335],[-120.201264,40.013474],[-120.201383,40.042737],[-120.21089,40.042757],[-120.211333,40.056328],[-120.209315,40.056287],[-120.209641,40.086008],[-120.228663,40.085413],[-120.24689,40.085805],[-120.246788,40.107885],[-120.265633,40.107748],[-120.266561,40.115869],[-120.275153,40.114809],[-120.341385,40.115243],[-120.341463,40.122556],[-120.360611,40.122514],[-120.360401,40.129532],[-120.379399,40.12951],[-120.379117,40.140556],[-120.398307,40.14064],[-120.398256,40.147365],[-120.407954,40.147354],[-120.407609,40.162164],[-120.417254,40.162076],[-120.416918,40.169441],[-120.436371,40.169563],[-120.436468,40.176646],[-120.445892,40.176854],[-120.445285,40.191357],[-120.454152,40.191355],[-120.454331,40.205751],[-120.482848,40.205798],[-120.48246,40.220184],[-120.492062,40.220292],[-120.49172,40.234791],[-120.510665,40.234698],[-120.510817,40.248945],[-120.529734,40.249197],[-120.529699,40.256203],[-120.548663,40.256275],[-120.548724,40.263596],[-120.576729,40.263796],[-120.576825,40.28543],[-120.622796,40.28571],[-120.622661,40.293014],[-120.642505,40.293184],[-120.642331,40.300393],[-120.651651,40.300451],[-120.652158,40.307656],[-120.679262,40.30853],[-120.726417,40.308433],[-120.726496,40.315756],[-120.764403,40.31601],[-120.764346,40.308718],[-120.773728,40.308678],[-120.773805,40.301434],[-120.796421,40.301281],[-120.796,40.277726],[-120.81465,40.27783],[-120.815013,40.270726],[-120.83382,40.270728],[-120.834058,40.256161],[-120.843504,40.256019],[-120.843599,40.248892],[-120.853197,40.248855],[-120.853118,40.241803],[-120.871782,40.24164],[-120.871757,40.199438],[-120.890676,40.19941],[-120.890646,40.192116],[-120.928582,40.191931],[-120.928066,40.206451],[-120.947152,40.206499],[-120.946188,40.220808],[-121.003732,40.220975],[-121.003918,40.234941],[-121.041521,40.234795],[-121.041517,40.256474],[-121.061493,40.256417],[-121.06094,40.314699],[-121.061417,40.446536],[-121.19896,40.44645],[-121.327826,40.445367]],[[-121.327826,40.445367],[-121.32668,40.497574],[-121.32298,40.497589],[-121.32288,40.584916],[-121.32191,40.654957],[-121.321074,40.758516],[-121.321191,40.859922],[-121.320808,40.894418],[-121.319972,40.905886],[-121.332338,40.905394],[-121.331214,40.920689],[-121.33114,41.045499],[-121.331794,41.107882],[-121.331786,41.183886]],[[-121.331786,41.183886],[-121.210332,41.184418],[-120.971409,41.184257],[-120.882641,41.18401],[-120.78238,41.184031],[-120.666668,41.183843],[-120.626076,41.184039],[-120.620688,41.184469],[-120.309952,41.184115],[-120.133234,41.184139],[-119.999866,41.183974]],[[-119.999866,41.183974],[-119.999358,40.873101],[-119.998479,40.749899],[-119.997533,40.720992],[-119.995926,40.499901],[-119.996183,40.262461],[-119.997124,40.126363],[-119.997634,39.956505],[-119.999733,39.851406],[-120.001319,39.722416]],[[-121.331786,41.183886],[-121.446495,41.183484]],[[-121.446495,41.183484],[-121.446406,41.292232],[-121.446599,41.428983],[-121.448699,41.429383],[-121.448828,41.516718],[-121.449191,41.621435],[-121.449723,41.624877],[-121.448564,41.656889],[-121.448981,41.776392],[-121.456922,41.776302],[-121.457213,41.949945],[-121.447647,41.950317],[-121.44754,41.997169]],[[-121.44754,41.997169],[-121.376101,41.997026],[-121.340517,41.99622],[-121.309981,41.997612],[-121.251099,41.99757],[-121.247616,41.997054],[-121.126093,41.99601],[-121.094926,41.994658],[-121.035195,41.993323],[-120.879481,41.993781],[-120.812279,41.994183],[-120.692219,41.993677],[-120.647173,41.993084],[-120.501069,41.993785],[-120.286424,41.993058],[-120.181563,41.994588],[-120.001058,41.995139],[-119.999168,41.99454],[-119.999276,41.874891],[-119.998287,41.749892],[-119.998855,41.624893],[-119.99828,41.618765],[-119.999471,41.499894],[-119.999866,41.183974]],[[-123.013916,37.700355],[-123.012194,37.706749],[-123.004489,37.706262],[-122.997189,37.697909],[-123.000677,37.690203],[-123.005543,37.689392],[-123.011464,37.691907],[-123.013916,37.700355]],[[-122.418698,37.852717],[-122.421439,37.869969]],[[-122.421439,37.869969],[-122.41847,37.861764],[-122.418698,37.852717]],[[-122.47986,37.825641],[-122.476536,37.832812]],[[-122.476536,37.832812],[-122.47986,37.825641]],[[-122.522836,37.824717],[-122.516081,37.82521],[-122.505383,37.822128]],[[-122.505383,37.822128],[-122.522836,37.824717]],[[-122.358786,37.814293],[-122.362661,37.807577],[-122.372422,37.811301],[-122.37267,37.81651],[-122.3785,37.826505],[-122.377879,37.830648],[-122.369941,37.832137],[-122.363244,37.823951],[-122.358786,37.814293]],[[-122.391374,37.708331],[-122.502427,37.708133]],[[-122.502427,37.708133],[-122.506483,37.723731],[-122.511983,37.77113],[-122.514483,37.780829],[-122.50531,37.788312],[-122.492883,37.787929],[-122.485783,37.790629],[-122.478083,37.810828],[-122.470336,37.808671],[-122.463793,37.804653],[-122.425942,37.810979],[-122.407452,37.811441],[-122.398139,37.80563],[-122.385323,37.790724],[-122.37878,37.752203],[-122.36758,37.740214],[-122.375854,37.734979],[-122.370094,37.732331],[-122.365478,37.734621],[-122.356784,37.729505],[-122.361749,37.71501],[-122.370411,37.717572],[-122.377251,37.714557],[-122.378599,37.708634],[-122.391374,37.708331]],[[-119.789798,34.05726],[-119.770729,34.055051],[-119.763688,34.057155],[-119.755521,34.056716],[-119.739472,34.049299],[-119.726437,34.047908],[-119.712576,34.043265],[-119.704628,34.037681],[-119.686507,34.019805],[-119.637742,34.013178],[-119.619343,34.016468],[-119.612226,34.021256],[-119.604287,34.031561],[-119.609239,34.03735],[-119.59324,34.049625],[-119.57341,34.05011],[-119.5667,34.053452],[-119.529603,34.041155],[-119.52064,34.034262],[-119.532413,34.024949],[-119.542449,34.021082],[-119.54828,34.009819],[-119.547072,34.005469],[-119.554472,33.99782],[-119.560464,33.99553],[-119.575636,33.996009],[-119.5902,33.989712],[-119.619082,33.987228],[-119.621117,33.98899],[-119.64771,33.987786],[-119.662825,33.985889],[-119.69011,33.972225],[-119.706952,33.969178],[-119.714696,33.961439],[-119.721206,33.959583],[-119.742966,33.963877],[-119.750438,33.963759],[-119.758141,33.959212],[-119.795938,33.962929],[-119.842748,33.97034],[-119.873358,33.980375],[-119.877057,33.985757],[-119.883033,34.000802],[-119.884896,34.008814],[-119.876916,34.023527],[-119.876329,34.032087],[-119.892821,34.045529],[-119.916216,34.058351],[-119.923337,34.069361],[-119.919155,34.07728],[-119.912857,34.077508],[-119.89113,34.072856],[-119.857304,34.071298],[-119.825865,34.059794],[-119.818742,34.052997],[-119.807825,34.052127],[-119.789798,34.05726]],[[-120.248484,33.999329],[-120.247393,34.001911],[-120.238657,34.007592],[-120.230001,34.010136],[-120.221287,34.010367],[-120.208478,34.005655],[-120.19578,34.004284],[-120.167306,34.008219],[-120.151663,34.018126],[-120.147647,34.024831],[-120.135853,34.026087],[-120.115058,34.019866],[-120.090182,34.019806],[-120.073609,34.024477],[-120.062778,34.031161],[-120.061953,34.033976],[-120.055107,34.037729],[-120.043259,34.035806],[-120.044004,34.02482],[-120.047798,34.021227],[-120.050382,34.013331],[-120.046575,34.000002],[-120.041311,33.994507],[-120.025653,33.985553],[-120.011123,33.979894],[-120.003815,33.979547],[-119.984316,33.983948],[-119.978876,33.983081],[-119.979913,33.969623],[-119.976857,33.956693],[-119.971141,33.950401],[-119.97026,33.944359],[-119.973691,33.942481],[-120.00096,33.941554],[-120.017715,33.936366],[-120.046881,33.919597],[-120.049682,33.914563],[-120.077793,33.908886],[-120.098601,33.907853],[-120.105489,33.90428],[-120.109137,33.899129],[-120.121817,33.895712],[-120.168974,33.91909],[-120.179049,33.927994],[-120.18984,33.947703],[-120.198602,33.952211],[-120.200085,33.956904],[-120.209372,33.972376],[-120.224461,33.989059],[-120.248484,33.999329]],[[-120.46258,34.042627],[-120.440248,34.036918],[-120.415287,34.05496],[-120.403613,34.050442],[-120.390906,34.051994],[-120.374211,34.062658],[-120.368813,34.06778],[-120.368278,34.076465],[-120.362251,34.073056],[-120.354982,34.059256],[-120.36029,34.05582],[-120.358608,34.050235],[-120.346946,34.046576],[-120.331161,34.049097],[-120.319032,34.041979],[-120.313175,34.036576],[-120.302122,34.023574],[-120.304543,34.021171],[-120.317052,34.018837],[-120.347706,34.020114],[-120.35532,34.017914],[-120.35793,34.015029],[-120.375143,34.018775],[-120.409368,34.032198],[-120.415225,34.032245],[-120.427408,34.025425],[-120.454134,34.028081],[-120.459635,34.031537],[-120.465329,34.038448],[-120.46258,34.042627]],[[-119.048934,33.477592],[-119.048164,33.483692],[-119.038544,33.483345],[-119.029091,33.488674],[-119.027031,33.475956],[-119.032524,33.46513],[-119.050743,33.463242],[-119.048934,33.477592]],[[-119.478265,34.377197],[-119.510655,34.386295],[-119.536957,34.395495],[-119.559459,34.413395],[-119.616862,34.420995],[-119.638864,34.415696],[-119.648664,34.417396],[-119.671866,34.416096],[-119.688167,34.412497],[-119.684666,34.408297],[-119.691749,34.403154],[-119.709067,34.395397],[-119.729369,34.395897],[-119.74547,34.402898],[-119.785871,34.415997],[-119.794771,34.417597],[-119.835771,34.415796],[-119.853771,34.407996],[-119.873971,34.408795],[-119.925227,34.433931],[-119.956433,34.435288],[-119.971951,34.444641],[-120.008077,34.460447],[-120.038828,34.463434],[-120.050682,34.461651],[-120.088591,34.460208],[-120.097212,34.461809],[-120.118411,34.469927],[-120.141165,34.473405],[-120.183505,34.470372],[-120.225498,34.470587],[-120.238002,34.468098],[-120.25777,34.467451],[-120.283001,34.468354],[-120.295051,34.470623],[-120.301822,34.467077],[-120.341369,34.458789],[-120.441975,34.451512],[-120.451425,34.447094],[-120.471376,34.447846],[-120.47661,34.475131],[-120.480372,34.481059],[-120.490523,34.490075],[-120.511421,34.522953],[-120.524776,34.531291],[-120.581293,34.556959],[-120.608355,34.556656],[-120.612005,34.553564],[-120.622575,34.554017],[-120.637805,34.56622],[-120.645739,34.581035],[-120.640244,34.604406],[-120.625127,34.634489],[-120.60197,34.692095],[-120.60045,34.70464],[-120.601672,34.709721],[-120.614852,34.730709],[-120.62632,34.738072],[-120.637415,34.755895],[-120.62297,34.7933],[-120.616296,34.816308],[-120.609898,34.842751],[-120.610266,34.85818],[-120.616325,34.866739],[-120.639283,34.880413],[-120.642212,34.894145],[-120.647328,34.901133],[-120.662889,34.901183],[-120.670835,34.904115],[-120.648905,34.974393]],[[-120.648905,34.974393],[-120.634144,34.959562],[-120.628874,34.962877],[-120.616304,34.965949],[-120.613143,34.971272],[-120.602199,34.972749],[-120.5955,34.966488],[-120.585516,34.967221],[-120.582314,34.972261],[-120.575191,34.978291],[-120.566276,34.977472],[-120.55492,34.973881],[-120.53857,34.983754],[-120.496222,34.993155],[-120.438098,34.987755],[-120.390814,34.963109],[-120.361245,34.946466],[-120.35303,34.939287],[-120.340199,34.933776],[-120.328305,34.925821],[-120.318298,34.907038],[-120.310885,34.903785],[-120.301827,34.905571],[-120.298848,34.908787],[-120.300271,34.914697],[-120.293515,34.92481],[-120.29218,34.93031],[-120.294548,34.946594],[-120.296559,34.950395],[-120.303842,34.956115],[-120.301949,34.963381],[-120.308341,34.970336],[-120.315971,34.975709],[-120.314533,34.981501],[-120.319594,34.986111],[-120.325805,34.985571],[-120.333416,34.994756],[-120.334548,35.006315],[-120.323823,35.017314],[-120.309926,35.00922],[-120.290228,35.015435],[-120.278619,35.01156],[-120.277145,35.017576],[-120.27367,35.020805],[-120.266593,35.021257],[-120.260272,35.026535],[-120.261321,35.021368],[-120.257451,35.017589],[-120.252155,35.029022],[-120.243328,35.023307],[-120.233775,35.023681],[-120.231799,35.020515],[-120.224574,35.022735],[-120.215944,35.022617],[-120.21122,35.020455],[-120.21029,35.023767],[-120.203149,35.028736],[-120.188383,35.030378],[-120.186401,35.036552],[-120.180331,35.039278],[-120.18489,35.048449],[-120.18048,35.054954],[-120.17974,35.061812],[-120.172927,35.064486],[-120.172843,35.068641],[-120.167616,35.075297],[-120.15566,35.078066],[-120.155591,35.081537],[-120.149388,35.081469],[-120.149113,35.08436],[-120.143284,35.082086],[-120.140873,35.086802],[-120.145329,35.088731],[-120.141552,35.090963],[-120.142307,35.096048],[-120.138607,35.094156],[-120.135913,35.097852],[-120.126712,35.0921],[-120.124377,35.099695],[-120.119903,35.097921],[-120.115755,35.106675],[-120.11268,35.103513],[-120.107339,35.105249],[-120.107759,35.10893],[-120.102279,35.108445],[-120.101454,35.113463],[-120.09693,35.109595],[-120.092971,35.114171],[-120.079315,35.112744],[-120.0858,35.10917],[-120.080739,35.104895],[-120.072415,35.10471],[-120.067313,35.096762],[-120.05994,35.092972],[-120.048521,35.089901],[-120.044038,35.085993],[-120.039558,35.089152],[-120.032817,35.087824],[-120.029313,35.083571],[-120.024078,35.08404],[-120.023322,35.080311],[-120.014049,35.081447],[-120.013582,35.075578],[-120.005598,35.071793],[-120.002017,35.073205],[-119.992559,35.062931],[-119.988558,35.064929],[-119.980122,35.057573],[-119.965022,35.058825],[-119.960689,35.055712],[-119.95221,35.05734],[-119.94272,35.054439],[-119.931612,35.056343],[-119.928419,35.059794],[-119.917307,35.048977],[-119.909429,35.045953],[-119.910248,35.039566],[-119.901898,35.039004],[-119.901968,35.035793],[-119.889652,35.040629],[-119.878317,35.039712],[-119.875087,35.035689],[-119.865997,35.035083],[-119.863329,35.031425],[-119.854517,35.032149],[-119.84798,35.025418],[-119.84417,35.015476],[-119.84118,35.015015],[-119.830825,35.005781],[-119.82436,35.004951],[-119.815573,35.001108],[-119.809949,35.002097],[-119.805392,34.99821],[-119.801025,34.998859],[-119.798997,34.993249],[-119.789292,34.98867],[-119.780402,34.990729],[-119.761321,34.981121],[-119.755039,34.980007],[-119.745566,34.973676],[-119.72933,34.974649],[-119.717365,34.971776],[-119.708916,34.975337],[-119.700564,34.976674],[-119.693217,34.973706],[-119.678624,34.971775],[-119.673563,34.973575],[-119.664269,34.969876],[-119.654812,34.963385],[-119.644262,34.953575],[-119.634861,34.953875],[-119.624761,34.949175],[-119.616061,34.950575],[-119.60896,34.946875],[-119.59246,34.935076],[-119.586059,34.927275],[-119.578359,34.921875],[-119.561758,34.914075],[-119.535757,34.897576],[-119.501343,34.897873],[-119.490455,34.897475],[-119.490355,34.901174],[-119.472754,34.901174]],[[-119.472754,34.901174],[-119.442352,34.901274]],[[-119.442352,34.901274],[-119.442154,34.78647],[-119.441411,34.73327],[-119.442364,34.628796],[-119.442354,34.49095],[-119.442047,34.452794],[-119.440414,34.441842],[-119.443672,34.43667],[-119.444717,34.42951],[-119.453423,34.42861],[-119.454277,34.418166],[-119.445411,34.408881],[-119.445991,34.404067],[-119.454101,34.395568],[-119.463214,34.390549],[-119.472718,34.383556],[-119.473305,34.379295],[-119.478265,34.377197]],[[-120.003117,39.445044],[-120.145695,39.445169],[-120.44087,39.446006],[-120.505445,39.446117],[-120.507665,39.453403],[-120.51766,39.454995],[-120.534377,39.464653],[-120.534429,39.483765],[-120.53958,39.486749],[-120.541256,39.490889],[-120.54908,39.49447],[-120.550679,39.503629],[-120.556642,39.50681],[-120.55614,39.513658],[-120.560823,39.516207],[-120.568338,39.516036],[-120.577348,39.523192],[-120.583948,39.521506],[-120.588002,39.523563],[-120.597529,39.520712],[-120.622852,39.521339],[-120.624645,39.519547],[-120.63036,39.524898],[-120.634213,39.523503],[-120.65125,39.523592],[-120.653813,39.526554],[-120.659016,39.523794],[-120.673284,39.520382],[-120.678083,39.517591],[-120.686148,39.50726],[-120.700804,39.502583],[-120.706541,39.496029],[-120.70645,39.493221],[-120.717123,39.488805],[-120.713744,39.482788],[-120.725508,39.472905],[-120.737731,39.470063],[-120.743621,39.466285],[-120.742492,39.461276],[-120.752875,39.458315],[-120.75624,39.452474],[-120.761024,39.453941],[-120.765396,39.450889],[-120.775833,39.45076],[-120.780494,39.44657],[-120.784241,39.448038],[-120.791658,39.441287],[-120.797967,39.441172],[-120.800904,39.437484],[-120.805192,39.438673],[-120.810068,39.436206],[-120.816794,39.44081],[-120.817911,39.436457],[-120.826357,39.435039],[-120.83707,39.440419],[-120.843265,39.435115],[-120.854633,39.435856],[-120.864765,39.4302],[-120.886701,39.42829],[-120.893941,39.424132],[-120.912856,39.424838],[-120.914046,39.42017],[-120.929557,39.420812],[-120.931983,39.417125],[-120.943169,39.419751],[-120.950926,39.41886],[-120.957237,39.415751],[-120.971879,39.418958],[-120.978334,39.417872],[-120.985979,39.411463],[-120.992703,39.414392],[-121.006701,39.404871],[-121.014226,39.405753],[-121.015271,39.402616],[-121.007365,39.39969],[-121.018543,39.395066],[-121.022085,39.391558]],[[-121.022085,39.391558],[-121.032362,39.498786],[-121.0344,39.514436],[-121.044258,39.514096],[-121.048743,39.51702],[-121.055511,39.529957],[-121.057479,39.539991],[-121.051314,39.542072],[-121.04859,39.548018],[-121.043493,39.549144],[-121.032278,39.555627],[-121.031774,39.558235],[-121.024383,39.559049],[-121.013439,39.620238],[-121.009477,39.639459]],[[-121.009477,39.639459],[-121.004064,39.63811],[-120.986394,39.644684],[-120.983685,39.648844],[-120.978955,39.648717],[-120.969631,39.656163],[-120.963955,39.665046],[-120.949435,39.672548],[-120.952113,39.676424],[-120.944529,39.680921],[-120.93648,39.693242],[-120.93426,39.701618],[-120.934366,39.738792],[-120.925583,39.744345],[-120.922868,39.750884],[-120.916803,39.75323],[-120.913879,39.757222],[-120.905997,39.757348],[-120.903148,39.759776],[-120.895226,39.759849],[-120.890939,39.76452],[-120.88083,39.771049],[-120.875682,39.772213],[-120.873618,39.775875],[-120.85949,39.770463],[-120.85439,39.759912],[-120.844315,39.756134],[-120.843888,39.751329],[-120.837289,39.745566],[-120.828825,39.746839],[-120.826688,39.742094],[-120.819431,39.743765],[-120.81577,39.746945],[-120.813009,39.742331],[-120.814453,39.736757],[-120.811716,39.725396],[-120.808305,39.719922],[-120.804046,39.720944],[-120.794768,39.7184],[-120.791675,39.715124],[-120.792484,39.709794],[-120.782981,39.709843],[-120.782238,39.711677],[-120.771752,39.713517],[-120.77048,39.717757],[-120.759663,39.717622],[-120.749929,39.719635],[-120.74246,39.712543],[-120.734969,39.708611],[-120.716573,39.706343],[-120.712163,39.700753],[-120.707864,39.699233],[-120.701978,39.691201],[-120.695401,39.691865],[-120.68076,39.676833],[-120.671317,39.682445],[-120.66004,39.686197],[-120.65473,39.694115],[-120.654227,39.706629],[-120.465358,39.706461],[-120.446336,39.708571],[-120.359921,39.708489],[-120.28235,39.70785],[-120.249616,39.708033],[-120.147149,39.707658]],[[-120.001319,39.722416],[-120.00174,39.538852],[-120.003117,39.445044]],[[-122.266669,38.06007],[-122.273006,38.07438],[-122.282824,38.082889],[-122.301804,38.105142],[-122.314567,38.115287],[-122.366273,38.141467],[-122.39638,38.149976],[-122.403514,38.150624]],[[-122.403514,38.150624],[-122.406786,38.155632]],[[-122.406786,38.155632],[-122.349985,38.155518],[-122.213464,38.154894],[-122.19538,38.155017],[-122.198981,38.159317],[-122.194485,38.164715],[-122.19808,38.168417],[-122.20358,38.168717],[-122.20458,38.172817],[-122.20888,38.172717],[-122.21508,38.179717],[-122.21298,38.184317],[-122.215581,38.188417],[-122.20948,38.189917],[-122.211481,38.192117],[-122.20498,38.198516],[-122.205681,38.208216],[-122.19398,38.213614],[-122.196177,38.21892],[-122.193374,38.221215],[-122.19598,38.23041],[-122.205389,38.24462],[-122.209582,38.244816],[-122.211081,38.252215],[-122.204367,38.249302],[-122.19518,38.250716],[-122.193281,38.256415],[-122.196781,38.258415],[-122.212982,38.259115],[-122.216882,38.262315],[-122.212282,38.272814],[-122.206382,38.271614],[-122.197381,38.272714],[-122.188381,38.271614],[-122.190681,38.277514],[-122.203482,38.292914],[-122.199082,38.300113],[-122.202583,38.304113],[-122.201396,38.308013],[-122.205982,38.315713],[-122.179946,38.315913],[-122.133843,38.315612],[-122.064779,38.315912],[-122.068179,38.318412],[-122.062079,38.325111],[-122.061379,38.329611],[-122.069779,38.342811],[-122.069679,38.350811],[-122.07338,38.360911],[-122.07768,38.363711],[-122.088835,38.384151],[-122.109467,38.404497],[-122.114692,38.413908],[-122.117983,38.414109],[-122.124952,38.423921],[-122.126389,38.428918],[-122.123582,38.447608],[-122.120527,38.453926],[-122.113178,38.474816],[-122.104882,38.490807],[-122.107183,38.494507],[-122.106283,38.508307],[-122.103281,38.513348]],[[-122.103281,38.513348],[-122.096666,38.512903],[-122.090775,38.515996],[-122.086855,38.514477],[-122.068462,38.514107],[-122.057415,38.517441],[-122.041568,38.505713],[-122.035566,38.496122],[-122.018451,38.489165],[-122.011673,38.488991],[-121.995166,38.500549],[-121.98657,38.502987],[-121.984983,38.505916],[-121.978068,38.508277],[-121.967836,38.520098],[-121.947456,38.527096],[-121.940285,38.533384],[-121.925323,38.529705],[-121.908969,38.529576],[-121.893784,38.533429],[-121.888421,38.537819],[-121.861323,38.538495],[-121.84406,38.535238],[-121.832557,38.529757],[-121.825143,38.529296],[-121.812428,38.526048],[-121.794762,38.526937],[-121.785806,38.523074],[-121.779698,38.529912],[-121.770676,38.532229],[-121.764717,38.525917],[-121.756669,38.529633],[-121.745531,38.532403],[-121.738594,38.537704],[-121.719821,38.535219],[-121.712034,38.537962],[-121.700735,38.527427],[-121.694677,38.527054],[-121.695797,38.487615],[-121.693639,38.487604],[-121.693603,38.452193],[-121.694464,38.329621],[-121.693969,38.314454],[-121.690544,38.313731],[-121.593273,38.313089]],[[-121.593273,38.313089],[-121.598654,38.309892],[-121.599908,38.301515],[-121.60518,38.296084],[-121.605425,38.285801],[-121.60073,38.278375],[-121.603994,38.270695],[-121.600249,38.257817],[-121.601993,38.252426],[-121.602443,38.22041],[-121.611305,38.206299],[-121.612102,38.200068],[-121.615413,38.195696],[-121.622809,38.193275],[-121.631876,38.194369],[-121.64213,38.190024],[-121.645833,38.186508],[-121.662907,38.181869],[-121.68033,38.162812],[-121.685586,38.159705],[-121.687705,38.146829],[-121.692095,38.133126],[-121.696816,38.123762],[-121.706488,38.111858],[-121.708436,38.091482],[-121.713926,38.084542],[-121.73182,38.082634],[-121.743164,38.087229],[-121.766826,38.075951],[-121.796395,38.060847],[-121.801643,38.059503],[-121.810811,38.060767],[-121.827916,38.066223],[-121.842444,38.076735],[-121.861597,38.069887],[-121.862462,38.06603]],[[-121.862462,38.06603],[-121.869469,38.054519],[-121.874743,38.050676],[-121.889573,38.046657],[-121.901164,38.045361],[-121.915544,38.045216],[-121.92846,38.047054],[-121.946765,38.052882],[-121.962208,38.061365],[-121.97744,38.06684],[-121.983158,38.067297],[-122.015175,38.063481],[-122.028411,38.05919],[-122.050874,38.060201],[-122.061103,38.062137],[-122.067298,38.060077],[-122.07743,38.054005],[-122.098726,38.04746],[-122.120992,38.03799],[-122.123973,38.035717],[-122.139366,38.032177],[-122.148577,38.031721],[-122.164577,38.034721],[-122.174939,38.046431],[-122.183863,38.053997],[-122.201778,38.05812],[-122.245483,38.063922],[-122.266669,38.06007]],[[-121.484396,38.734598],[-121.521767,38.736401],[-121.559868,38.736302],[-121.567515,38.735789],[-121.602894,38.735838]],[[-121.602894,38.735838],[-121.593406,38.753985],[-121.592622,38.76286],[-121.599838,38.774876],[-121.60811,38.78086],[-121.624113,38.785174],[-121.631724,38.782375],[-121.628088,38.778945],[-121.636175,38.767085],[-121.64166,38.77329],[-121.64859,38.772824],[-121.639071,38.767729],[-121.654352,38.764382],[-121.658058,38.768836],[-121.664214,38.767802],[-121.659384,38.760319],[-121.659035,38.75433],[-121.66536,38.75536],[-121.668559,38.752976],[-121.667868,38.747648],[-121.673033,38.742847],[-121.677264,38.749436],[-121.670018,38.75931],[-121.67772,38.760669],[-121.680279,38.763448],[-121.685998,38.763371],[-121.692562,38.76771],[-121.686439,38.77536],[-121.688571,38.78213],[-121.693368,38.789816],[-121.690671,38.795627],[-121.696687,38.797361],[-121.701794,38.803005],[-121.71141,38.801197],[-121.723346,38.803759],[-121.724401,38.818386],[-121.723414,38.825617],[-121.730953,38.835253],[-121.725971,38.841254],[-121.728285,38.847369],[-121.72354,38.852292],[-121.728164,38.853408],[-121.730455,38.859086],[-121.744803,38.864155],[-121.748624,38.871318],[-121.759891,38.867771],[-121.75842,38.862355],[-121.765296,38.864187],[-121.770023,38.861537],[-121.77674,38.86134],[-121.784265,38.856685],[-121.785132,38.862597],[-121.79302,38.862972],[-121.795977,38.866659],[-121.801726,38.864282],[-121.803896,38.870023],[-121.814814,38.876582],[-121.816325,38.884955],[-121.809157,38.887739],[-121.803093,38.897419],[-121.803989,38.90172],[-121.79458,38.900536],[-121.792581,38.906362],[-121.797157,38.905466],[-121.80774,38.90693],[-121.809034,38.910205],[-121.804805,38.914521],[-121.830009,38.919059],[-121.835488,38.924481]],[[-121.835488,38.924481],[-121.837766,38.927353],[-121.830134,38.938425],[-121.836566,38.943816],[-121.836598,38.949128],[-121.840374,38.95452],[-121.832166,38.960216],[-121.834614,38.965208],[-121.832086,38.97116],[-121.821622,38.974503],[-121.81951,38.988279],[-121.802102,38.989767],[-121.795606,38.996678],[-121.805396,39.003239],[-121.820301,39.006494],[-121.825954,39.01065],[-121.826011,39.01409],[-121.820984,39.020279],[-121.824375,39.031781],[-121.830794,39.033652],[-121.830192,39.038637],[-121.838744,39.045091],[-121.840712,39.053365],[-121.838213,39.062953],[-121.847964,39.070817],[-121.851696,39.071509],[-121.859561,39.068459],[-121.869352,39.066917],[-121.87608,39.070077],[-121.889101,39.072373],[-121.894605,39.078976],[-121.889738,39.081165],[-121.894804,39.085922],[-121.894369,39.096126],[-121.898947,39.097058],[-121.905924,39.104195],[-121.903523,39.108058],[-121.905535,39.114766],[-121.913087,39.114316],[-121.910094,39.121168],[-121.912302,39.123876],[-121.922086,39.122632],[-121.924959,39.128197],[-121.933928,39.130041],[-121.937953,39.133001],[-121.939535,39.141317],[-121.936755,39.144212],[-121.920541,39.141338],[-121.917342,39.149029],[-121.920125,39.152992],[-121.934917,39.1619],[-121.93939,39.174211],[-121.945509,39.180959],[-121.93968,39.187839],[-121.935174,39.189348],[-121.937105,39.194071],[-121.928332,39.198729],[-121.933337,39.209267],[-121.932417,39.211571],[-121.941239,39.221581],[-121.940048,39.228674],[-121.948294,39.240845],[-121.945278,39.253101],[-121.94226,39.256097],[-121.941311,39.262358],[-121.936916,39.26795],[-121.929575,39.270608],[-121.927943,39.275242],[-121.920796,39.281631],[-121.922211,39.286989],[-121.916702,39.292107],[-121.91688,39.295725],[-121.908563,39.301427],[-121.908269,39.303878]],[[-121.908269,39.303878],[-121.79839,39.303629],[-121.67849,39.304947],[-121.63015,39.305668],[-121.632448,39.303043],[-121.62376,39.295621]],[[-121.62376,39.295621],[-121.625559,39.292478],[-121.631654,39.291533],[-121.627075,39.27946],[-121.622302,39.275667],[-121.623801,39.271904],[-121.629669,39.273735],[-121.632534,39.27098],[-121.621706,39.262959],[-121.627203,39.259365],[-121.635557,39.262077],[-121.636368,39.246076],[-121.63438,39.239811],[-121.628886,39.236885],[-121.628854,39.23053],[-121.624785,39.227684],[-121.614307,39.228745],[-121.618123,39.220646],[-121.613689,39.214525],[-121.620284,39.213487],[-121.621221,39.206066],[-121.629089,39.204678],[-121.624028,39.196351],[-121.615137,39.193296],[-121.613,39.190304],[-121.618361,39.183412],[-121.615724,39.178014],[-121.611571,39.176317],[-121.615383,39.167366],[-121.612549,39.163639],[-121.605507,39.148459],[-121.607575,39.140895],[-121.597676,39.127792],[-121.60463,39.112763],[-121.601347,39.104176],[-121.602678,39.100158],[-121.595631,39.099447],[-121.587785,39.101817],[-121.58591,39.089691],[-121.597743,39.075739],[-121.60332,39.065669],[-121.61025,39.056907],[-121.607345,39.036866],[-121.605634,39.032628],[-121.59441,39.022955],[-121.600036,39.012106],[-121.584073,39.009557],[-121.57933,39.007573],[-121.580622,39.003307],[-121.589399,38.990344],[-121.586548,38.979976],[-121.58737,38.973373],[-121.581447,38.96529],[-121.582592,38.955695],[-121.577961,38.946771],[-121.582183,38.93565],[-121.581147,38.925847],[-121.575459,38.918393],[-121.575546,38.924363],[-121.571297,38.938918],[-121.56147,38.953437],[-121.553518,38.953755],[-121.543306,38.972404],[-121.524653,38.971473],[-121.509029,38.982791],[-121.49369,38.984302],[-121.489646,38.99205],[-121.48205,38.9935],[-121.474408,38.992173],[-121.456315,38.99819],[-121.448604,38.997065],[-121.443826,38.993325],[-121.422068,38.996332],[-121.414885,38.996429]],[[-121.414885,38.996429],[-121.414399,38.926214],[-121.469356,38.925992],[-121.469998,38.846047],[-121.469624,38.794709],[-121.469753,38.751603],[-121.48444,38.751354],[-121.484396,38.734598]],[[-123.544458,40.001923],[-123.543886,40.238847],[-123.544508,40.341181],[-123.544268,40.499315],[-123.544639,40.594024],[-123.544394,40.719429],[-123.544059,40.739386],[-123.548096,40.746373],[-123.551806,40.748127],[-123.55117,40.757022],[-123.554164,40.76017],[-123.550123,40.763969],[-123.554507,40.766656],[-123.549865,40.775808],[-123.557224,40.779666],[-123.557612,40.787255],[-123.561047,40.790505],[-123.5648,40.787703],[-123.565626,40.796364],[-123.556367,40.793806],[-123.556215,40.808817],[-123.562831,40.810063],[-123.568687,40.820304],[-123.55985,40.829584],[-123.566243,40.834978],[-123.564119,40.842229],[-123.573162,40.843515],[-123.579107,40.858769],[-123.586877,40.858214],[-123.5806,40.867999],[-123.586204,40.869613],[-123.591461,40.867549],[-123.59571,40.875577],[-123.601709,40.879953],[-123.597325,40.883317],[-123.601028,40.888961],[-123.608594,40.895375],[-123.604725,40.90037],[-123.606087,40.90479],[-123.615827,40.914068],[-123.613423,40.921551],[-123.621171,40.925518],[-123.622387,40.931703],[-123.611362,40.929255],[-123.599261,40.931155],[-123.591561,40.927355],[-123.571662,40.937055],[-123.56766,40.936556],[-123.570361,40.944955],[-123.568361,40.948255],[-123.560163,40.950257],[-123.55526,40.945955],[-123.54426,40.941656],[-123.539859,40.937856],[-123.542259,40.933056],[-123.534624,40.930756],[-123.529659,40.934856],[-123.514858,40.924756],[-123.511758,40.920357],[-123.496657,40.916157],[-123.481357,40.915157],[-123.477958,40.928056],[-123.458651,40.941959],[-123.447956,40.943758],[-123.444357,40.954047],[-123.446657,40.958057],[-123.453558,40.960758],[-123.453258,40.964153],[-123.438756,40.971456],[-123.434356,40.983253],[-123.427258,40.988256],[-123.42775,41.0007],[-123.420059,41.009674],[-123.409906,41.010742],[-123.40604,41.012897],[-123.410312,41.020674],[-123.407218,41.030619],[-123.419282,41.034528],[-123.423341,41.042189],[-123.424713,41.052753],[-123.423272,41.058157],[-123.430723,41.063267],[-123.445599,41.061681],[-123.452525,41.068531],[-123.457942,41.068215],[-123.459598,41.073739],[-123.464006,41.076348],[-123.458574,41.08241],[-123.458824,41.08557],[-123.464498,41.092524],[-123.460079,41.093557],[-123.456451,41.090493],[-123.446328,41.088874],[-123.439806,41.092541],[-123.441224,41.0948],[-123.435834,41.102351],[-123.434289,41.111655],[-123.429251,41.118],[-123.42873,41.124854],[-123.430405,41.135503],[-123.429409,41.144774],[-123.431491,41.147727],[-123.428768,41.152062],[-123.432582,41.158653],[-123.432246,41.162539],[-123.421733,41.166541],[-123.417843,41.164988],[-123.410365,41.170706],[-123.408291,41.179944]],[[-123.408291,41.179944],[-123.403977,41.174526],[-123.397862,41.174082],[-123.393507,41.170716],[-123.394118,41.165541],[-123.391432,41.160123],[-123.384062,41.157739],[-123.381192,41.15129],[-123.372973,41.151941],[-123.37048,41.156284],[-123.362238,41.161557],[-123.353237,41.163054],[-123.341518,41.155814],[-123.333626,41.154654],[-123.329615,41.151664],[-123.324952,41.141547],[-123.31537,41.140268],[-123.310522,41.143222],[-123.303469,41.143789],[-123.295065,41.14065],[-123.283833,41.126554],[-123.283939,41.123453],[-123.273402,41.122891],[-123.273622,41.119006],[-123.269355,41.112715],[-123.263078,41.108642],[-123.261238,41.099383],[-123.257174,41.091947],[-123.246828,41.082955],[-123.245222,41.077987],[-123.23948,41.075763],[-123.225236,41.076125],[-123.21729,41.073015],[-123.208886,41.074666],[-123.203153,41.071763],[-123.193115,41.077388],[-123.177479,41.076552],[-123.16525,41.078131],[-123.153921,41.074905],[-123.148723,41.078447],[-123.132945,41.078646],[-123.118561,41.075831],[-123.109077,41.075429],[-123.105656,41.065504],[-123.0983,41.063015],[-123.095869,41.059169],[-123.080092,41.057563],[-123.076003,41.054783],[-123.064302,41.051962],[-123.05966,41.047237],[-123.055183,41.046706],[-123.052023,41.040271],[-123.045909,41.033197],[-123.04727,41.024459],[-123.043393,41.019326],[-123.043843,41.014072],[-123.037118,41.004176],[-123.0245,41.004111],[-123.007237,41.008521],[-122.997207,41.013324],[-122.989741,41.012428],[-122.980131,41.014314],[-122.964623,41.011979],[-122.952018,41.006393],[-122.945486,40.995178],[-122.940531,40.992298],[-122.934978,40.992433],[-122.924666,40.99567],[-122.917529,40.99399],[-122.914153,40.998115],[-122.915314,41.002467],[-122.91293,41.008641],[-122.90586,41.009051],[-122.901522,41.014646],[-122.902685,41.022749],[-122.897363,41.02918],[-122.906269,41.036539],[-122.912386,41.051045],[-122.921975,41.065865],[-122.923328,41.071952],[-122.942075,41.070075],[-122.966063,41.080905],[-122.97097,41.09016],[-122.969184,41.103762],[-122.974074,41.10576],[-122.973382,41.112074],[-122.959934,41.123992],[-122.965341,41.138307],[-122.958074,41.145664],[-122.952918,41.146974],[-122.95174,41.151045],[-122.957276,41.161214],[-122.954512,41.166939],[-122.960888,41.173867],[-122.961347,41.181525],[-122.951317,41.185578],[-122.9356,41.177261],[-122.929171,41.178691],[-122.924839,41.186665],[-122.91537,41.187184],[-122.908836,41.191531],[-122.906876,41.195924],[-122.894475,41.202675],[-122.885803,41.204933],[-122.880822,41.203522],[-122.870689,41.205088],[-122.862485,41.20205],[-122.842296,41.200739],[-122.836698,41.206727],[-122.825175,41.21003],[-122.816845,41.207595],[-122.811342,41.202451],[-122.802109,41.203048],[-122.795551,41.211361],[-122.788333,41.212582],[-122.78673,41.216996],[-122.781207,41.218173],[-122.777012,41.230841],[-122.76709,41.234162],[-122.763738,41.238083],[-122.753641,41.241874],[-122.744513,41.241608],[-122.740043,41.244256],[-122.732649,41.243794],[-122.725295,41.247466],[-122.724601,41.261075],[-122.720366,41.266938],[-122.711957,41.27479],[-122.704961,41.275037],[-122.686289,41.281253],[-122.682246,41.277985],[-122.677537,41.279968],[-122.677275,41.284986],[-122.663488,41.291644],[-122.653686,41.289237],[-122.651549,41.299596],[-122.64558,41.304734],[-122.64821,41.320224],[-122.64573,41.324449],[-122.63233,41.331375],[-122.627473,41.332026],[-122.617889,41.327525],[-122.607682,41.329187],[-122.601303,41.325901],[-122.590808,41.32591],[-122.587628,41.332209],[-122.581845,41.336465],[-122.581141,41.34144],[-122.587159,41.35068],[-122.585241,41.359008],[-122.572894,41.365696],[-122.572326,41.368025],[-122.561049,41.36596],[-122.55169,41.361702],[-122.542835,41.354083],[-122.541004,41.345889],[-122.535818,41.341523],[-122.529218,41.341385],[-122.519912,41.343776],[-122.50389,41.342985],[-122.504254,41.33471],[-122.488962,41.324662],[-122.478771,41.320085],[-122.491196,41.313439],[-122.50192,41.309113],[-122.498263,41.295748],[-122.502337,41.289868],[-122.510167,41.288664],[-122.51333,41.28368],[-122.513943,41.255215],[-122.508247,41.245288],[-122.517458,41.239783],[-122.518109,41.235921],[-122.512261,41.226452],[-122.522636,41.213525],[-122.515492,41.204992],[-122.497401,41.195569],[-122.495018,41.192438],[-122.498376,41.182675]],[[-122.498376,41.182675],[-122.497735,41.178572],[-122.490952,41.175567],[-122.477764,41.177164],[-122.468288,41.169232],[-122.454017,41.166293],[-122.44989,41.159156],[-122.446023,41.159241],[-122.450607,41.14694],[-122.448108,41.135905],[-122.448572,41.11824],[-122.453469,41.11349],[-122.451864,41.108235],[-122.457144,41.096611],[-122.468136,41.096837],[-122.476587,41.091987],[-122.480612,41.091597],[-122.493297,41.085987],[-122.50001,41.087626],[-122.506239,41.086045],[-122.513354,41.088227],[-122.528833,41.076751],[-122.535861,41.075869],[-122.539775,41.072605],[-122.536828,41.06417],[-122.525794,41.06304],[-122.522361,41.052285],[-122.527336,41.045725],[-122.528132,41.040615],[-122.527753,41.014395],[-122.535083,41.008102],[-122.537877,41.002384],[-122.548104,41.005224],[-122.55449,41.003622],[-122.555444,40.999485],[-122.560953,40.996609],[-122.564389,40.988187],[-122.569181,40.984988],[-122.581754,40.982957],[-122.587593,40.985372],[-122.589631,40.97956],[-122.598658,40.975592],[-122.601755,40.970557],[-122.603089,40.959387],[-122.607363,40.957748],[-122.603189,40.94062],[-122.606945,40.938412],[-122.60743,40.929723],[-122.612751,40.921245],[-122.609738,40.913943],[-122.603663,40.908882],[-122.600013,40.900343],[-122.604937,40.897201],[-122.605457,40.890643],[-122.609899,40.88455],[-122.61527,40.881068],[-122.625038,40.879693],[-122.626426,40.867094],[-122.63438,40.861289],[-122.634671,40.857056],[-122.638889,40.853409],[-122.639715,40.84504],[-122.6554,40.841548],[-122.657227,40.83538],[-122.666058,40.825875],[-122.655232,40.807573],[-122.657459,40.801945],[-122.661352,40.800482],[-122.661656,40.794313],[-122.658093,40.787504],[-122.665572,40.782076],[-122.669839,40.773567],[-122.688228,40.764439],[-122.692824,40.760725],[-122.699809,40.759262],[-122.700091,40.755862],[-122.706295,40.749556],[-122.717407,40.747182],[-122.719852,40.739372],[-122.706571,40.725331],[-122.709962,40.719314],[-122.712424,40.710007],[-122.71846,40.708319],[-122.722358,40.695473],[-122.729969,40.692177],[-122.737978,40.692813],[-122.741694,40.695301],[-122.752023,40.689882],[-122.751634,40.685635],[-122.742583,40.67881],[-122.741214,40.665397],[-122.733589,40.662426],[-122.733772,40.656956],[-122.727029,40.650468],[-122.731939,40.645323],[-122.736171,40.636279],[-122.732393,40.634426],[-122.715622,40.634045],[-122.709655,40.631199],[-122.711488,40.61801],[-122.71063,40.612549],[-122.706716,40.611152],[-122.705435,40.600484],[-122.701173,40.595815],[-122.700124,40.585743],[-122.692867,40.580473],[-122.693075,40.575338],[-122.69879,40.569293],[-122.714386,40.570951],[-122.722178,40.575326],[-122.732668,40.571051],[-122.741312,40.564118],[-122.743923,40.553798],[-122.75925,40.556537],[-122.767903,40.553345],[-122.779242,40.546461],[-122.785194,40.540916],[-122.785675,40.536539],[-122.782224,40.531871],[-122.79362,40.523434],[-122.793252,40.514518],[-122.80054,40.511238],[-122.819511,40.510961],[-122.828784,40.506998],[-122.845954,40.505181],[-122.852079,40.500955],[-122.848118,40.497357],[-122.846968,40.490776],[-122.857256,40.482339],[-122.87171,40.481571],[-122.883643,40.474773],[-122.889957,40.468572],[-122.889292,40.465737],[-122.895365,40.459703],[-122.894298,40.455584],[-122.901267,40.445574],[-122.905196,40.445295],[-122.917707,40.449768],[-122.931267,40.445557],[-122.930624,40.442022],[-122.937791,40.436923],[-122.938618,40.428858],[-122.955592,40.421192],[-122.961004,40.425989],[-122.966001,40.422816],[-122.982217,40.418279],[-122.990576,40.419435],[-122.998248,40.418208],[-122.997909,40.40648],[-122.999771,40.403564],[-122.996579,40.396381],[-123.006315,40.38968],[-123.012666,40.388079],[-123.018145,40.383313],[-123.01954,40.371694],[-123.023116,40.367571],[-123.031136,40.363607],[-123.037148,40.364439],[-123.043934,40.35442],[-123.04397,40.347013],[-123.051878,40.34685],[-123.056883,40.349246],[-123.065667,40.343907],[-123.064324,40.336853],[-123.068789,40.332233],[-123.062688,40.322046],[-123.064587,40.31987],[-123.061747,40.313442],[-123.068838,40.308255],[-123.064973,40.298722],[-123.065426,40.286971]],[[-123.065426,40.286971],[-123.061241,40.277764],[-123.051239,40.267933],[-123.037135,40.261434],[-123.031495,40.264823],[-123.01858,40.262783],[-123.012488,40.26014],[-123.00316,40.25308],[-122.989015,40.250145],[-122.97755,40.241285],[-122.978722,40.23458],[-122.975119,40.232568],[-122.980027,40.214708],[-122.978205,40.206453],[-122.974205,40.203886],[-122.971086,40.197178],[-122.974722,40.19146],[-122.970064,40.186306],[-122.980203,40.177897],[-122.983937,40.171984],[-122.986423,40.159401],[-122.98454,40.153411],[-122.989623,40.145496],[-122.97807,40.141105],[-122.968554,40.138948],[-122.973657,40.130025],[-122.969385,40.118456],[-122.970666,40.115692],[-122.966101,40.109967],[-122.961088,40.099996],[-122.963719,40.095676],[-122.961441,40.089754],[-122.966728,40.089007],[-122.969916,40.080889],[-122.973222,40.077553],[-122.968172,40.073818],[-122.9684,40.068806],[-122.961571,40.066883],[-122.952831,40.059723],[-122.948886,40.049745],[-122.954197,40.045434],[-122.953786,40.038018],[-122.94976,40.032101],[-122.951502,40.025649],[-122.956378,40.01994],[-122.955322,40.01586],[-122.949448,40.012127],[-122.951671,39.998271],[-122.943714,39.995259],[-122.934984,39.986189],[-122.937083,39.981867],[-122.934013,39.978131]],[[-122.934013,39.978131],[-123.332193,39.977305],[-123.544563,39.977015],[-123.544458,40.001923]],[[-119.428095,34.006622],[-119.437734,34.01],[-119.441226,34.014075],[-119.433912,34.015975],[-119.421376,34.015012],[-119.411317,34.008005],[-119.389983,34.006099],[-119.366591,34.016785],[-119.357462,34.015919],[-119.376396,34.010551],[-119.391551,34.002505],[-119.414528,34.004994],[-119.422972,34.004368],[-119.428095,34.006622]],[[-119.495547,33.269052],[-119.48278,33.263973],[-119.465717,33.259239],[-119.458466,33.254661],[-119.429559,33.228167],[-119.444269,33.21919],[-119.464725,33.215432],[-119.476029,33.21552],[-119.511659,33.223027],[-119.517514,33.226737],[-119.545872,33.233406],[-119.564971,33.24744],[-119.566014,33.252639],[-119.570642,33.257729],[-119.578942,33.278628],[-119.562042,33.271129],[-119.555242,33.273429],[-119.547642,33.280328],[-119.543842,33.280329],[-119.532941,33.284728],[-119.528141,33.284929],[-119.50504,33.272829],[-119.495547,33.269052]],[[-119.442352,34.901274],[-119.382154,34.900936],[-119.382451,34.879675],[-119.277123,34.879675],[-119.278346,34.857276],[-119.243645,34.857576],[-119.243645,34.814178],[-119.023688,34.812344],[-118.976721,34.812199],[-118.976723,34.79066],[-118.881364,34.790629]],[[-118.881364,34.790629],[-118.812361,34.648301],[-118.770257,34.56321],[-118.677616,34.374993],[-118.636789,34.291804],[-118.632546,34.263351],[-118.632495,34.240426],[-118.667713,34.240404],[-118.668152,34.168195],[-118.710884,34.168526],[-118.723374,34.167861],[-118.788889,34.168214],[-118.939859,34.075551],[-118.941074,34.073999],[-118.944887,34.04534]],[[-118.944887,34.04534],[-118.954722,34.048167],[-118.977751,34.059822],[-118.99698,34.065943],[-119.004644,34.066231],[-119.037494,34.083111],[-119.069959,34.09047],[-119.088536,34.09831],[-119.098216,34.099334],[-119.109784,34.094566],[-119.130169,34.100102],[-119.18864,34.139005],[-119.20314,34.144505],[-119.216441,34.146105],[-119.237142,34.175804],[-119.257043,34.213304],[-119.265927,34.234609],[-119.270144,34.252903],[-119.278643,34.2669],[-119.290937,34.274897],[-119.302131,34.272761],[-119.313034,34.275689],[-119.337475,34.290576],[-119.349187,34.304383],[-119.370356,34.319486],[-119.37578,34.321118],[-119.388249,34.317398],[-119.390449,34.318198],[-119.42777,34.353016],[-119.435888,34.355839],[-119.461036,34.374064],[-119.478265,34.377197]],[[-121.62376,39.295621],[-121.618723,39.301996],[-121.620677,39.302839],[-121.616688,39.312369],[-121.611177,39.31928],[-121.604196,39.31802],[-121.603284,39.312733],[-121.593281,39.307681],[-121.584316,39.311541],[-121.574185,39.310497],[-121.56314,39.305006],[-121.548379,39.309116],[-121.547109,39.312182],[-121.536413,39.31421],[-121.530545,39.318256],[-121.521234,39.319484],[-121.517142,39.317375],[-121.504117,39.317929],[-121.497206,39.314374],[-121.495843,39.318684],[-121.486673,39.317419],[-121.482628,39.320132],[-121.484557,39.324889],[-121.477778,39.328959],[-121.474964,39.333341],[-121.466291,39.332895],[-121.463588,39.330857],[-121.458489,39.335262],[-121.453146,39.334568],[-121.447631,39.330569],[-121.443344,39.331496],[-121.434813,39.337482],[-121.425492,39.335133],[-121.419204,39.33903],[-121.405968,39.340569],[-121.406756,39.344659],[-121.400513,39.349963],[-121.387855,39.355995],[-121.38209,39.363036],[-121.372421,39.3653],[-121.372565,39.372864],[-121.368239,39.376536],[-121.364105,39.384779],[-121.36008,39.400718],[-121.363493,39.403297],[-121.359054,39.409095],[-121.341807,39.422427],[-121.334071,39.425802],[-121.335293,39.430403],[-121.339715,39.430988],[-121.34525,39.439202],[-121.346612,39.445218],[-121.345139,39.452567],[-121.33842,39.454381],[-121.338264,39.465031],[-121.333438,39.46509],[-121.333427,39.468729],[-121.324141,39.468608],[-121.324067,39.475713],[-121.314787,39.475899],[-121.31498,39.486961],[-121.310164,39.486831],[-121.3102,39.497761],[-121.305425,39.497816],[-121.305122,39.519585],[-121.276789,39.520271],[-121.277077,39.512812],[-121.240242,39.513091],[-121.240483,39.526613],[-121.210022,39.52722],[-121.185173,39.526695],[-121.185399,39.519728],[-121.159296,39.519595],[-121.158978,39.526131],[-121.149907,39.526446],[-121.149898,39.555289],[-121.140885,39.55555],[-121.141213,39.562278],[-121.116451,39.563543],[-121.116314,39.567098],[-121.10697,39.567191],[-121.107465,39.585275],[-121.079543,39.585263],[-121.076695,39.597264]],[[-121.076695,39.597264],[-121.050922,39.613801],[-121.009477,39.639459]],[[-121.022085,39.391558],[-121.024838,39.389239],[-121.032158,39.395731],[-121.041531,39.38816],[-121.047529,39.389741],[-121.047503,39.394328],[-121.059988,39.394634],[-121.061561,39.391694],[-121.084391,39.394266],[-121.086147,39.387137],[-121.095532,39.387727],[-121.104549,39.380257],[-121.108711,39.381467],[-121.116202,39.378504],[-121.128007,39.379752],[-121.127779,39.372143],[-121.134129,39.371289],[-121.137071,39.363315],[-121.145135,39.355782],[-121.144909,39.349428],[-121.154766,39.348605],[-121.157683,39.339222],[-121.157533,39.332467],[-121.162519,39.332616],[-121.16502,39.338638],[-121.178977,39.33856],[-121.183448,39.335971],[-121.186456,39.330332],[-121.195619,39.329582],[-121.19827,39.323943],[-121.206005,39.317381],[-121.204977,39.307889],[-121.200146,39.302375],[-121.208033,39.29835],[-121.216194,39.291303],[-121.219853,39.283076],[-121.233788,39.282851],[-121.240146,39.283997],[-121.250113,39.278561],[-121.263363,39.274833],[-121.266911,39.271609],[-121.259182,39.256421],[-121.269301,39.252123],[-121.268787,39.24025],[-121.276076,39.231418],[-121.27953,39.230537],[-121.279749,39.109845],[-121.279533,39.034618]],[[-121.279533,39.034618],[-121.290213,39.03687],[-121.293332,39.043969],[-121.302675,39.048328],[-121.304496,39.052465],[-121.311552,39.051993],[-121.319832,39.048453],[-121.321631,39.043753],[-121.329117,39.043899],[-121.335749,39.038792],[-121.358383,39.030213],[-121.361185,39.032601],[-121.37238,39.02773],[-121.377072,39.021014],[-121.385089,39.017718],[-121.398857,39.007813],[-121.412684,39.003635],[-121.408753,38.99969],[-121.414885,38.996429]],[[-122.627396,38.667506],[-122.625464,38.674402],[-122.639497,38.689058],[-122.637049,38.69373],[-122.643785,38.698962],[-122.646569,38.706177],[-122.66219,38.70594],[-122.669402,38.70837],[-122.67233,38.706274],[-122.691835,38.710946],[-122.697259,38.718018],[-122.696683,38.72101],[-122.703756,38.73053],[-122.71038,38.732082],[-122.712332,38.742226],[-122.708316,38.748354],[-122.720085,38.753545],[-122.723884,38.763117],[-122.729543,38.770704],[-122.735885,38.774501],[-122.735339,38.777638],[-122.74822,38.787795],[-122.746198,38.799248],[-122.748742,38.80419],[-122.758839,38.807842],[-122.767613,38.813871],[-122.77248,38.82153],[-122.780193,38.826843],[-122.791393,38.830429],[-122.795989,38.838952],[-122.799796,38.836978],[-122.808674,38.836643],[-122.812874,38.843274],[-122.818314,38.844585],[-122.817651,38.849839],[-122.821592,38.85014]],[[-122.821592,38.85014],[-122.821388,38.85792],[-122.840099,38.857993],[-122.839994,38.866024],[-122.858487,38.865849],[-122.85776,38.873261],[-122.876495,38.87313],[-122.8757,38.880837],[-122.894633,38.880832],[-122.89389,38.895524],[-122.911355,38.895171],[-122.911386,38.901529],[-122.93369,38.90142],[-122.948865,38.90022],[-122.950047,38.909748],[-122.949067,38.925442],[-122.961888,38.925511],[-122.960186,38.932469],[-122.969919,38.932663],[-122.968286,38.946506],[-122.977712,38.946685],[-122.977429,38.9829],[-122.986683,38.983009],[-122.98664,38.997283],[-123.009254,38.997164],[-123.009265,38.993177],[-123.018579,38.992956],[-123.018626,38.996613],[-123.028035,38.996593],[-123.028011,39.006496],[-123.03731,39.006497],[-123.037511,39.013697],[-123.046811,39.013796],[-123.047011,39.020896],[-123.056212,39.021096],[-123.056111,39.049895],[-123.065212,39.049995],[-123.065114,39.064393],[-123.083812,39.064494],[-123.083712,39.071794],[-123.093013,39.071994],[-123.094207,39.080524],[-123.094212,39.095294],[-123.085012,39.095294],[-123.085212,39.110093],[-123.087592,39.110077],[-123.087512,39.138392],[-123.078112,39.13874],[-123.077812,39.173791],[-123.045811,39.173492],[-123.045411,39.18059],[-123.040911,39.180691],[-123.04011,39.19249],[-123.034811,39.192391],[-123.034111,39.19969],[-123.029711,39.199591],[-123.02881,39.206789],[-123.02431,39.207089],[-123.02411,39.213689],[-123.02111,39.213689],[-123.02081,39.220689],[-123.01251,39.220989],[-123.01271,39.236188],[-122.994839,39.235924],[-122.994484,39.256757],[-123.00361,39.257387],[-123.00451,39.278187],[-123.019612,39.277986],[-123.019711,39.321785],[-123.028712,39.321785],[-123.028712,39.336585],[-123.037712,39.336185],[-123.037914,39.363885],[-123.048613,39.364084],[-123.047513,39.378584],[-123.057113,39.378684],[-123.056314,39.407583],[-123.075114,39.407683],[-123.074315,39.421983],[-123.074915,39.436582],[-123.070115,39.436482],[-123.073115,39.452682],[-123.063015,39.452482],[-123.063181,39.503539],[-123.044394,39.503585],[-123.04445,39.5112],[-123.024953,39.511181],[-123.025236,39.518709],[-123.014783,39.519202],[-122.996364,39.517892],[-122.936697,39.516396],[-122.936696,39.530713],[-122.921617,39.52981],[-122.89031,39.529014],[-122.88579,39.565141],[-122.885352,39.580108]],[[-122.885352,39.580108],[-122.875034,39.58072],[-122.828434,39.579661],[-122.814099,39.5814],[-122.790913,39.579717],[-122.772475,39.579463],[-122.753938,39.581209],[-122.735639,39.580668],[-122.735766,39.544066],[-122.736548,39.50851],[-122.732433,39.494629],[-122.731711,39.482932],[-122.732601,39.450754],[-122.741748,39.43523],[-122.739345,39.407685],[-122.739062,39.383266]],[[-122.739062,39.383266],[-122.78509,39.382975],[-122.774199,39.374883],[-122.768086,39.373981],[-122.763175,39.377804],[-122.755588,39.375673],[-122.752244,39.370581],[-122.743482,39.36813],[-122.741719,39.358899],[-122.745835,39.356219],[-122.752097,39.346349],[-122.76531,39.342743],[-122.764833,39.335014],[-122.768242,39.331143],[-122.768297,39.325488],[-122.772524,39.323979],[-122.775252,39.312563],[-122.770492,39.310021],[-122.766129,39.301028],[-122.758226,39.293947],[-122.758114,39.28538],[-122.748201,39.279077],[-122.732766,39.271886],[-122.7297,39.273486],[-122.716482,39.262939],[-122.712454,39.25701],[-122.70584,39.254844],[-122.691361,39.247431],[-122.686852,39.241149],[-122.680927,39.238726],[-122.6817,39.234561],[-122.675838,39.230087],[-122.679729,39.22453],[-122.673817,39.2253],[-122.665362,39.217548],[-122.650138,39.213922],[-122.638075,39.219992],[-122.63516,39.223052],[-122.623013,39.223212],[-122.612332,39.21881],[-122.610584,39.216435],[-122.601864,39.214185],[-122.593527,39.214316],[-122.578978,39.210661],[-122.573442,39.204288],[-122.567215,39.203701],[-122.553288,39.206743],[-122.541418,39.206915],[-122.534993,39.211595],[-122.527238,39.209516],[-122.515331,39.209215],[-122.513788,39.196007],[-122.508405,39.190321],[-122.498538,39.191091],[-122.493635,39.18353],[-122.494012,39.178098],[-122.47729,39.17395],[-122.475383,39.170148],[-122.482574,39.162927],[-122.474541,39.144699],[-122.480246,39.139566],[-122.487972,39.141597],[-122.496835,39.140501],[-122.494787,39.135851],[-122.500909,39.121075],[-122.494205,39.115076],[-122.496461,39.107813],[-122.488849,39.098013],[-122.486242,39.082544],[-122.49052,39.077302],[-122.488676,39.0692],[-122.483879,39.066955],[-122.490552,39.064962],[-122.492232,39.059529],[-122.491278,39.052991],[-122.481666,39.052732],[-122.465763,39.048412],[-122.468135,39.044313],[-122.454854,39.034411],[-122.450188,39.032659],[-122.43729,39.021357],[-122.434336,39.022516],[-122.424342,39.020427],[-122.413416,39.020218],[-122.409983,39.017517],[-122.408707,39.007354],[-122.411909,39.005089],[-122.411917,38.998137],[-122.41931,38.989177],[-122.416766,38.978249],[-122.408254,38.973033],[-122.409214,38.963001],[-122.401983,38.956105],[-122.394031,38.955609],[-122.373023,38.939817],[-122.367583,38.939033],[-122.350111,38.928777],[-122.341791,38.92729],[-122.340172,38.924246]],[[-122.340172,38.924246],[-122.354729,38.925225],[-122.403941,38.925289],[-122.409856,38.918553],[-122.415824,38.907354],[-122.421952,38.903562],[-122.422048,38.90089],[-122.415552,38.897098],[-122.411072,38.889402],[-122.405264,38.883402],[-122.406096,38.880362],[-122.3964,38.874059],[-122.391088,38.867291],[-122.395056,38.864245]],[[-122.395056,38.864245],[-122.403289,38.856099],[-122.402217,38.853938],[-122.381988,38.8338],[-122.373488,38.817],[-122.379388,38.802101],[-122.397989,38.804001],[-122.412289,38.785801],[-122.410089,38.785501],[-122.408989,38.776301],[-122.402889,38.772902],[-122.415789,38.768002],[-122.46389,38.705203],[-122.592195,38.675804],[-122.627396,38.667506]],[[-114.435429,34.079727],[-114.481217,34.079809],[-114.837334,34.079609],[-114.846649,34.076881],[-114.852206,34.079687],[-114.92202,34.079685],[-115.19239,34.079422],[-115.192442,34.077761],[-115.316065,34.077843],[-115.316212,34.03411],[-115.373944,34.034745],[-115.666319,34.035305],[-115.750825,34.035222],[-115.873817,34.035306],[-115.984836,34.035147],[-115.984832,34.034434],[-116.046447,34.034297],[-116.194132,34.033614],[-116.195845,34.034328],[-116.300598,34.034401],[-116.300631,34.032544],[-116.457775,34.032881],[-116.512252,34.032878],[-116.615574,34.032551],[-116.615603,34.03331],[-116.754736,34.033998],[-116.827868,34.033837],[-116.929558,34.034113],[-116.929537,34.004914],[-116.987228,34.004712],[-117.008568,34.00432],[-117.034456,34.004881],[-117.0677,34.003707],[-117.142214,34.004288],[-117.225372,34.004314],[-117.225373,34.018715],[-117.266955,34.018566],[-117.296275,34.019414],[-117.375416,34.019399],[-117.377284,34.026718],[-117.375278,34.033875],[-117.41448,34.034313],[-117.49307,34.033439],[-117.558312,34.033451],[-117.558377,33.98842],[-117.593232,33.977596],[-117.610386,33.971614],[-117.610913,33.960084],[-117.610947,33.925114],[-117.655386,33.925114],[-117.654885,33.888815],[-117.676286,33.888815],[-117.668985,33.880915],[-117.673085,33.875615],[-117.673749,33.870831]],[[-117.673749,33.870831],[-117.680289,33.877412],[-117.748097,33.921432],[-117.783287,33.946411]],[[-117.783287,33.946411],[-117.793551,33.953822],[-117.793667,33.968135],[-117.802445,33.968308],[-117.802539,33.975551],[-117.785062,34.004809],[-117.767483,34.004611],[-117.76769,34.023506],[-117.735846,34.018554],[-117.730125,34.021371],[-117.727384,34.03654],[-117.716309,34.067661],[-117.70848,34.085254],[-117.686799,34.138122],[-117.681713,34.155827],[-117.678501,34.161993],[-117.646374,34.28917],[-117.659673,34.451605],[-117.660346,34.557848],[-117.667034,34.558008],[-117.667085,34.690155],[-117.667234,34.704529],[-117.667292,34.822526]],[[-117.667292,34.822526],[-117.632011,34.82227],[-117.632194,34.983241],[-117.63275,35.009758],[-117.632818,35.057382],[-117.63329,35.097558],[-117.63088,35.097604],[-117.631273,35.155922],[-117.630973,35.247365],[-117.631299,35.274179],[-117.631248,35.361727],[-117.632782,35.405407],[-117.631295,35.419566],[-117.633509,35.434438],[-117.633659,35.450997],[-117.630216,35.451041],[-117.630604,35.499947],[-117.629969,35.539886],[-117.630126,35.564071],[-117.634771,35.564109],[-117.63486,35.622503],[-117.63381,35.650972],[-117.616395,35.651755],[-117.616195,35.680856],[-117.652319,35.680782],[-117.651986,35.709934],[-117.634251,35.709927],[-117.634108,35.7467],[-117.633597,35.749953],[-117.632996,35.797251]],[[-117.632996,35.797251],[-117.368423,35.795169],[-117.269483,35.79506],[-117.125883,35.795658],[-117.117593,35.795245],[-117.041901,35.795382],[-116.714538,35.795364],[-116.281825,35.793438],[-116.210913,35.793297],[-116.109503,35.793448],[-116.05763,35.793973],[-115.735891,35.79362],[-115.735745,35.809097],[-115.648925,35.809128],[-115.64802,35.809629]],[[-115.64802,35.809629],[-115.500832,35.693382],[-115.412908,35.624981],[-115.406079,35.618613],[-115.271342,35.51266],[-115.160599,35.424313],[-115.145813,35.413182],[-115.125816,35.39694],[-115.043812,35.332012],[-114.942216,35.249994],[-114.925381,35.237039],[-114.633013,35.002085],[-114.62919,34.991887],[-114.629907,34.980791],[-114.634607,34.96906],[-114.634953,34.958918],[-114.629811,34.94481],[-114.629753,34.938684],[-114.633237,34.92123],[-114.630877,34.907263],[-114.635425,34.895192],[-114.636768,34.885705],[-114.635176,34.875003],[-114.630682,34.866352],[-114.619878,34.856873],[-114.604255,34.849573],[-114.592339,34.841153],[-114.586842,34.835672],[-114.581126,34.826115],[-114.576452,34.8153],[-114.57101,34.794294],[-114.558653,34.773852],[-114.552682,34.766871],[-114.540306,34.757109],[-114.529615,34.750822],[-114.516619,34.736745],[-114.495858,34.727956],[-114.481954,34.716036],[-114.47162,34.712966],[-114.46862,34.707573],[-114.465246,34.691202],[-114.456567,34.677956],[-114.451971,34.666795],[-114.451753,34.654321],[-114.444276,34.646542],[-114.440294,34.63824],[-114.441525,34.631529],[-114.438739,34.621455],[-114.424202,34.610453],[-114.424326,34.602338],[-114.43009,34.596874],[-114.429747,34.591734],[-114.422382,34.580711],[-114.405228,34.569637],[-114.389603,34.542982],[-114.380838,34.529724],[-114.378223,34.516521],[-114.378124,34.507288],[-114.382358,34.495757],[-114.383038,34.488903],[-114.381555,34.477883],[-114.387187,34.462021],[-114.386699,34.457911],[-114.373719,34.446938],[-114.363404,34.447773],[-114.342615,34.451442],[-114.335372,34.450038],[-114.330669,34.445295],[-114.32613,34.437251],[-114.319054,34.435831],[-114.301016,34.426807],[-114.292226,34.417606],[-114.291751,34.411104],[-114.286802,34.40534],[-114.280108,34.403147],[-114.264317,34.401329],[-114.252739,34.3901],[-114.245261,34.385659],[-114.234275,34.376662],[-114.226107,34.365916],[-114.213774,34.36246],[-114.199482,34.361373],[-114.191094,34.356125],[-114.176909,34.349306],[-114.168807,34.339513],[-114.157206,34.317862],[-114.138282,34.30323],[-114.139534,34.295844],[-114.13605,34.280833],[-114.137045,34.277018],[-114.134612,34.263518],[-114.139055,34.259538],[-114.147159,34.259564],[-114.161826,34.257038],[-114.166536,34.249647],[-114.173119,34.247226],[-114.17805,34.239969],[-114.190876,34.230858],[-114.215454,34.208956],[-114.223384,34.205136],[-114.225861,34.201774],[-114.224941,34.193896],[-114.229715,34.186928],[-114.240712,34.183232],[-114.254141,34.173831],[-114.268267,34.17021],[-114.275267,34.17215],[-114.287294,34.170529],[-114.292806,34.166725],[-114.312206,34.144776],[-114.324576,34.136759],[-114.336112,34.134035],[-114.348052,34.134458],[-114.356373,34.130429],[-114.360402,34.123577],[-114.366521,34.118575],[-114.379234,34.115988],[-114.390565,34.110084],[-114.401352,34.111652],[-114.411681,34.110031],[-114.415908,34.107636],[-114.426168,34.097042],[-114.428026,34.092787],[-114.434181,34.087379],[-114.435429,34.079727]],[[-122.292974,37.107318],[-122.289382,37.113472],[-122.311782,37.147545],[-122.317682,37.186945],[-122.288581,37.186745],[-122.268881,37.189843],[-122.24266,37.190035],[-122.242473,37.215133],[-122.172753,37.215194],[-122.152774,37.215444],[-122.151457,37.230023],[-122.152675,37.24724],[-122.152278,37.286055]],[[-122.152278,37.286055],[-122.14866,37.28082],[-122.150539,37.275883],[-122.14415,37.27021],[-122.13555,37.26541],[-122.12853,37.25927],[-122.12393,37.25972],[-122.11295,37.24958],[-122.10557,37.24074],[-122.10423,37.23427],[-122.093369,37.22924],[-122.08981,37.22327],[-122.078775,37.223204],[-122.07007,37.21661],[-122.06617,37.21044],[-122.055064,37.212683],[-122.047548,37.204936],[-122.040782,37.195171],[-122.03075,37.18999],[-122.031769,37.18043],[-122.02653,37.17611],[-122.026114,37.16678],[-122.015966,37.165658],[-122.012974,37.161483],[-122.00023,37.15883],[-121.997269,37.152082],[-121.991347,37.144739],[-121.97997,37.14085],[-121.97324,37.14188],[-121.96276,37.13294],[-121.953825,37.129035],[-121.94069,37.12595],[-121.932026,37.122001],[-121.92426,37.12128],[-121.910685,37.113295],[-121.90572,37.11317],[-121.89479,37.10966],[-121.88725,37.104934],[-121.884808,37.107825],[-121.870066,37.102247],[-121.860009,37.104171],[-121.86176,37.09934],[-121.849086,37.098997],[-121.84414,37.09473],[-121.82996,37.08807],[-121.82402,37.08757],[-121.81746,37.08264],[-121.81711,37.07782],[-121.812516,37.075155],[-121.809076,37.069301],[-121.80151,37.06749],[-121.79582,37.06356],[-121.78594,37.06193],[-121.78155,37.056991],[-121.77295,37.05262],[-121.76696,37.05328],[-121.760678,37.0476],[-121.7576,37.04963],[-121.73913,37.02718],[-121.72782,37.02275],[-121.731313,37.022417],[-121.736186,37.015342],[-121.727815,37.009862],[-121.726566,37.012054],[-121.718762,37.007557],[-121.729624,36.997872],[-121.730705,36.992946],[-121.738697,36.989991],[-121.734411,36.989308],[-121.717878,36.995561],[-121.705509,36.98936],[-121.705244,36.986245],[-121.695358,36.98515],[-121.698428,36.974984],[-121.693303,36.96823],[-121.687758,36.966951],[-121.678258,36.96785],[-121.66993,36.963641],[-121.664787,36.963714],[-121.663257,36.951851],[-121.654038,36.950584],[-121.653056,36.941751],[-121.645791,36.93233],[-121.641025,36.932224],[-121.642256,36.936351],[-121.637055,36.939053],[-121.624755,36.940451],[-121.607155,36.926051],[-121.590354,36.926151],[-121.590154,36.919252],[-121.581154,36.919252],[-121.581354,36.899152]],[[-121.581354,36.899152],[-121.594745,36.901077],[-121.607303,36.899456],[-121.619761,36.908911],[-121.629489,36.911681],[-121.638103,36.898327],[-121.644001,36.893996]],[[-121.644001,36.893996],[-121.646565,36.902832],[-121.650633,36.900246],[-121.653699,36.90378],[-121.653529,36.91137],[-121.657904,36.913814],[-121.6671,36.91229],[-121.680621,36.903285],[-121.6863,36.907851],[-121.697441,36.911607],[-121.702324,36.908175],[-121.706795,36.911196],[-121.698461,36.916738],[-121.699956,36.919683],[-121.709998,36.915304],[-121.715119,36.908794],[-121.726447,36.914272],[-121.728381,36.911415],[-121.736064,36.908511],[-121.745365,36.909293],[-121.757482,36.899981],[-121.765059,36.88827],[-121.7725,36.883767],[-121.777456,36.883212],[-121.784082,36.885903],[-121.793216,36.880017],[-121.80345,36.868012],[-121.800938,36.857387],[-121.810552,36.850648]],[[-121.810552,36.850648],[-121.827664,36.879353],[-121.862266,36.931552],[-121.880167,36.950151],[-121.894667,36.961851],[-121.906468,36.96895],[-121.930069,36.97815],[-121.93947,36.97805],[-121.95167,36.97145],[-121.972771,36.954151],[-121.983896,36.958727],[-122.012373,36.96455],[-122.023373,36.96215],[-122.027174,36.95115],[-122.050122,36.948523],[-122.066421,36.948271],[-122.105976,36.955951],[-122.140578,36.97495],[-122.155078,36.98085],[-122.186879,37.00345],[-122.20618,37.013949],[-122.252181,37.059448],[-122.260481,37.072548],[-122.284882,37.101747],[-122.292974,37.107318]],[[-122.315445,37.896778],[-122.296207,37.898925],[-122.28848,37.897925],[-122.27798,37.901626],[-122.27108,37.905824],[-122.257113,37.899856],[-122.253082,37.894116],[-122.249477,37.893086],[-122.248914,37.886867],[-122.241979,37.881924],[-122.238679,37.883325],[-122.223878,37.878326],[-122.216276,37.868822],[-122.221488,37.865026],[-122.21238,37.857234],[-122.208486,37.85169],[-122.204094,37.851387],[-122.195274,37.843587],[-122.196101,37.842005],[-122.184179,37.833922],[-122.187077,37.829526],[-122.185977,37.820726],[-122.176977,37.816227],[-122.166873,37.813424],[-122.157392,37.817952],[-122.148808,37.81376],[-122.14026,37.804562],[-122.045473,37.798126],[-122.030472,37.787727],[-122.014072,37.780227],[-121.997771,37.763227],[-122.010771,37.755127],[-122.011771,37.747428],[-122.001071,37.739028],[-121.993571,37.738128],[-121.989971,37.733628],[-121.97247,37.728528],[-121.96077,37.718629],[-121.910138,37.73046],[-121.749599,37.769536],[-121.670362,37.789427],[-121.623724,37.799291],[-121.55916,37.818927],[-121.556936,37.817218]],[[-121.556936,37.817218],[-121.556661,37.756107],[-121.556959,37.743051],[-121.556957,37.63613],[-121.557248,37.615637],[-121.556655,37.542732],[-121.550454,37.539332],[-121.545754,37.532532],[-121.539654,37.529831],[-121.522154,37.524832],[-121.504153,37.525932],[-121.498653,37.522632],[-121.502053,37.518532],[-121.497553,37.513232],[-121.496052,37.504932],[-121.493352,37.502432],[-121.485452,37.502532],[-121.469275,37.489093],[-121.471925,37.481783]],[[-121.471925,37.481783],[-121.472648,37.48217]],[[-121.472648,37.48217],[-121.472952,37.482333],[-121.69006,37.482834],[-121.741328,37.48394],[-121.830388,37.484236],[-121.865267,37.484637],[-121.875205,37.475215],[-121.881996,37.470708],[-121.885966,37.471375],[-121.890759,37.468038],[-121.909129,37.462995],[-121.925548,37.454389],[-121.932069,37.455277],[-121.934116,37.460331],[-121.947087,37.467424],[-121.946174,37.463946],[-121.951921,37.461461],[-121.959313,37.463515],[-121.974706,37.46074],[-121.980014,37.460892],[-121.997171,37.467139],[-122.03837,37.46416],[-122.047825,37.459007],[-122.051244,37.459007],[-122.081473,37.477838]],[[-122.081473,37.477838],[-122.109574,37.497637],[-122.116112,37.505386]],[[-122.116112,37.505386],[-122.111344,37.50758],[-122.111998,37.528851],[-122.128688,37.560594],[-122.137524,37.567467],[-122.147014,37.588411],[-122.145378,37.600846],[-122.152905,37.640771],[-122.163049,37.667933],[-122.170904,37.676114],[-122.179085,37.680041],[-122.203971,37.697769],[-122.213774,37.698695],[-122.221628,37.705567],[-122.246826,37.72193],[-122.257953,37.739601],[-122.257134,37.745001],[-122.243947,37.751779],[-122.271905,37.761508],[-122.275408,37.76735],[-122.293996,37.770416],[-122.318909,37.77904],[-122.33079,37.78383],[-122.331748,37.796052],[-122.335675,37.799652],[-122.333711,37.809797],[-122.323567,37.823214],[-122.317676,37.826814],[-122.306222,37.827469],[-122.302981,37.836497],[-122.315913,37.836812],[-122.314195,37.842311],[-122.303884,37.840249],[-122.302852,37.848154],[-122.308352,37.862934],[-122.316944,37.858809],[-122.325193,37.874276],[-122.318663,37.875307],[-122.313164,37.870151],[-122.310414,37.870495],[-122.311445,37.879775],[-122.326912,37.888712],[-122.326912,37.892492],[-122.311101,37.89043],[-122.315445,37.896778]],[[-119.585437,38.713212],[-119.579476,38.706653],[-119.586905,38.698497],[-119.586668,38.694913],[-119.591844,38.690126],[-119.591461,38.682174],[-119.596212,38.677879],[-119.599326,38.670233],[-119.609011,38.665911],[-119.614658,38.665879],[-119.613133,38.655772],[-119.616862,38.644627],[-119.614934,38.638152],[-119.618269,38.631849],[-119.616645,38.62591],[-119.621072,38.614423],[-119.619066,38.603529],[-119.612534,38.600482],[-119.608864,38.594718],[-119.599815,38.593348],[-119.594652,38.587651],[-119.59602,38.581851],[-119.589307,38.573563],[-119.59052,38.568678],[-119.587192,38.566903],[-119.587367,38.558354],[-119.584298,38.552018],[-119.579394,38.548701],[-119.57411,38.540824],[-119.568055,38.537707],[-119.566871,38.52527],[-119.56154,38.526008],[-119.558774,38.518096],[-119.556217,38.516621],[-119.559214,38.505491],[-119.556616,38.501702],[-119.542817,38.499258],[-119.545374,38.490032],[-119.542452,38.480649],[-119.546867,38.473521],[-119.555863,38.470242],[-119.558983,38.460437],[-119.556426,38.447465],[-119.563802,38.437609],[-119.570009,38.43486],[-119.566056,38.42775],[-119.565065,38.421802],[-119.561857,38.420843],[-119.561995,38.410734],[-119.567546,38.405115],[-119.582628,38.399347],[-119.583689,38.396943],[-119.592409,38.398877],[-119.601212,38.405354],[-119.611508,38.398972],[-119.61581,38.398917],[-119.622093,38.393875],[-119.618801,38.382739],[-119.60662,38.367182],[-119.614448,38.365593],[-119.635575,38.353908],[-119.628295,38.349733],[-119.632068,38.344202],[-119.631853,38.334741],[-119.63544,38.328673],[-119.639205,38.32688]],[[-119.639205,38.32688],[-119.669524,38.348288],[-119.700029,38.365215],[-119.693622,38.378899],[-119.694293,38.385134],[-119.700647,38.412669],[-119.712893,38.418452],[-119.753481,38.416759],[-119.770553,38.406663],[-119.779889,38.407714],[-119.784485,38.404875],[-119.801737,38.401321],[-119.814691,38.387516],[-119.837551,38.382411],[-119.854978,38.372479],[-119.869667,38.367597],[-119.882498,38.359302],[-119.884749,38.356185],[-120.018572,38.43235],[-120.019951,38.433521]],[[-120.019951,38.433521],[-120.053578,38.455554],[-120.072566,38.447081],[-120.072484,38.509869]],[[-120.072484,38.509869],[-120.072392,38.702767]],[[-120.072392,38.702767],[-119.964948,38.775986],[-119.947927,38.781642],[-119.947655,38.785158],[-119.939585,38.794371],[-119.943942,38.796717],[-119.942516,38.802634],[-119.936066,38.807279],[-119.931746,38.814138],[-119.921307,38.821737],[-119.92271,38.829955],[-119.908493,38.834346],[-119.908541,38.84613],[-119.906779,38.854664],[-119.900761,38.857408],[-119.891909,38.857344],[-119.880303,38.864776],[-119.87775,38.868311],[-119.87936,38.87531],[-119.88876,38.878977],[-119.882814,38.880989],[-119.879543,38.886536],[-119.884488,38.894206],[-119.879864,38.899419],[-119.883264,38.904518],[-119.887643,38.918295],[-119.891551,38.918142],[-119.905399,38.928337],[-119.904315,38.933324]],[[-119.904315,38.933324],[-119.585437,38.713212]],[[-120.995497,38.225405],[-121.006399,38.250605],[-121.027084,38.300252]],[[-121.027084,38.300252],[-121.027262,38.489252],[-121.027507,38.508292]],[[-121.027507,38.508292],[-121.019309,38.508948],[-121.009509,38.514595],[-121.005307,38.519592],[-120.999941,38.518103],[-120.995008,38.513691],[-120.9901,38.516153],[-120.974374,38.515998],[-120.970281,38.520811],[-120.964569,38.520284],[-120.957595,38.522768],[-120.952526,38.521031],[-120.946218,38.523463],[-120.943563,38.527524],[-120.938962,38.527875],[-120.936416,38.519414],[-120.927449,38.515078],[-120.922068,38.519387],[-120.910985,38.520496],[-120.905403,38.524311],[-120.902366,38.531227],[-120.891238,38.528289],[-120.889432,38.524691],[-120.883627,38.525912],[-120.88066,38.530864],[-120.883723,38.535168],[-120.873304,38.541732],[-120.870815,38.536185],[-120.863003,38.535974],[-120.862409,38.543329],[-120.857018,38.542598],[-120.856415,38.548051],[-120.840906,38.556036],[-120.836585,38.551468],[-120.832923,38.555862],[-120.825437,38.55586],[-120.823283,38.559687],[-120.817219,38.558074],[-120.814736,38.561836],[-120.809896,38.56127],[-120.810456,38.55775],[-120.80184,38.559095],[-120.800882,38.556283],[-120.794665,38.557617],[-120.79233,38.554612],[-120.783143,38.550904],[-120.779078,38.554378],[-120.768373,38.552749],[-120.759959,38.554931],[-120.754752,38.551161],[-120.748873,38.553398],[-120.747251,38.548446],[-120.738962,38.548306],[-120.735695,38.545587],[-120.731036,38.547996],[-120.722875,38.547032],[-120.718321,38.541763],[-120.690676,38.528017],[-120.683089,38.526394],[-120.677438,38.518132],[-120.659183,38.51557],[-120.650757,38.510033],[-120.63899,38.507766],[-120.628428,38.503204],[-120.62208,38.50439],[-120.606157,38.502349],[-120.592126,38.504596],[-120.580239,38.503448],[-120.575135,38.504417],[-120.55378,38.511863],[-120.54319,38.509769],[-120.510596,38.511467],[-120.490186,38.51794],[-120.485204,38.521393],[-120.473714,38.521645],[-120.459157,38.523888],[-120.450036,38.528492],[-120.438981,38.528895],[-120.433695,38.526702],[-120.424637,38.530342],[-120.413149,38.53115],[-120.405086,38.536076],[-120.388967,38.540575],[-120.383226,38.538931],[-120.380839,38.542854],[-120.373345,38.545034],[-120.363063,38.544566],[-120.355535,38.548031],[-120.338669,38.546938],[-120.331298,38.547694],[-120.328356,38.545155],[-120.318831,38.544881],[-120.301721,38.549109],[-120.299189,38.556117],[-120.289586,38.55614],[-120.274522,38.559452],[-120.266761,38.567584],[-120.266352,38.573465],[-120.26256,38.578633],[-120.251026,38.584383],[-120.239231,38.585957],[-120.233849,38.588316],[-120.231756,38.592236],[-120.232624,38.600044],[-120.223662,38.604281],[-120.227248,38.609794],[-120.220714,38.621376],[-120.214917,38.623299],[-120.212787,38.629371],[-120.204748,38.627734],[-120.202875,38.624706],[-120.197676,38.625804],[-120.197104,38.629198],[-120.178644,38.633766],[-120.170189,38.632432],[-120.158102,38.633233],[-120.145072,38.639676],[-120.140494,38.638168],[-120.131718,38.649064],[-120.135104,38.654526],[-120.128513,38.665061],[-120.123094,38.666704],[-120.116701,38.679778],[-120.123369,38.686934],[-120.121762,38.696083],[-120.110852,38.705714],[-120.103005,38.705963],[-120.098369,38.703957],[-120.098322,38.709029],[-120.077639,38.708887],[-120.077693,38.702126],[-120.072392,38.702767]],[[-120.072484,38.509869],[-120.08941,38.5064],[-120.092221,38.507503],[-120.100299,38.503997],[-120.107996,38.50384],[-120.112733,38.498018],[-120.125191,38.495844],[-120.142101,38.498113],[-120.146708,38.495319],[-120.164319,38.494235],[-120.169224,38.496294],[-120.180054,38.495558],[-120.205702,38.501039],[-120.217417,38.497706],[-120.22603,38.490742],[-120.235546,38.489885],[-120.240871,38.485351],[-120.254637,38.48771],[-120.261393,38.485869],[-120.269132,38.477773],[-120.283785,38.475447],[-120.294785,38.477161],[-120.304564,38.472126],[-120.319114,38.471026],[-120.33104,38.465192],[-120.338139,38.467437],[-120.353649,38.465483],[-120.362101,38.46667],[-120.369996,38.465186],[-120.379282,38.461065],[-120.384198,38.461865],[-120.386409,38.465961],[-120.412429,38.468666],[-120.414664,38.473075],[-120.423215,38.473322],[-120.43159,38.467178],[-120.443988,38.46147],[-120.447733,38.453543],[-120.461404,38.446171],[-120.467137,38.448844],[-120.485954,38.445649],[-120.493959,38.447228],[-120.498102,38.444431],[-120.505602,38.443699],[-120.50464,38.439378],[-120.52358,38.422653],[-120.53013,38.418884],[-120.537225,38.418432],[-120.540156,38.423056],[-120.550341,38.420284],[-120.560014,38.41506],[-120.567821,38.414997],[-120.572271,38.412502],[-120.570581,38.407359],[-120.57556,38.401388],[-120.590092,38.399254],[-120.601357,38.399724],[-120.609139,38.396716],[-120.610457,38.391631],[-120.614991,38.389201],[-120.614739,38.380612],[-120.616848,38.37908],[-120.614098,38.372483],[-120.610438,38.370013],[-120.618779,38.365439],[-120.619217,38.358164],[-120.627572,38.356137],[-120.631801,38.345566],[-120.631783,38.339947],[-120.638507,38.340835],[-120.646613,38.334586],[-120.6565,38.330912],[-120.666923,38.331494],[-120.67646,38.328562],[-120.683569,38.324667],[-120.685846,38.320309],[-120.692396,38.31794],[-120.713583,38.3149],[-120.731866,38.307702],[-120.738286,38.307768],[-120.751694,38.295942],[-120.754442,38.288469],[-120.767291,38.290316],[-120.779002,38.287619],[-120.790542,38.288593],[-120.799273,38.285637],[-120.803365,38.288867],[-120.808321,38.287694],[-120.810546,38.281605],[-120.816852,38.28392],[-120.822044,38.275451],[-120.832042,38.269148],[-120.846799,38.264271],[-120.855667,38.248296],[-120.869971,38.244402],[-120.87542,38.239772],[-120.88006,38.24061],[-120.880767,38.23361],[-120.888774,38.227569],[-120.892864,38.221574],[-120.903074,38.222557],[-120.912736,38.229466],[-120.925528,38.227632],[-120.937155,38.220762],[-120.953404,38.226315],[-120.963347,38.219902],[-120.972104,38.217951],[-120.981072,38.221788],[-120.985737,38.221414],[-120.995497,38.225405]],[[-121.436886,40.151905],[-121.404509,40.151648],[-121.404855,40.115545],[-121.385934,40.1159],[-121.386105,40.10865],[-121.376489,40.108626],[-121.376792,40.086034],[-121.366818,40.086054],[-121.367142,40.071888],[-121.376844,40.071747],[-121.377076,40.057089],[-121.381996,40.056991],[-121.382266,40.051827],[-121.400353,40.052095],[-121.400338,40.030523],[-121.409642,40.030624],[-121.409562,40.015728],[-121.41948,40.015766],[-121.419817,39.987549],[-121.410263,39.987303],[-121.410327,39.958478],[-121.419844,39.958625],[-121.420573,39.929606],[-121.411086,39.929433],[-121.411001,39.915091],[-121.430012,39.914833],[-121.429957,39.900313],[-121.411,39.900425],[-121.411936,39.871421],[-121.399018,39.871287],[-121.398529,39.862884],[-121.38015,39.862816],[-121.380183,39.855421],[-121.361206,39.855473],[-121.360516,39.84074],[-121.351079,39.84035],[-121.350821,39.825704],[-121.332293,39.825696],[-121.332333,39.811053],[-121.318471,39.810906],[-121.316938,39.796702],[-121.307709,39.796616],[-121.307808,39.789365],[-121.294126,39.78925],[-121.294224,39.785502],[-121.289468,39.785439],[-121.289505,39.781657],[-121.284946,39.781576],[-121.285852,39.767624],[-121.268272,39.768799],[-121.268025,39.754244],[-121.251074,39.754041],[-121.248256,39.740041],[-121.229706,39.740213],[-121.229446,39.725665],[-121.210878,39.725651],[-121.210618,39.711923],[-121.208941,39.711879],[-121.208687,39.700358],[-121.190532,39.699891],[-121.190284,39.685353],[-121.171188,39.685564],[-121.171143,39.671088],[-121.163015,39.670987],[-121.162864,39.663824],[-121.155144,39.663913],[-121.155077,39.656785],[-121.136412,39.65681],[-121.136715,39.628169],[-121.116633,39.628048],[-121.116331,39.621018],[-121.097538,39.620903],[-121.097703,39.613698],[-121.088947,39.613545],[-121.088921,39.603306],[-121.079345,39.60335],[-121.076695,39.597264]],[[-121.908269,39.303878],[-121.908697,39.30799],[-121.905433,39.322752],[-121.900193,39.335362],[-121.895891,39.33772],[-121.899698,39.354014],[-121.898608,39.357905],[-121.893892,39.35834],[-121.887703,39.37198],[-121.884047,39.373857],[-121.890013,39.383864]],[[-121.890013,39.383864],[-121.890271,39.390585],[-121.88346,39.406765],[-121.884316,39.410175],[-121.880953,39.416423],[-121.878032,39.427659],[-121.875199,39.427911],[-121.874579,39.434135],[-121.87694,39.438346],[-121.8708,39.449559],[-121.874754,39.460338],[-121.869351,39.466196],[-121.871211,39.46718],[-121.87301,39.482261],[-121.87171,39.490771],[-121.877133,39.501782],[-121.877341,39.509549],[-121.871114,39.518447],[-121.8615,39.524985],[-121.85681,39.532206],[-121.856532,39.536904],[-121.945194,39.536057],[-121.974031,39.52885],[-121.97682,39.53287],[-121.98567,39.531017],[-121.994021,39.533926],[-121.999152,39.544839],[-122.003051,39.557665],[-122.001723,39.561023],[-121.991729,39.562635],[-121.991053,39.565892],[-122.001425,39.569002],[-122.00334,39.57326],[-121.995062,39.582295],[-121.996858,39.587621],[-121.995767,39.603164],[-121.992323,39.60818],[-121.982222,39.611369],[-121.979555,39.614791],[-121.983546,39.623283],[-121.988333,39.62421],[-121.992132,39.629159],[-121.990829,39.636539],[-121.986391,39.644874],[-121.975987,39.648639],[-121.968188,39.648348],[-121.966623,39.652444],[-121.969193,39.656984],[-121.97765,39.66424],[-121.984822,39.660509],[-121.990771,39.660411],[-121.996495,39.663864],[-121.997348,39.668483],[-121.994343,39.671458],[-121.985145,39.670172],[-121.974794,39.675487],[-121.960198,39.677877],[-121.956919,39.687525],[-121.945892,39.690322],[-121.941583,39.698113],[-121.950951,39.715004],[-121.950765,39.71934],[-121.94681,39.724934],[-121.946937,39.730653],[-121.952407,39.73182],[-121.957239,39.719088],[-121.962524,39.717741],[-121.967845,39.721981],[-121.964996,39.728391],[-121.961232,39.730752],[-121.960472,39.736396],[-121.963796,39.741398],[-121.969222,39.739595],[-121.9693,39.733839],[-121.972413,39.731582],[-121.983846,39.735413],[-121.989226,39.743617],[-121.998114,39.752403],[-122.008738,39.759233],[-122.016604,39.761423],[-122.02456,39.767942],[-122.032635,39.779386],[-122.026468,39.786331],[-122.023828,39.797674],[-122.026498,39.800137],[-122.036597,39.797978],[-122.040126,39.792748],[-122.046471,39.797648]],[[-122.046471,39.797648],[-122.049954,39.803322],[-122.054275,39.804148],[-122.06393,39.810634],[-122.064571,39.8146],[-122.059111,39.819112],[-122.057308,39.828709],[-122.06322,39.832173],[-122.069431,39.84053],[-122.066943,39.844619],[-122.059209,39.849494],[-122.056486,39.854073],[-122.055693,39.863973],[-122.048911,39.869677],[-122.040789,39.879899],[-122.044865,39.883771],[-121.884518,39.883208],[-121.873712,39.883994],[-121.804041,39.884344],[-121.806104,39.888217],[-121.777103,39.888519],[-121.766505,39.897596],[-121.75314,39.90429],[-121.750634,39.906805],[-121.74915,39.926897],[-121.746251,39.938532],[-121.735828,39.953516],[-121.728711,39.957291],[-121.724966,39.96763],[-121.714904,39.97143],[-121.706004,39.978105],[-121.701938,39.984364],[-121.646032,39.982527],[-121.645849,39.997058],[-121.63544,39.996822],[-121.636174,40.02581],[-121.62607,40.0256],[-121.626086,40.039496],[-121.617809,40.039416],[-121.617289,40.047061],[-121.608729,40.046746],[-121.608641,40.055083],[-121.598558,40.055086],[-121.595647,40.057714],[-121.595802,40.093458],[-121.586141,40.093295],[-121.586407,40.100522],[-121.510559,40.100515],[-121.510551,40.107979],[-121.490866,40.108044],[-121.490858,40.115286],[-121.48097,40.115087],[-121.480954,40.122366],[-121.452898,40.122125],[-121.452727,40.129735],[-121.442869,40.129647],[-121.442836,40.1487],[-121.436886,40.151905]],[[-120.019951,38.433521],[-120.029923,38.424682],[-120.040563,38.425927],[-120.049032,38.419369],[-120.067903,38.415493],[-120.069737,38.413481],[-120.080846,38.410103],[-120.087914,38.403381],[-120.108203,38.402061],[-120.121633,38.399479],[-120.128842,38.395751],[-120.134916,38.396529],[-120.153081,38.386944],[-120.158543,38.385295],[-120.161216,38.380903],[-120.166766,38.379758],[-120.176177,38.374014],[-120.180939,38.368088],[-120.184797,38.358822],[-120.189877,38.35596],[-120.205161,38.329646],[-120.211079,38.324564],[-120.222659,38.319821],[-120.228749,38.314394],[-120.231556,38.307461],[-120.237268,38.301554],[-120.237089,38.298466],[-120.251872,38.287022],[-120.256054,38.286135],[-120.260479,38.278064],[-120.271009,38.270281],[-120.273992,38.264374],[-120.272432,38.259775],[-120.275914,38.258817],[-120.286142,38.249761],[-120.290357,38.243885],[-120.29124,38.234003],[-120.301977,38.229436],[-120.307579,38.224431],[-120.317253,38.207256],[-120.326367,38.195938],[-120.330309,38.195162],[-120.335534,38.184962],[-120.339651,38.183636],[-120.340527,38.171947],[-120.350497,38.169823],[-120.353572,38.163784],[-120.360324,38.160354],[-120.357544,38.153879],[-120.368815,38.152234],[-120.376203,38.142649],[-120.371054,38.139663],[-120.378666,38.134826],[-120.378783,38.129769],[-120.384026,38.125652],[-120.387209,38.11602],[-120.395867,38.109889],[-120.40837,38.103905],[-120.410514,38.099934],[-120.410596,38.087877],[-120.415322,38.081106],[-120.418987,38.080485],[-120.424371,38.0732],[-120.430819,38.073389],[-120.431043,38.061264],[-120.442529,38.058741],[-120.443445,38.051655],[-120.453941,38.041347],[-120.462133,38.022375],[-120.46884,38.019648],[-120.469678,38.016448],[-120.463232,38.012775],[-120.46503,38.009591],[-120.47378,38.012441],[-120.483679,38.012106],[-120.486887,38.009467],[-120.492774,38.011129],[-120.499822,38.007937],[-120.499817,37.995437],[-120.504516,37.991144],[-120.509195,37.991508],[-120.514006,37.996632],[-120.509692,37.99816],[-120.511091,38.002585],[-120.516178,38.004133],[-120.521653,37.99516],[-120.534339,37.991556],[-120.528116,37.982239],[-120.541149,37.978475],[-120.540937,37.974332],[-120.53007,37.976367],[-120.524767,37.968238],[-120.517597,37.965308],[-120.513353,37.957945],[-120.516745,37.951973],[-120.535242,37.944404],[-120.539443,37.937387],[-120.537616,37.926862],[-120.542643,37.920178],[-120.551108,37.921676],[-120.555155,37.916831],[-120.56244,37.913794],[-120.564364,37.903049],[-120.572982,37.894135],[-120.581286,37.896019],[-120.587525,37.895223],[-120.596681,37.888144],[-120.596298,37.883359],[-120.609031,37.872715],[-120.622714,37.86747],[-120.633786,37.860608],[-120.637967,37.852377],[-120.637635,37.848232],[-120.643692,37.844055],[-120.643442,37.840477],[-120.64865,37.837561],[-120.652673,37.831422]],[[-120.652673,37.831422],[-120.659938,37.838228],[-120.719379,37.890304],[-120.728675,37.897671],[-120.744624,37.912582],[-120.752695,37.923334],[-120.783996,37.950961],[-120.788998,37.954773],[-120.832781,37.99384],[-120.85251,38.009344],[-120.876047,38.028894],[-120.918681,38.070756],[-120.926449,38.077421]],[[-120.926449,38.077421],[-120.93885,38.088321],[-120.975206,38.177886],[-120.995497,38.225405]],[[-121.835488,38.924481],[-121.91512,38.925349],[-122.061124,38.925861],[-122.093042,38.925651],[-122.207772,38.925401],[-122.247341,38.923897],[-122.340172,38.924246]],[[-122.739062,39.383266],[-122.704182,39.382946],[-122.674376,39.384677],[-122.548908,39.385053],[-122.507523,39.384063],[-122.417767,39.383975],[-122.262988,39.384628],[-122.192334,39.385257],[-122.136006,39.385494],[-122.136161,39.414499],[-122.009019,39.413568],[-122.006369,39.405265],[-122.00374,39.403482],[-122.003911,39.396898],[-122.007408,39.392291],[-122.009735,39.383864],[-121.890013,39.383864]],[[-121.862462,38.06603],[-121.853639,38.064776],[-121.846802,38.059955],[-121.84204,38.052565],[-121.837936,38.038944],[-121.832122,38.031101],[-121.815673,38.021038],[-121.80127,38.021622],[-121.788773,38.018421],[-121.777485,38.018917],[-121.765127,38.023195],[-121.744481,38.025087],[-121.732565,38.02902],[-121.725925,38.03364],[-121.707562,38.040852],[-121.699765,38.04522],[-121.691665,38.05352],[-121.683365,38.059419],[-121.679765,38.065119],[-121.680249,38.076648],[-121.681865,38.082019],[-121.679265,38.089319],[-121.673065,38.093518],[-121.661865,38.095618],[-121.638088,38.086131],[-121.632595,38.088611],[-121.628353,38.097918],[-121.619756,38.099447],[-121.604923,38.099878],[-121.585283,38.096366],[-121.580022,38.094414]],[[-121.580022,38.094414],[-121.57776,38.089466],[-121.576749,38.078193],[-121.572923,38.074239],[-121.582203,38.068423],[-121.583879,38.059897],[-121.582305,38.051436],[-121.585078,38.040267],[-121.583578,38.034381],[-121.577948,38.033817],[-121.580786,38.038789],[-121.574151,38.042794],[-121.570819,38.038003],[-121.571809,38.031376],[-121.564226,38.029699],[-121.563304,38.023913],[-121.558321,38.015732],[-121.566434,38.018071],[-121.572789,38.01691],[-121.566965,38.013528],[-121.56815,38.011383],[-121.577879,38.01082],[-121.578711,38.004255],[-121.569096,38.002789],[-121.57056,37.999025],[-121.578945,37.99855],[-121.576084,37.994855],[-121.581025,37.989525],[-121.58236,37.983461],[-121.573583,37.980309],[-121.579943,37.976113],[-121.574823,37.973025],[-121.573713,37.966434],[-121.565138,37.959849],[-121.565586,37.957785],[-121.574501,37.956939],[-121.573589,37.953756],[-121.563331,37.954084],[-121.568515,37.949171],[-121.563406,37.944273],[-121.561455,37.935885],[-121.557274,37.932247],[-121.558899,37.927926],[-121.556419,37.923302],[-121.565114,37.919173],[-121.563212,37.912217],[-121.564769,37.909009],[-121.572626,37.904665],[-121.565904,37.897672],[-121.567679,37.892431],[-121.575532,37.88898],[-121.57387,37.883395],[-121.579425,37.8723],[-121.573389,37.865751],[-121.579503,37.861072],[-121.57865,37.858041],[-121.571794,37.860483],[-121.565903,37.857863],[-121.56261,37.853354],[-121.561813,37.857135],[-121.555255,37.858007],[-121.552836,37.861182],[-121.547496,37.855226],[-121.541117,37.857745],[-121.540035,37.848842],[-121.534247,37.849891],[-121.540272,37.841494],[-121.537917,37.838694],[-121.542413,37.833398],[-121.549459,37.833569],[-121.553311,37.818825],[-121.556936,37.817218]],[[-122.315445,37.896778],[-122.323131,37.894555],[-122.326568,37.896617],[-122.32373,37.905845],[-122.33453,37.908791],[-122.35711,37.908791],[-122.362346,37.904209],[-122.378709,37.905191],[-122.389181,37.9101],[-122.39049,37.922535],[-122.395071,37.927117],[-122.401289,37.928426],[-122.413725,37.937262],[-122.430087,37.963115],[-122.42976,37.965405],[-122.415361,37.963115],[-122.408383,37.957544],[-122.399832,37.956009],[-122.367582,37.978168],[-122.361905,37.989991],[-122.366928,37.998458],[-122.368891,38.007948],[-122.367909,38.01253],[-122.363655,38.014166],[-122.359493,38.009941],[-122.340093,38.003694],[-122.331912,38.00533],[-122.321112,38.012857],[-122.315549,38.013511],[-122.300823,38.010893],[-122.283478,38.022674],[-122.262861,38.0446],[-122.262861,38.051473],[-122.266669,38.06007]],[[-123.517906,42.000883],[-123.519854,41.995164],[-123.534261,41.990933],[-123.540955,41.984891],[-123.537819,41.982404],[-123.535754,41.97412],[-123.536933,41.969102],[-123.533827,41.965407],[-123.533251,41.955169],[-123.538813,41.949503],[-123.548845,41.933328],[-123.554389,41.930052],[-123.553739,41.914123],[-123.559492,41.905968],[-123.565442,41.903141],[-123.59363,41.90589],[-123.599452,41.897805],[-123.597377,41.894173],[-123.604805,41.888095],[-123.605626,41.881121],[-123.613869,41.880885],[-123.62172,41.884738],[-123.624463,41.888431],[-123.635645,41.887518],[-123.642191,41.889742],[-123.645825,41.883095],[-123.652197,41.878696],[-123.646689,41.877029],[-123.651395,41.872909],[-123.652276,41.865537],[-123.649476,41.86032],[-123.661534,41.856473],[-123.662463,41.852417],[-123.671339,41.844985],[-123.67078,41.835432],[-123.682913,41.837136],[-123.695006,41.834137],[-123.703768,41.829117],[-123.703042,41.819749],[-123.695079,41.816348],[-123.689957,41.80316],[-123.684878,41.799939],[-123.68072,41.800831],[-123.67211,41.79599],[-123.676262,41.789489],[-123.673881,41.786317],[-123.684106,41.784527],[-123.68834,41.781221],[-123.683421,41.76963],[-123.682148,41.752673],[-123.678655,41.74627],[-123.678304,41.738543],[-123.672416,41.733749],[-123.666108,41.732156],[-123.659871,41.720199],[-123.660205,41.714055],[-123.669168,41.706479],[-123.670117,41.699343],[-123.662843,41.693468],[-123.669727,41.689917],[-123.675068,41.682112],[-123.680011,41.680186],[-123.689583,41.669434],[-123.68702,41.648214],[-123.679926,41.637018],[-123.680444,41.633957],[-123.69664,41.633863],[-123.696556,41.628236],[-123.706124,41.620944],[-123.711031,41.615019],[-123.711427,41.608918],[-123.716106,41.606547],[-123.719089,41.595258],[-123.715675,41.591312],[-123.706535,41.595691],[-123.698748,41.595597],[-123.697587,41.590944],[-123.686958,41.594811],[-123.682203,41.594561],[-123.681345,41.586741],[-123.688238,41.584791],[-123.688578,41.580386],[-123.681527,41.571964],[-123.687588,41.566985],[-123.688647,41.561805],[-123.693889,41.556993],[-123.692566,41.553049],[-123.682949,41.543205],[-123.670034,41.544086],[-123.668762,41.542139],[-123.658362,41.539103],[-123.652796,41.539391],[-123.648046,41.535024],[-123.646807,41.528888],[-123.642741,41.522504],[-123.646298,41.514559],[-123.640944,41.507677],[-123.63879,41.496516],[-123.63444,41.485398],[-123.637771,41.482382],[-123.630567,41.477123],[-123.632408,41.47346],[-123.621447,41.463905],[-123.61179,41.462127],[-123.615922,41.452961],[-123.612395,41.448954],[-123.618174,41.44297],[-123.622009,41.432635],[-123.633035,41.428308],[-123.637792,41.428096],[-123.64856,41.420823],[-123.642015,41.415658],[-123.638913,41.407366],[-123.641648,41.400188],[-123.656005,41.395307],[-123.655755,41.387907],[-123.661363,41.38209]],[[-123.661363,41.38209],[-123.746072,41.381686],[-123.770239,41.380776],[-123.770551,41.464193],[-123.885691,41.463851],[-123.885695,41.465844],[-123.99535,41.465306],[-124.01324,41.464926],[-124.065521,41.464739]],[[-124.065521,41.464739],[-124.066057,41.470258],[-124.075917,41.501757],[-124.081427,41.511228],[-124.081988,41.547762],[-124.092404,41.553615],[-124.101123,41.569192],[-124.101403,41.578524],[-124.097385,41.585251],[-124.1051,41.594315],[-124.100961,41.602499],[-124.114413,41.616768],[-124.116037,41.628849],[-124.120225,41.640354],[-124.135552,41.657307],[-124.139354,41.671652],[-124.138373,41.678881],[-124.143479,41.709284],[-124.147412,41.717955],[-124.154246,41.728801],[-124.164716,41.740126],[-124.17739,41.745756],[-124.19104,41.736079],[-124.194953,41.736778],[-124.203843,41.747035],[-124.23972,41.7708],[-124.248704,41.771459],[-124.255994,41.783014],[-124.245027,41.7923],[-124.230678,41.818681],[-124.219592,41.846432],[-124.208439,41.888192],[-124.203402,41.940964],[-124.204948,41.983441],[-124.211605,41.99846],[-124.126194,41.996992],[-124.086661,41.996869],[-124.001188,41.996146],[-123.834208,41.996116],[-123.813992,41.995096],[-123.789295,41.996111],[-123.728156,41.997007],[-123.656998,41.995137],[-123.624554,41.999837],[-123.55256,42.000246],[-123.517906,42.000883]],[[-121.027507,38.508292],[-121.04137,38.540745],[-121.070467,38.607592],[-121.0793,38.632857],[-121.085428,38.647831],[-121.118617,38.717118],[-121.123964,38.710274],[-121.132924,38.70546],[-121.141009,38.71198]],[[-121.141009,38.71198],[-121.134507,38.712032],[-121.133195,38.716515],[-121.133295,38.731455],[-121.12835,38.733578],[-121.117479,38.757793],[-121.119259,38.765794],[-121.117217,38.770488],[-121.111668,38.773795],[-121.102999,38.785548],[-121.102238,38.796204],[-121.097757,38.807328],[-121.100844,38.815392],[-121.093435,38.813847],[-121.084482,38.816442],[-121.083055,38.823054],[-121.088721,38.827101],[-121.085791,38.83445],[-121.081931,38.835179],[-121.073575,38.842604],[-121.058408,38.847129],[-121.057579,38.85127],[-121.061806,38.859916],[-121.054431,38.865147],[-121.053263,38.868347],[-121.056928,38.877307],[-121.061984,38.881499],[-121.058592,38.884315],[-121.044191,38.890618],[-121.053407,38.899502],[-121.043958,38.906981],[-121.040511,38.915538],[-121.033783,38.912816],[-121.018928,38.918239],[-121.01235,38.916646],[-121.005126,38.920206],[-121.001052,38.917835],[-120.991156,38.923628],[-120.991968,38.927225],[-120.977266,38.92925],[-120.970423,38.933088],[-120.965994,38.932581],[-120.958052,38.939005],[-120.95158,38.938846],[-120.9434,38.935671],[-120.938301,38.935826],[-120.938202,38.95664],[-120.940281,38.962339],[-120.935291,38.963962],[-120.926304,38.96182],[-120.913874,38.955207],[-120.899989,38.953348],[-120.890502,38.959562],[-120.858903,38.952256],[-120.857716,38.956641],[-120.852221,38.959945],[-120.855532,38.96682],[-120.849386,38.976809],[-120.840627,38.975446],[-120.838837,38.971786],[-120.834163,38.971866],[-120.83262,38.978018],[-120.829383,38.980385],[-120.829711,38.987343],[-120.824724,38.992747],[-120.81549,38.994778],[-120.812295,39.000133],[-120.801916,39.001103],[-120.798103,38.996051],[-120.786791,38.999622],[-120.78025,39.00419],[-120.763857,39.009583],[-120.767107,39.005005],[-120.757622,39.007661],[-120.752091,39.005531],[-120.74608,39.010256],[-120.748491,39.005219],[-120.741641,39.001431],[-120.735577,39.000681],[-120.730174,39.003958],[-120.723171,38.999327],[-120.722341,38.993473],[-120.716286,38.986671],[-120.704866,38.981345],[-120.692138,38.985878],[-120.688911,38.989671],[-120.684939,38.989372],[-120.685153,38.98362],[-120.68089,38.977886],[-120.683367,38.97465],[-120.683455,38.967282],[-120.674696,38.962679],[-120.672748,38.958593],[-120.664471,38.95713],[-120.655245,38.953105],[-120.651042,38.948869],[-120.642458,38.944404],[-120.635381,38.943403],[-120.631091,38.946291],[-120.622289,38.943112],[-120.612809,38.943091],[-120.606943,38.935246],[-120.594381,38.936104],[-120.593459,38.932127],[-120.58731,38.93144],[-120.587033,38.924282],[-120.58054,38.920225],[-120.578858,38.916592],[-120.564258,38.913644],[-120.556321,38.915164],[-120.55215,38.92059],[-120.546095,38.920697],[-120.54537,38.926668],[-120.534493,38.926015],[-120.527345,38.931583],[-120.522848,38.930333],[-120.512346,38.931191],[-120.504841,38.935219],[-120.5029,38.940807],[-120.491808,38.944686],[-120.491193,38.950654],[-120.487686,38.952193],[-120.486122,38.958837],[-120.479695,38.959789],[-120.470781,38.965649],[-120.468504,38.971393],[-120.464574,38.973892],[-120.459638,38.984999],[-120.4515,38.987937],[-120.453829,38.994866],[-120.44968,39.00525],[-120.445381,39.010066],[-120.445213,39.017595],[-120.441983,39.023283],[-120.43524,39.028397],[-120.412248,39.026465],[-120.328122,39.022433],[-120.309722,39.023433],[-120.259369,39.02346],[-120.259073,39.024743],[-120.24041,39.023668],[-120.240157,39.030889],[-120.184098,39.031014],[-120.18356,39.038372],[-120.165028,39.038485],[-120.164964,39.045787],[-120.152976,39.045807],[-120.153021,39.060329],[-120.143598,39.060198],[-120.143663,39.067285],[-120.002461,39.067489]],[[-120.002461,39.067489],[-120.001014,38.999574],[-119.904315,38.933324]],[[-119.573194,36.488835],[-119.582025,36.482029],[-119.66629,36.41896],[-119.672833,36.427311],[-119.671493,36.431074],[-119.681318,36.429648],[-119.686941,36.425819],[-119.698554,36.424681],[-119.705046,36.427173],[-119.711706,36.419644],[-119.721435,36.417939],[-119.731957,36.419928],[-119.733529,36.416765],[-119.739332,36.417828],[-119.747117,36.416387],[-119.752391,36.40904],[-119.753114,36.401894],[-119.887145,36.402027],[-119.959227,36.400975],[-119.959996,36.379132],[-119.958902,36.299129],[-119.959079,36.182286],[-120.000969,36.14951],[-120.098157,36.074646],[-120.16594,36.022912],[-120.198507,35.997751],[-120.315068,35.907186]],[[-120.315068,35.907186],[-120.324267,35.908838],[-120.32599,35.913125],[-120.329914,35.91351],[-120.336369,35.923108],[-120.335067,35.928414],[-120.335963,35.937203],[-120.345829,35.944852],[-120.349644,35.944063],[-120.356626,35.948412],[-120.35753,35.955549],[-120.362492,35.959409],[-120.360402,35.964418],[-120.388868,35.969259],[-120.394005,35.967873],[-120.408543,35.975962],[-120.422786,35.973749],[-120.433053,35.968933],[-120.43609,35.970741],[-120.439662,35.979577],[-120.449087,35.985112],[-120.4497,35.988432],[-120.461074,35.993703],[-120.468609,35.994347],[-120.477391,36.000824],[-120.48045,36.005928],[-120.478698,36.010183],[-120.486216,36.011178],[-120.488082,36.014637],[-120.502257,36.022215],[-120.510445,36.021999],[-120.513194,36.025676],[-120.519411,36.027188],[-120.520009,36.020885],[-120.529796,36.024281],[-120.527202,36.035838],[-120.535549,36.035095],[-120.540409,36.036664],[-120.545408,36.046123],[-120.551779,36.049521],[-120.559207,36.05002],[-120.566649,36.052932],[-120.57648,36.060713],[-120.581324,36.062877],[-120.592218,36.0716],[-120.596088,36.078219],[-120.593173,36.08853],[-120.589796,36.089605],[-120.600607,36.101587],[-120.608019,36.102697],[-120.612362,36.099053],[-120.612265,36.095224],[-120.62381,36.097963],[-120.625998,36.097079],[-120.633602,36.103325],[-120.641895,36.101272],[-120.648784,36.10799],[-120.645423,36.116199],[-120.653203,36.118815],[-120.652548,36.124961],[-120.655726,36.131781],[-120.664845,36.140346],[-120.664705,36.147273],[-120.667985,36.160574],[-120.671945,36.164287],[-120.664248,36.165651],[-120.663057,36.171158],[-120.654621,36.167721],[-120.649049,36.169327],[-120.652355,36.172856],[-120.648852,36.179423],[-120.644636,36.179362],[-120.638147,36.197539],[-120.632754,36.198717],[-120.62691,36.203227],[-120.629391,36.207417],[-120.638819,36.214976],[-120.641329,36.220081],[-120.649265,36.223952],[-120.651408,36.230247],[-120.656408,36.233521],[-120.666916,36.235997],[-120.671972,36.242682],[-120.679741,36.246665],[-120.68177,36.251382],[-120.672955,36.257679],[-120.678582,36.267319]],[[-120.678582,36.267319],[-120.674246,36.272734],[-120.676212,36.275477],[-120.672622,36.280489],[-120.682885,36.286796],[-120.68045,36.290681],[-120.682723,36.294441],[-120.675564,36.3029],[-120.670084,36.305773],[-120.666391,36.311446],[-120.658806,36.316235],[-120.64578,36.317268],[-120.64267,36.319014],[-120.630009,36.316908],[-120.612032,36.321624],[-120.612142,36.324478],[-120.605412,36.324326],[-120.596562,36.328488],[-120.597422,36.415154],[-120.597155,36.488235],[-120.603706,36.488242],[-120.749436,36.605294],[-120.751011,36.606164],[-120.872952,36.703329],[-120.918731,36.740381]],[[-120.918731,36.740381],[-120.70701,36.911843],[-120.65595,36.952832],[-120.590566,36.952641],[-120.590483,36.981642],[-120.585995,36.985318],[-120.585359,36.991176],[-120.590926,36.992708],[-120.593564,36.997881],[-120.598564,36.99863],[-120.541696,37.044505]],[[-120.541696,37.044505],[-120.537124,37.039836],[-120.537815,37.034285],[-120.545536,37.027582],[-120.53782,37.02385],[-120.537659,37.019912],[-120.530713,37.020184],[-120.529768,37.012549],[-120.523264,37.014068],[-120.520181,37.011279],[-120.513791,37.010962],[-120.508965,37.007623],[-120.508544,37.000775],[-120.504029,37.000968],[-120.501183,36.996745],[-120.499519,36.981966],[-120.494765,36.975794],[-120.484139,36.972399],[-120.48872,36.967752],[-120.487829,36.964475],[-120.480744,36.959244],[-120.477724,36.953231],[-120.479038,36.94882],[-120.475166,36.939252],[-120.468011,36.937472],[-120.462256,36.927547],[-120.457226,36.923874],[-120.462206,36.917172],[-120.453393,36.914668],[-120.450341,36.911172],[-120.455996,36.905384],[-120.463362,36.905646],[-120.460924,36.902674],[-120.466752,36.892193],[-120.464319,36.886612],[-120.456542,36.883838],[-120.45356,36.880201],[-120.457744,36.878281],[-120.457384,36.873033],[-120.450693,36.871498],[-120.450971,36.867501],[-120.456113,36.863277],[-120.448977,36.860329],[-120.446125,36.856151],[-120.43853,36.854489],[-120.43995,36.849894],[-120.434436,36.850915],[-120.42627,36.839902],[-120.422187,36.840139],[-120.417095,36.835626],[-120.410444,36.840005],[-120.40071,36.82241],[-120.38903,36.824441],[-120.379098,36.817166],[-120.375596,36.808342],[-120.369612,36.810355],[-120.368284,36.806652],[-120.37413,36.80027],[-120.369823,36.795967],[-120.37293,36.788944],[-120.369052,36.784805],[-120.358092,36.787185],[-120.346523,36.784559],[-120.344825,36.787835],[-120.351076,36.796506],[-120.346623,36.797655],[-120.342987,36.79093],[-120.334194,36.790988],[-120.335563,36.78417],[-120.332246,36.783211],[-120.324216,36.786304],[-120.321722,36.777697],[-120.314538,36.77917],[-120.313824,36.781855],[-120.300357,36.777633],[-120.300159,36.774156],[-120.305294,36.773615],[-120.304078,36.769638],[-120.297692,36.772284],[-120.292119,36.770816],[-120.294166,36.766816],[-120.290594,36.763047],[-120.287949,36.764823],[-120.288259,36.772596],[-120.281221,36.772149],[-120.280883,36.766742],[-120.272678,36.77406],[-120.270324,36.771622],[-120.260551,36.772264],[-120.254798,36.770038],[-120.249211,36.775126],[-120.245685,36.771331],[-120.234005,36.768298],[-120.229179,36.769687],[-120.233502,36.778668],[-120.230713,36.782636],[-120.222712,36.782755],[-120.21749,36.788666],[-120.202218,36.790005],[-120.20181,36.782948],[-120.18883,36.776408],[-120.181526,36.78328],[-120.181966,36.788073],[-120.174455,36.796079],[-120.172724,36.802871],[-120.168689,36.803461],[-120.160034,36.797992],[-120.155336,36.798816],[-120.136572,36.809296],[-120.127521,36.812037],[-120.114329,36.81404],[-120.104262,36.813351],[-120.09774,36.815512],[-120.091644,36.821187],[-120.079458,36.825345],[-120.072699,36.819218],[-120.0661,36.81927],[-120.057776,36.82286],[-120.050858,36.821857],[-120.042292,36.815497],[-120.027775,36.814505],[-120.022647,36.817831],[-120.020174,36.824954],[-120.013334,36.828228],[-119.998055,36.827493],[-119.99075,36.830565],[-119.989929,36.838233],[-119.984035,36.840892],[-119.979717,36.839732],[-119.977025,36.835048],[-119.967666,36.832305],[-119.9605,36.836058],[-119.943507,36.83403],[-119.934547,36.838023],[-119.932593,36.844464],[-119.927777,36.848458],[-119.919523,36.845072],[-119.909098,36.846199],[-119.902895,36.851804],[-119.890304,36.851534],[-119.884889,36.858549],[-119.876484,36.854847],[-119.866335,36.847998],[-119.861411,36.85546],[-119.85499,36.851175],[-119.851058,36.852879],[-119.847464,36.860394],[-119.841549,36.861175],[-119.8368,36.853724],[-119.823421,36.848333],[-119.814034,36.850104],[-119.809639,36.862569],[-119.802176,36.866689],[-119.796521,36.875418],[-119.78819,36.876607],[-119.78529,36.885753],[-119.789655,36.895349],[-119.775588,36.909275],[-119.772737,36.918599],[-119.758513,36.920339],[-119.750391,36.9278],[-119.752532,36.935223],[-119.745652,36.938998],[-119.742119,36.943537],[-119.733767,36.946441],[-119.735973,36.952535],[-119.742854,36.953981],[-119.7405,36.970212],[-119.731634,36.979412],[-119.713182,36.991638],[-119.700744,37.003328],[-119.698075,37.008748],[-119.690779,37.011987],[-119.677362,37.009108],[-119.670918,37.00926],[-119.658611,37.01333],[-119.657114,37.018903],[-119.659377,37.038938],[-119.651604,37.042961],[-119.639349,37.043287],[-119.629033,37.034619],[-119.63618,37.023696],[-119.632172,37.020983],[-119.621116,37.026605],[-119.610361,37.045668],[-119.613373,37.050778],[-119.60967,37.064692],[-119.604908,37.071016],[-119.594547,37.070187],[-119.589431,37.066636],[-119.568416,37.063569],[-119.562979,37.064095],[-119.560628,37.070036],[-119.56321,37.073752],[-119.559002,37.088058],[-119.55425,37.092008],[-119.542292,37.095417],[-119.539418,37.098976],[-119.538075,37.106789],[-119.548754,37.116756],[-119.556196,37.115477],[-119.567234,37.115946],[-119.568973,37.118342],[-119.563401,37.128284],[-119.563784,37.13832],[-119.560839,37.142901],[-119.552157,37.145219],[-119.547893,37.143611],[-119.538786,37.134391],[-119.533125,37.13297],[-119.527619,37.128692],[-119.523541,37.129302],[-119.517472,37.146772],[-119.506733,37.150554],[-119.4901,37.13858],[-119.489121,37.134595],[-119.493214,37.124436],[-119.491315,37.119712],[-119.481243,37.109485],[-119.471217,37.110519],[-119.466232,37.119734],[-119.468647,37.128383],[-119.461662,37.145166],[-119.44272,37.144051],[-119.434875,37.146954],[-119.43306,37.161516],[-119.425805,37.164297],[-119.418183,37.164062],[-119.408655,37.161218],[-119.399787,37.149835],[-119.386521,37.14953],[-119.384975,37.153313],[-119.375029,37.157875],[-119.37521,37.164076],[-119.364991,37.165744],[-119.360678,37.169613],[-119.360565,37.180539],[-119.354111,37.185705],[-119.343107,37.189074],[-119.337197,37.200458],[-119.330573,37.205791],[-119.330739,37.215213],[-119.337575,37.219896],[-119.334005,37.223455],[-119.331516,37.239815],[-119.323235,37.245006],[-119.322235,37.253794],[-119.324586,37.265466],[-119.327441,37.270838],[-119.332027,37.273588],[-119.330855,37.283024],[-119.327055,37.292687],[-119.330878,37.30216],[-119.334042,37.30393],[-119.335266,37.311761],[-119.324521,37.320712],[-119.318563,37.321156],[-119.315576,37.325802],[-119.324546,37.332511],[-119.324413,37.33706],[-119.312226,37.339706],[-119.315371,37.345814],[-119.312186,37.352725],[-119.286334,37.375202],[-119.022363,37.585737]],[[-119.022363,37.585737],[-119.006362,37.576137],[-119.002262,37.571137],[-118.990561,37.567137],[-118.984861,37.567337],[-118.978561,37.561237],[-118.97696,37.556837],[-118.972461,37.559437],[-118.964061,37.558137],[-118.959761,37.563137],[-118.952661,37.565836],[-118.942661,37.562136],[-118.93896,37.554436],[-118.92966,37.548936],[-118.917158,37.550336],[-118.909759,37.539336],[-118.901159,37.531236],[-118.901859,37.526036],[-118.892559,37.526136],[-118.883658,37.520136],[-118.881658,37.510336],[-118.867458,37.507135],[-118.860758,37.501535],[-118.858494,37.494323],[-118.859717,37.491143],[-118.857223,37.479472],[-118.850474,37.475796],[-118.841901,37.480895],[-118.836021,37.482517],[-118.832795,37.480194],[-118.815526,37.487807],[-118.810284,37.486045],[-118.804274,37.488939],[-118.795839,37.488372],[-118.786046,37.478681],[-118.785053,37.473884],[-118.777891,37.469365],[-118.775014,37.463052]],[[-118.775014,37.463052],[-118.768489,37.456658],[-118.763287,37.456537],[-118.761886,37.448755],[-118.758922,37.44452],[-118.759581,37.435573],[-118.765095,37.42973],[-118.767506,37.42364],[-118.773039,37.424635],[-118.779757,37.421678],[-118.783558,37.413312],[-118.781811,37.408513],[-118.790031,37.394032],[-118.782646,37.382708],[-118.779547,37.38159],[-118.777513,37.375214],[-118.773329,37.374933],[-118.769735,37.368773],[-118.768611,37.359834],[-118.778235,37.35833],[-118.784206,37.352352],[-118.786736,37.34338],[-118.778764,37.334267],[-118.774354,37.334802],[-118.757855,37.32884],[-118.747233,37.32217],[-118.740026,37.315237],[-118.732965,37.317891],[-118.728754,37.323002],[-118.716016,37.328208],[-118.709648,37.321912],[-118.706227,37.314071],[-118.694883,37.301781],[-118.690245,37.294308],[-118.68522,37.290468],[-118.6821,37.280473],[-118.676493,37.275488],[-118.675541,37.271214],[-118.665167,37.261009],[-118.675347,37.248831],[-118.677995,37.248877],[-118.684611,37.242819],[-118.682249,37.233983],[-118.686424,37.227575],[-118.680788,37.222925],[-118.679102,37.214452],[-118.675568,37.213777],[-118.681349,37.204438],[-118.679723,37.201568],[-118.666755,37.190031],[-118.667138,37.182449],[-118.66424,37.178145],[-118.666912,37.17279],[-118.672282,37.168487],[-118.666501,37.161388],[-118.667187,37.15464],[-118.656704,37.14721],[-118.654593,37.141826],[-118.646527,37.140782],[-118.639905,37.137245],[-118.613672,37.143001],[-118.600117,37.136596],[-118.592661,37.138147],[-118.586051,37.124934],[-118.583087,37.122398],[-118.576307,37.123723],[-118.568569,37.122298],[-118.56841,37.115295],[-118.551008,37.113878],[-118.546195,37.115407],[-118.537956,37.113577],[-118.527136,37.104734],[-118.523756,37.099564],[-118.51186,37.092811],[-118.503103,37.095221],[-118.491733,37.086354],[-118.48658,37.077414],[-118.471143,37.072661],[-118.467332,37.066745],[-118.453111,37.067331],[-118.448956,37.069139],[-118.441286,37.063855],[-118.43605,37.057264],[-118.438233,37.05589],[-118.43497,37.049739],[-118.441729,37.045013],[-118.439764,37.040308],[-118.42276,37.025805],[-118.42311,37.016938],[-118.42798,37.011974],[-118.421111,37.007563],[-118.412248,36.998357],[-118.418933,36.994835],[-118.420133,36.989435],[-118.417133,36.985435],[-118.409133,36.980535],[-118.409533,36.975235],[-118.404433,36.972035],[-118.403333,36.959535],[-118.404733,36.957535],[-118.396632,36.957335],[-118.388432,36.945534],[-118.383032,36.934634],[-118.381532,36.925934],[-118.371032,36.908634],[-118.367432,36.907034],[-118.369832,36.900434],[-118.365031,36.890634],[-118.360831,36.887734],[-118.367131,36.881434],[-118.369863,36.870078],[-118.36616,36.8689],[-118.3664,36.863596],[-118.362647,36.861474],[-118.362169,36.844002],[-118.371494,36.836083],[-118.375931,36.834495],[-118.389758,36.834466],[-118.393686,36.8309],[-118.390122,36.819872],[-118.384681,36.815342],[-118.383877,36.810195],[-118.379585,36.808917],[-118.374225,36.800517],[-118.37279,36.794895],[-118.37683,36.785534],[-118.38023,36.782234],[-118.37603,36.778534],[-118.37643,36.772134],[-118.37203,36.767034],[-118.37473,36.764134],[-118.37173,36.761234],[-118.36933,36.750334],[-118.36213,36.747734],[-118.360586,36.744773]],[[-118.360586,36.744773],[-118.408182,36.744625],[-118.555487,36.744746],[-118.555031,36.739138],[-118.750915,36.739443],[-118.751033,36.739693],[-118.982441,36.741646],[-118.984779,36.657147],[-119.072072,36.65824],[-119.088295,36.657514],[-119.144136,36.658736],[-119.174791,36.658878],[-119.214393,36.659838],[-119.247889,36.661102],[-119.304625,36.660606],[-119.305102,36.573725],[-119.412931,36.57522],[-119.466322,36.575238],[-119.489911,36.556724],[-119.500966,36.54683],[-119.528571,36.525121],[-119.573194,36.488835]],[[-122.885352,39.580108],[-122.884497,39.610761],[-122.890413,39.622916],[-122.892676,39.708898],[-122.912876,39.708723],[-122.912516,39.748165],[-122.938413,39.748112],[-122.93743,39.754575],[-122.937654,39.798156]],[[-122.937654,39.798156],[-122.911748,39.798446],[-122.911794,39.799485],[-122.893347,39.799112],[-122.478638,39.799523],[-122.378663,39.79901],[-122.375089,39.799235],[-122.251099,39.799289],[-122.244147,39.798619],[-122.183495,39.797888],[-122.178272,39.797499],[-122.046471,39.797648]],[[-123.661363,41.38209],[-123.621355,41.382083],[-123.504292,41.382547],[-123.493634,41.377464],[-123.489411,41.37767],[-123.474085,41.366193],[-123.48251,41.35365],[-123.478462,41.34076],[-123.477958,41.328132],[-123.474001,41.326374],[-123.472265,41.321397],[-123.46344,41.31773],[-123.459592,41.310239],[-123.460335,41.303304],[-123.456883,41.300288],[-123.455475,41.292819],[-123.463241,41.286338],[-123.461649,41.282281],[-123.446812,41.276041],[-123.443821,41.273233],[-123.445071,41.268246],[-123.442051,41.260013],[-123.442776,41.249475],[-123.451489,41.242224],[-123.455356,41.236873],[-123.450899,41.231243],[-123.437619,41.226582],[-123.434238,41.22228],[-123.436582,41.217946],[-123.428399,41.204283],[-123.421711,41.198207],[-123.417095,41.197002],[-123.410706,41.181755],[-123.408291,41.179944]],[[-123.544458,40.001923],[-123.746256,40.001822],[-123.751136,40.002124],[-123.935473,40.001349],[-124.023938,40.001284]],[[-124.023938,40.001284],[-124.035904,40.013319],[-124.056408,40.024305],[-124.065069,40.024785],[-124.068908,40.021307],[-124.079983,40.029773],[-124.080709,40.06611],[-124.087086,40.078442],[-124.110549,40.103765],[-124.139952,40.11635],[-124.170767,40.124207],[-124.187874,40.130542],[-124.214895,40.160902],[-124.231095,40.171581],[-124.258405,40.184277],[-124.296497,40.208816],[-124.320912,40.226617],[-124.327691,40.23737],[-124.34307,40.243979],[-124.352715,40.250453],[-124.363414,40.260974],[-124.363634,40.276212],[-124.347853,40.314634],[-124.353124,40.331425],[-124.356595,40.335016],[-124.362796,40.350046],[-124.365357,40.374855],[-124.373599,40.392923],[-124.379082,40.398828],[-124.391496,40.407047],[-124.402623,40.422105],[-124.409591,40.438076],[-124.408601,40.443201],[-124.396642,40.462119],[-124.38494,40.48982],[-124.383224,40.499852],[-124.387023,40.504954],[-124.382816,40.519],[-124.379096,40.522865],[-124.363545,40.548698],[-124.329404,40.61643],[-124.315141,40.639526],[-124.312558,40.641333],[-124.289119,40.67963],[-124.248406,40.735166],[-124.228244,40.76939],[-124.201921,40.805111],[-124.176715,40.843618],[-124.158322,40.876069],[-124.137066,40.925732],[-124.118147,40.989263],[-124.112166,41.028168],[-124.125448,41.048504],[-124.138217,41.054342],[-124.151266,41.051101],[-124.153622,41.05355],[-124.154513,41.087159],[-124.160556,41.099011],[-124.159065,41.121957],[-124.165414,41.129822],[-124.163988,41.138675],[-124.158539,41.143021],[-124.149674,41.140845],[-124.1438,41.144686],[-124.122677,41.189726],[-124.106986,41.229678],[-124.106389,41.240682],[-124.092284,41.287695],[-124.079015,41.347135],[-124.072294,41.374844],[-124.063076,41.439579],[-124.065521,41.464739]],[[-116.106181,32.618641],[-116.105797,32.645405],[-116.105648,32.726494],[-116.103149,32.7265],[-116.103681,32.787115],[-116.103486,32.833918],[-116.102558,32.857759],[-116.103199,32.875055],[-116.10296,32.991391],[-116.103252,33.07467],[-116.08109,33.074833],[-116.080942,33.132189],[-116.081986,33.235047],[-116.085148,33.339216],[-116.085165,33.425932]],[[-116.085165,33.425932],[-115.998415,33.42654],[-115.874692,33.426481],[-115.77844,33.426981],[-115.729702,33.426973],[-115.682916,33.427397],[-115.568468,33.426885],[-115.467506,33.426992],[-115.467505,33.428402],[-115.342774,33.428068],[-115.251002,33.428217],[-115.101662,33.428274],[-115.063197,33.428103],[-115.057733,33.428629],[-114.929784,33.429904],[-114.830833,33.430094],[-114.830869,33.433708],[-114.766502,33.433741],[-114.627125,33.433554]],[[-114.627125,33.433554],[-114.62964,33.428138],[-114.643302,33.416745],[-114.64954,33.413633],[-114.658382,33.413036],[-114.673901,33.418299],[-114.687953,33.417944],[-114.695655,33.415127],[-114.701732,33.408388],[-114.710878,33.407254],[-114.720065,33.407891],[-114.725282,33.405048],[-114.722872,33.398779],[-114.713602,33.388257],[-114.708408,33.384147],[-114.707348,33.376628],[-114.699053,33.361148],[-114.698035,33.352442],[-114.700938,33.337014],[-114.705241,33.327767],[-114.710792,33.320607],[-114.723623,33.31211],[-114.731223,33.302434],[-114.723259,33.288079],[-114.717875,33.285157],[-114.694449,33.279786],[-114.684363,33.276025],[-114.677032,33.27017],[-114.672401,33.26047],[-114.674491,33.255597],[-114.688205,33.247966],[-114.689421,33.24525],[-114.682731,33.234918],[-114.674479,33.225504],[-114.673715,33.219245],[-114.678749,33.203448],[-114.67519,33.188179],[-114.675831,33.18152],[-114.680248,33.169717],[-114.678729,33.162948],[-114.687074,33.142196],[-114.696829,33.131209],[-114.703682,33.113769],[-114.707896,33.097432],[-114.706488,33.08816],[-114.68902,33.084036],[-114.68912,33.076122],[-114.686991,33.070969],[-114.674296,33.057171],[-114.675104,33.047532],[-114.670803,33.037984],[-114.662317,33.032671],[-114.657827,33.033825],[-114.649001,33.046763],[-114.64598,33.048903],[-114.639553,33.045291],[-114.628293,33.031052],[-114.618788,33.027202],[-114.601014,33.02541],[-114.589778,33.026228],[-114.584765,33.028231],[-114.578287,33.035375],[-114.571653,33.036624],[-114.553189,33.033974],[-114.538459,33.033422],[-114.52013,33.029984],[-114.511343,33.023455],[-114.50613,33.01701],[-114.499797,33.003905],[-114.495712,32.980076],[-114.492938,32.971781],[-114.490129,32.969885],[-114.481315,32.972064],[-114.476156,32.975168],[-114.469039,32.972295],[-114.46773,32.956323],[-114.470833,32.949333],[-114.478456,32.940555],[-114.48092,32.935252],[-114.47664,32.923628],[-114.464448,32.913129],[-114.463127,32.901884],[-114.465546,32.874809],[-114.468971,32.845155],[-114.494116,32.823288],[-114.510217,32.816417],[-114.515389,32.811439],[-114.522031,32.801675],[-114.528849,32.796307],[-114.531669,32.791185],[-114.532432,32.776923],[-114.528443,32.767276],[-114.526856,32.757094],[-114.539093,32.756949],[-114.539224,32.749812],[-114.564447,32.749554],[-114.564508,32.742298],[-114.581736,32.742321],[-114.581784,32.734946],[-114.612697,32.734516],[-114.615585,32.728446],[-114.65826,32.733799],[-114.667493,32.734226],[-114.688779,32.737675],[-114.701918,32.745548],[-114.714522,32.73039],[-114.719633,32.718763],[-115.000802,32.699676],[-115.465164,32.6671],[-116.04662,32.623353],[-116.106181,32.618641]],[[-117.632996,35.797251],[-117.849832,35.798051],[-117.924459,35.798149],[-117.92312,35.786812],[-117.938386,35.786765],[-118.000908,35.789488],[-118.008043,35.789161]],[[-118.008043,35.789161],[-118.009376,35.795311],[-118.007377,35.798841],[-118.01048,35.804386],[-118.007479,35.810002],[-118.007727,35.817083],[-118.000461,35.82028],[-117.998887,35.823762],[-118.006195,35.829037],[-118.002913,35.84129],[-118.005435,35.843274],[-118.004784,35.851265],[-118.00654,35.85484],[-118.005489,35.862699],[-117.998258,35.868782],[-117.993657,35.869611],[-117.989548,35.865661],[-117.980761,35.867515],[-117.982871,35.874947],[-117.988802,35.879769],[-117.989012,35.884116],[-117.984692,35.887721],[-117.982473,35.895796],[-117.987074,35.899247],[-117.985497,35.905813],[-117.989015,35.907898],[-117.990046,35.915919],[-117.983287,35.926563],[-117.985382,35.934144],[-117.991944,35.943771],[-117.998596,35.946272],[-118.006882,35.946483],[-118.011072,35.954601],[-118.016791,35.954551],[-118.01824,35.960977],[-118.012433,35.969724],[-118.014567,35.972891],[-118.010095,35.977617],[-118.004025,35.977826],[-118.003577,35.983718],[-118.006235,35.989757],[-118.010672,35.991744],[-118.012077,35.998305],[-118.019011,36.003344],[-118.033611,36.008944],[-118.037612,36.029743],[-118.041412,36.029844],[-118.039512,36.034243],[-118.046312,36.042943],[-118.042712,36.048543],[-118.051713,36.059543],[-118.051213,36.073443],[-118.049813,36.076742],[-118.052813,36.085642],[-118.057613,36.091642],[-118.063113,36.089242],[-118.067313,36.093442],[-118.066214,36.103942],[-118.068014,36.109842],[-118.064914,36.110342],[-118.068314,36.125541],[-118.071614,36.129241],[-118.073614,36.139041],[-118.071514,36.143341],[-118.060414,36.149741],[-118.059314,36.158741],[-118.062614,36.16204],[-118.059514,36.16544],[-118.062015,36.17424],[-118.070015,36.17864],[-118.073715,36.18944],[-118.085915,36.19754],[-118.090715,36.19734],[-118.094616,36.204939],[-118.101916,36.208839],[-118.106916,36.216039],[-118.109216,36.225539],[-118.105116,36.233139],[-118.112216,36.240039],[-118.114416,36.247838],[-118.119366,36.255561],[-118.117385,36.271165],[-118.121969,36.277699],[-118.127147,36.279656],[-118.12502,36.286744],[-118.127008,36.300223],[-118.121117,36.301138],[-118.121617,36.306837],[-118.114577,36.306984],[-118.110417,36.309837],[-118.114164,36.319261],[-118.107553,36.325607],[-118.097691,36.331099],[-118.101817,36.339337],[-118.100317,36.346137],[-118.105418,36.348237],[-118.120818,36.350237],[-118.131118,36.370736],[-118.141018,36.371636],[-118.144118,36.377036],[-118.153118,36.379536],[-118.156118,36.387336],[-118.162919,36.389436],[-118.160019,36.393836],[-118.146219,36.398636],[-118.140319,36.403536],[-118.137419,36.415336],[-118.141219,36.420936],[-118.154219,36.427136],[-118.156519,36.432436],[-118.174819,36.426736],[-118.194219,36.427236],[-118.203719,36.431236],[-118.209819,36.430336],[-118.21442,36.434336],[-118.20962,36.442136],[-118.21442,36.448736],[-118.21592,36.456736],[-118.22252,36.462735],[-118.23022,36.464535],[-118.24002,36.477335],[-118.24992,36.482435],[-118.24892,36.486535],[-118.23502,36.493735],[-118.241371,36.499935],[-118.238121,36.505835],[-118.239421,36.509235],[-118.238821,36.523635],[-118.246721,36.521435],[-118.250922,36.525635],[-118.248622,36.532735],[-118.252022,36.542135],[-118.258422,36.543335],[-118.265323,36.551535],[-118.274923,36.550535],[-118.279423,36.555135],[-118.290523,36.558535],[-118.292424,36.569035],[-118.289824,36.573235],[-118.294124,36.576335],[-118.288024,36.583734],[-118.289024,36.590734],[-118.278024,36.592334],[-118.274624,36.597334],[-118.281625,36.604534],[-118.290825,36.603734],[-118.297025,36.607334],[-118.301025,36.612534],[-118.301925,36.618134],[-118.310325,36.622234],[-118.311026,36.624934],[-118.321326,36.627434],[-118.320326,36.637234],[-118.325226,36.647134],[-118.337579,36.654801],[-118.335627,36.661634],[-118.329353,36.666566],[-118.333427,36.671434],[-118.347527,36.672334],[-118.347527,36.676034],[-118.353328,36.683934],[-118.364228,36.687935],[-118.366253,36.69171],[-118.358828,36.695634],[-118.351728,36.694834],[-118.346728,36.696534],[-118.341328,36.702134],[-118.335028,36.705134],[-118.336929,36.719934],[-118.339629,36.729034],[-118.342429,36.730434],[-118.350929,36.740734],[-118.360586,36.744773]],[[-118.775014,37.463052],[-118.663155,37.463038],[-118.589972,37.46326],[-118.515593,37.462676],[-118.456037,37.463024],[-118.405109,37.462833],[-118.129109,37.462913],[-117.916861,37.465238],[-117.903893,37.464816],[-117.832726,37.464929]],[[-117.832726,37.464929],[-117.712358,37.374931],[-117.68061,37.353399],[-117.581418,37.278936],[-117.540885,37.249931],[-117.500909,37.220282],[-117.500117,37.22038],[-117.375905,37.126843],[-117.266046,37.04491],[-117.244917,37.030244],[-117.131975,36.945777],[-117.066728,36.896354],[-117.000895,36.847694],[-116.541983,36.499952],[-116.500882,36.468223],[-116.488233,36.459097],[-116.38034,36.374955],[-116.375875,36.372562],[-116.250869,36.276979],[-116.097216,36.158346],[-116.093601,36.155805],[-115.892975,35.999967],[-115.852908,35.96966],[-115.750844,35.889287],[-115.669005,35.826515],[-115.64802,35.809629]],[[-117.667292,34.822526],[-117.774368,34.823301],[-118.023406,34.822163],[-118.175871,34.820466],[-118.220048,34.820138],[-118.290456,34.820103],[-118.431609,34.818736],[-118.489589,34.81785],[-118.55904,34.818341],[-118.563118,34.818025],[-118.627244,34.818169],[-118.766882,34.81799],[-118.820837,34.817475],[-118.854253,34.817772],[-118.854576,34.803027],[-118.877289,34.803212],[-118.88253,34.807662],[-118.884642,34.813323],[-118.881729,34.817802],[-118.894474,34.817972],[-118.887362,34.801898],[-118.881364,34.790629]],[[-119.472754,34.901174],[-119.472515,34.995652],[-119.472719,35.076885],[-119.490709,35.077208],[-119.490632,35.091805],[-119.560975,35.087673],[-119.553641,35.179975],[-119.571259,35.180292],[-119.667056,35.174809],[-119.666663,35.262527],[-119.809449,35.263584],[-119.809346,35.350865],[-119.880172,35.351211],[-119.880045,35.439133],[-119.997392,35.439495],[-119.997382,35.468702],[-120.015659,35.469039],[-120.014602,35.483652],[-120.033314,35.483648],[-120.033241,35.498642],[-120.05105,35.498627],[-120.051237,35.512695],[-120.068905,35.512779],[-120.068657,35.52632],[-120.086674,35.526554],[-120.085922,35.614524],[-120.125898,35.614228],[-120.193918,35.614359],[-120.193892,35.726513],[-120.194146,35.789204]],[[-120.194146,35.789204],[-119.983358,35.789378],[-119.948098,35.78954],[-119.888473,35.78895],[-119.869059,35.789225],[-119.754772,35.790003],[-119.750971,35.790216],[-119.646519,35.790424],[-119.625958,35.789494],[-119.574017,35.789824],[-119.538116,35.789567]],[[-119.538116,35.789567],[-119.474521,35.790013],[-119.471933,35.789714],[-119.393047,35.790142],[-119.376068,35.78974],[-119.355614,35.790278],[-119.071208,35.790771],[-118.803729,35.790347],[-118.629975,35.78958],[-118.622449,35.789831],[-118.504002,35.789825],[-118.469424,35.792634],[-118.407663,35.791328],[-118.375916,35.790224],[-118.366921,35.790609],[-118.318618,35.79031],[-118.195464,35.790689],[-118.067719,35.791537],[-118.008043,35.789161]],[[-120.194146,35.789204],[-120.213979,35.789276]],[[-120.213979,35.789276],[-120.216551,35.803642],[-120.219516,35.807098],[-120.218086,35.814297],[-120.220667,35.819542],[-120.238915,35.825751],[-120.244534,35.823988],[-120.249836,35.829936],[-120.255088,35.84258],[-120.259302,35.845053],[-120.256267,35.855133],[-120.250978,35.857285],[-120.245988,35.864135],[-120.240246,35.865928],[-120.245214,35.873119],[-120.243275,35.877669],[-120.262692,35.89609],[-120.267858,35.898426],[-120.27576,35.905881],[-120.287401,35.90552],[-120.295157,35.907543],[-120.315068,35.907186]],[[-119.573194,36.488835],[-119.527194,36.488886],[-119.528286,36.487545],[-119.528792,36.401465],[-119.474892,36.400953],[-119.475454,36.351179],[-119.475234,36.313373],[-119.474367,36.297889],[-119.474607,36.269025],[-119.511594,36.269138],[-119.529358,36.26985],[-119.529141,36.137914],[-119.53638,36.137893],[-119.536108,36.00725],[-119.536241,35.963409],[-119.537379,35.963347],[-119.537694,35.934784],[-119.538116,35.789567]],[[-118.524531,32.895488],[-118.535823,32.90628],[-118.551134,32.945155],[-118.560887,32.957891],[-118.573522,32.969183],[-118.586928,33.008281],[-118.596037,33.015357],[-118.606559,33.01469],[-118.605534,33.030999],[-118.594033,33.035951],[-118.57516,33.033961],[-118.564445,33.024914],[-118.564527,33.018637],[-118.559171,33.006291],[-118.540069,32.980933],[-118.529228,32.970921],[-118.496811,32.933847],[-118.485288,32.923545],[-118.460623,32.90951],[-118.446771,32.895424],[-118.369984,32.839273],[-118.353504,32.821962],[-118.356541,32.817311],[-118.36053,32.819921],[-118.379968,32.824545],[-118.394565,32.823978],[-118.401268,32.820338],[-118.425634,32.800595],[-118.428372,32.806872],[-118.44492,32.820593],[-118.476074,32.841754],[-118.487908,32.84459],[-118.496298,32.851572],[-118.506902,32.868503],[-118.507193,32.876264],[-118.524641,32.893175],[-118.524531,32.895488]],[[-118.315346,33.342032],[-118.310213,33.335795],[-118.303174,33.320264],[-118.305084,33.310323],[-118.316787,33.301137],[-118.325244,33.299075],[-118.343249,33.305234],[-118.360332,33.31533],[-118.374768,33.320065],[-118.402941,33.320901],[-118.440047,33.318638],[-118.456309,33.32182],[-118.465368,33.326056],[-118.481886,33.344123],[-118.48877,33.356649],[-118.482609,33.369914],[-118.478465,33.38632],[-118.484949,33.412131],[-118.48875,33.419826],[-118.503952,33.424234],[-118.515914,33.422417],[-118.516267,33.425075],[-118.52323,33.430733],[-118.53738,33.434608],[-118.558715,33.433419],[-118.563442,33.434381],[-118.570927,33.439351],[-118.575901,33.448261],[-118.593969,33.467198],[-118.601185,33.469853],[-118.60403,33.47654],[-118.598783,33.477939],[-118.585936,33.473819],[-118.54453,33.474119],[-118.530702,33.468071],[-118.500212,33.449592],[-118.499669,33.447879],[-118.48557,33.446213],[-118.477646,33.448392],[-118.445812,33.428907],[-118.423576,33.427258],[-118.382037,33.409883],[-118.370323,33.409285],[-118.368301,33.40711],[-118.365094,33.388374],[-118.32446,33.348782],[-118.315346,33.342032]],[[-117.783287,33.946411],[-117.848651,33.946864],[-117.870152,33.945832],[-117.976498,33.94605],[-117.976593,33.90281],[-117.985481,33.902769],[-117.98535,33.895603],[-117.993996,33.895412],[-117.994057,33.888111],[-118.002694,33.888112],[-118.002594,33.880909],[-118.011398,33.880913],[-118.011398,33.873314],[-118.028679,33.873219],[-118.028581,33.866246],[-118.037598,33.866013],[-118.041748,33.858723],[-118.046188,33.858768],[-118.046082,33.853611],[-118.054723,33.849821],[-118.058918,33.846121],[-118.058988,33.835207],[-118.063499,33.831516],[-118.063162,33.81961],[-118.073143,33.81459],[-118.084377,33.803433],[-118.086397,33.796716],[-118.098999,33.776817],[-118.09371,33.768333],[-118.092037,33.759563],[-118.093755,33.757509],[-118.114082,33.746528],[-118.116703,33.743549]],[[-118.116703,33.743549],[-118.132698,33.753217],[-118.1569,33.760317],[-118.1755,33.763617],[-118.180831,33.763072],[-118.187701,33.749218],[-118.1837,33.736118],[-118.181367,33.717367],[-118.207476,33.716905],[-118.258687,33.703741],[-118.277208,33.707091],[-118.297104,33.708319],[-118.317205,33.712818],[-118.354705,33.732317],[-118.360505,33.736817],[-118.385006,33.741417],[-118.396606,33.735917],[-118.411211,33.741985],[-118.428407,33.774715],[-118.423407,33.782015],[-118.405007,33.800215],[-118.394307,33.804315],[-118.391507,33.815415],[-118.392107,33.840915],[-118.412694,33.883885],[-118.44241,33.940312],[-118.460611,33.969111],[-118.484212,33.99771],[-118.502813,34.015509],[-118.519514,34.027509],[-118.543115,34.038508],[-118.569235,34.04164],[-118.603572,34.039048],[-118.609652,34.036424],[-118.668358,34.038887],[-118.67543,34.037479],[-118.679366,34.033255],[-118.706215,34.029383],[-118.732391,34.032743],[-118.744952,34.032103],[-118.783433,34.021543],[-118.787094,34.019545],[-118.805114,34.001239],[-118.84038,34.027527],[-118.854653,34.034215],[-118.896159,34.039207],[-118.928048,34.045847],[-118.938081,34.043383],[-118.944887,34.04534]],[[-120.541696,37.044505],[-120.476692,37.09639],[-120.469779,37.094336],[-120.465508,37.097777],[-120.456084,37.100343],[-120.452858,37.098873],[-120.444226,37.103142],[-120.427787,37.106252],[-120.420654,37.109828],[-120.406777,37.110854],[-120.404103,37.115704],[-120.388827,37.120984],[-120.384886,37.124589],[-120.37899,37.124347],[-120.372231,37.121133],[-120.363315,37.119712],[-120.357535,37.122475],[-120.341204,37.124596],[-120.328332,37.131089],[-120.324544,37.136382],[-120.31362,37.138815],[-120.310891,37.141138],[-120.303643,37.141317],[-120.29846,37.147427],[-120.290554,37.152382],[-120.274108,37.152144],[-120.247906,37.157965],[-120.245169,37.156987],[-120.232277,37.159922],[-120.227286,37.1634],[-120.219503,37.162155],[-120.213663,37.164321],[-120.202133,37.162683],[-120.194794,37.163151],[-120.187594,37.160252],[-120.176489,37.162265],[-120.170226,37.165982],[-120.164576,37.162698],[-120.152954,37.166021],[-120.142563,37.164065],[-120.132811,37.167359],[-120.120096,37.165532],[-120.103327,37.16774],[-120.094743,37.172554],[-120.085173,37.173394],[-120.076685,37.176484],[-120.064678,37.177816],[-120.052055,37.183108]],[[-120.052055,37.183108],[-119.876342,37.325332],[-119.761809,37.417114],[-119.747102,37.417748],[-119.651191,37.417832],[-119.651003,37.461353],[-119.615495,37.461522],[-119.615148,37.494681],[-119.58422,37.494696],[-119.583585,37.560335],[-119.451199,37.665689],[-119.308995,37.777986]],[[-119.308995,37.777986],[-119.308283,37.775728],[-119.293382,37.767929],[-119.294082,37.759729],[-119.289082,37.755029],[-119.290682,37.749329],[-119.288381,37.74503],[-119.268979,37.73923]],[[-119.268979,37.73923],[-119.264079,37.732931],[-119.261179,37.732731],[-119.260078,37.726631],[-119.255178,37.725331],[-119.250978,37.73016],[-119.239264,37.727467],[-119.230327,37.720567],[-119.229992,37.717406],[-119.2161,37.714518],[-119.207328,37.72406],[-119.198486,37.736657],[-119.191536,37.737815],[-119.177103,37.734776],[-119.170115,37.738287],[-119.164075,37.736123],[-119.157333,37.736529],[-119.149593,37.732895],[-119.140774,37.733251],[-119.138032,37.736126],[-119.132653,37.733929],[-119.123735,37.733343],[-119.109694,37.724735],[-119.106766,37.719269],[-119.092811,37.703531],[-119.087839,37.702376],[-119.080711,37.695526],[-119.065166,37.684556],[-119.062029,37.67654],[-119.062441,37.671096],[-119.059638,37.665047],[-119.0614,37.657834],[-119.054331,37.651184],[-119.052,37.643996],[-119.042494,37.635231],[-119.032565,37.630535],[-119.031075,37.626719],[-119.031966,37.613836],[-119.034365,37.603536],[-119.026964,37.595737],[-119.022363,37.585737]],[[-122.418698,37.852717],[-122.434403,37.852434],[-122.443302,37.855448],[-122.446316,37.861046],[-122.438565,37.868367],[-122.430958,37.872242],[-122.421439,37.869969]],[[-122.47986,37.825641],[-122.483483,37.826728],[-122.505383,37.822128]],[[-122.522836,37.824717],[-122.529452,37.81489],[-122.537285,37.830328],[-122.548986,37.836227],[-122.561487,37.851827],[-122.584289,37.859227],[-122.60129,37.875126],[-122.627113,37.88608],[-122.639977,37.897349],[-122.656519,37.904519],[-122.682171,37.90645],[-122.693569,37.901171],[-122.70264,37.89382],[-122.727297,37.904626],[-122.732898,37.920225],[-122.736898,37.925825],[-122.754606,37.935527],[-122.766138,37.938004],[-122.783244,37.951334],[-122.791739,37.969422],[-122.797405,37.976657],[-122.821383,37.996735],[-122.856573,38.016717],[-122.882114,38.025273],[-122.939711,38.031908],[-122.956811,38.02872],[-122.972378,38.020247],[-122.981776,38.009119],[-122.982386,38.004274],[-122.97439,37.992429],[-123.024066,37.994878],[-123.020562,37.999544],[-123.011533,38.003438],[-122.99242,38.041758],[-122.960889,38.112962],[-122.952086,38.138562],[-122.949074,38.15406],[-122.949626,38.164041],[-122.953629,38.17567],[-122.965408,38.187113],[-122.96637,38.198514],[-122.968112,38.202428],[-122.991953,38.233185],[-122.993235,38.239686],[-122.987149,38.237538],[-122.968569,38.242879],[-122.967203,38.250691],[-122.977082,38.267902],[-122.986319,38.273164],[-122.994603,38.283096],[-122.997106,38.289458],[-123.002911,38.295708]],[[-123.002911,38.295708],[-122.993579,38.300079],[-122.994958,38.306012],[-122.974868,38.311471],[-122.969049,38.310798],[-122.966124,38.31697],[-122.96129,38.31654],[-122.948767,38.311657],[-122.943601,38.312563],[-122.936696,38.310453],[-122.925636,38.312736],[-122.921588,38.308554],[-122.916601,38.31321],[-122.920959,38.316805],[-122.916074,38.320257],[-122.906661,38.319935],[-122.910882,38.316865],[-122.909237,38.314268],[-122.901726,38.316943],[-122.874406,38.298088],[-122.811971,38.256129],[-122.7399,38.207018],[-122.723499,38.207147],[-122.714338,38.201222],[-122.701393,38.196099],[-122.689308,38.194836],[-122.680454,38.189616],[-122.667158,38.189697],[-122.659439,38.186976],[-122.648986,38.181077],[-122.628128,38.178915],[-122.625408,38.182394],[-122.61547,38.182408],[-122.612504,38.180591],[-122.603505,38.180852],[-122.600917,38.185263],[-122.592815,38.188783],[-122.591145,38.185992],[-122.582198,38.188017],[-122.578201,38.183583],[-122.570693,38.183518],[-122.570732,38.187142],[-122.565093,38.182217],[-122.568384,38.176836],[-122.564463,38.175081],[-122.563193,38.169318],[-122.553292,38.169977],[-122.55196,38.16815],[-122.558435,38.161974],[-122.549615,38.15729],[-122.545376,38.158733],[-122.534828,38.149202],[-122.522223,38.142405],[-122.514014,38.133783],[-122.507926,38.118098],[-122.50282,38.113002],[-122.490727,38.109755]],[[-122.490727,38.109755],[-122.489974,38.096961],[-122.486702,38.090088],[-122.483757,38.071762],[-122.492265,38.056381],[-122.499465,38.032165],[-122.497828,38.019402],[-122.494556,38.015148],[-122.481466,38.007621],[-122.462812,38.003367],[-122.452995,37.996167],[-122.448413,37.988313],[-122.448413,37.984713],[-122.456595,37.978823],[-122.462485,37.981441],[-122.471975,37.981768],[-122.490302,37.964751],[-122.487684,37.948716],[-122.480484,37.945443],[-122.479175,37.941516],[-122.48572,37.937589],[-122.499465,37.939225],[-122.503064,37.936607],[-122.503064,37.928753],[-122.493574,37.921881],[-122.486375,37.921881],[-122.478193,37.918608],[-122.471975,37.910427],[-122.472303,37.902573],[-122.458558,37.894064],[-122.448413,37.89341],[-122.43925,37.88392],[-122.438268,37.880974],[-122.45005,37.871157],[-122.462158,37.868866],[-122.474266,37.874429],[-122.480811,37.873448],[-122.483102,37.863957],[-122.476536,37.832812]],[[-120.052055,37.183108],[-120.056289,37.186615],[-120.062214,37.197984],[-120.080851,37.21293],[-120.085878,37.218743],[-120.093189,37.222617],[-120.105605,37.225026],[-120.112919,37.228563],[-120.126005,37.232272],[-120.143826,37.239192],[-120.171509,37.256688],[-120.177636,37.261526],[-120.183757,37.270492],[-120.186637,37.28028],[-120.182724,37.291405],[-120.187709,37.301072],[-120.203531,37.313321],[-120.209028,37.324934],[-120.216505,37.337336],[-120.245372,37.376444],[-120.247011,37.380216],[-120.254696,37.385406],[-120.26601,37.400607],[-120.275816,37.418836],[-120.283398,37.424363],[-120.284428,37.431685],[-120.278004,37.436499],[-120.274965,37.443634],[-120.278149,37.449183],[-120.279579,37.457947],[-120.29503,37.480012],[-120.300223,37.48429],[-120.299172,37.488845],[-120.311493,37.497228],[-120.316564,37.505592],[-120.316462,37.514337],[-120.319197,37.521335],[-120.38767,37.633364]],[[-120.38767,37.633364],[-120.387613,37.633704]],[[-120.387613,37.633704],[-120.375144,37.652208],[-120.379877,37.657056],[-120.384346,37.658],[-120.395345,37.672256],[-120.392504,37.675355],[-120.391931,37.683559],[-120.386636,37.684842],[-120.379704,37.680986],[-120.369795,37.679631],[-120.366731,37.680898],[-120.362464,37.672819],[-120.355417,37.6755],[-120.347989,37.671232],[-120.343258,37.663126],[-120.335261,37.658959],[-120.332545,37.653321],[-120.325943,37.648966],[-120.309838,37.655977],[-120.312313,37.662947],[-120.306407,37.665759],[-120.310447,37.673125],[-120.330215,37.698073],[-120.333157,37.706559],[-120.338093,37.70911],[-120.339805,37.717094],[-120.345437,37.724787],[-120.342803,37.726983],[-120.335571,37.726481],[-120.3325,37.729368],[-120.326116,37.726066],[-120.320841,37.726158],[-120.315468,37.733762],[-120.307505,37.735614],[-120.295868,37.733394],[-120.286494,37.729449],[-120.283804,37.733638],[-120.28664,37.740273],[-120.282617,37.745277],[-120.276083,37.738968],[-120.257895,37.735154],[-120.26168,37.740642],[-120.253332,37.750735],[-120.248244,37.749601],[-120.239687,37.75349],[-120.240906,37.758495],[-120.238232,37.765264],[-120.230658,37.763789],[-120.227015,37.760371],[-120.224308,37.763527],[-120.216879,37.762849],[-120.21616,37.765249],[-120.209561,37.763174],[-120.201384,37.763152],[-120.198102,37.769394],[-120.189081,37.767852],[-120.183529,37.774946],[-120.188687,37.780222],[-120.183566,37.782892],[-120.180496,37.788997],[-120.182597,37.795245],[-120.178371,37.794662],[-120.17431,37.799342],[-120.169474,37.79195],[-120.161812,37.787406],[-120.153835,37.788364],[-120.142376,37.783267],[-120.127226,37.781566],[-120.123926,37.785702],[-120.119384,37.785864],[-120.119758,37.789662],[-120.106197,37.799031],[-120.10074,37.800665],[-120.098748,37.807728],[-120.093663,37.808216],[-120.089075,37.812259],[-120.090863,37.815806],[-120.089431,37.822827],[-120.079977,37.828715],[-120.065153,37.822896],[-120.061546,37.826035],[-120.057506,37.823879],[-120.055319,37.812989],[-120.04889,37.811199],[-120.046355,37.813301],[-120.034774,37.808604],[-120.026967,37.811946],[-120.014435,37.804491],[-120.001016,37.798726],[-119.998416,37.796226],[-119.964915,37.782826],[-119.955015,37.773226],[-119.947615,37.770426],[-119.944814,37.764926],[-119.938414,37.763026],[-119.929314,37.764826],[-119.915213,37.762626],[-119.907013,37.757926],[-119.892512,37.762226],[-119.884912,37.760726],[-119.872912,37.766626],[-119.875712,37.772226],[-119.864311,37.772025],[-119.860611,37.764426],[-119.852378,37.758203],[-119.84061,37.765025],[-119.842211,37.769125],[-119.837909,37.770226],[-119.82791,37.768225],[-119.82731,37.764425],[-119.82071,37.759825],[-119.812909,37.758325],[-119.809409,37.755025],[-119.803808,37.759599],[-119.786108,37.765825],[-119.781108,37.763425],[-119.772006,37.766728],[-119.769006,37.771129],[-119.751007,37.773324],[-119.746007,37.782924],[-119.738807,37.784524],[-119.733906,37.787924],[-119.722706,37.787624],[-119.716806,37.791724],[-119.709805,37.793524],[-119.697905,37.789624],[-119.691404,37.799524],[-119.667203,37.801224],[-119.659903,37.809424],[-119.653903,37.810423],[-119.650903,37.820823],[-119.653503,37.828823],[-119.657703,37.834123],[-119.646203,37.846823],[-119.638102,37.849123],[-119.628602,37.847223],[-119.622955,37.848466],[-119.619107,37.853196],[-119.609606,37.853369],[-119.591951,37.866115],[-119.5845,37.876222],[-119.587301,37.878722],[-119.586401,37.890122],[-119.581601,37.893722],[-119.5741,37.895622],[-119.5659,37.901722],[-119.5586,37.903122],[-119.5567,37.900922],[-119.533999,37.902922],[-119.533599,37.897122],[-119.529798,37.891122],[-119.523798,37.886722],[-119.515297,37.884422],[-119.506597,37.874522],[-119.504697,37.869622],[-119.492296,37.863123],[-119.484095,37.864423],[-119.476895,37.859623],[-119.474295,37.855623],[-119.469595,37.863523],[-119.462794,37.868423],[-119.451494,37.871023],[-119.441993,37.867523],[-119.442692,37.859824],[-119.434192,37.865124],[-119.426792,37.866724],[-119.421991,37.857724],[-119.415491,37.854624],[-119.407291,37.854924],[-119.405091,37.848225],[-119.40469,37.837225],[-119.40059,37.834725],[-119.392589,37.837925],[-119.383722,37.836473],[-119.379287,37.840951],[-119.37391,37.839845],[-119.372602,37.832883],[-119.352287,37.826326],[-119.351187,37.823826],[-119.354987,37.811826],[-119.348987,37.810826],[-119.346686,37.806327],[-119.339386,37.805527],[-119.331885,37.799227],[-119.326985,37.799427],[-119.321785,37.794027],[-119.312284,37.794128],[-119.310484,37.785628],[-119.307284,37.782828],[-119.308995,37.777986]],[[-122.934013,39.978131],[-122.926897,39.971275],[-122.924934,39.9594],[-122.92738,39.956327],[-122.926821,39.945071],[-122.913157,39.93581],[-122.912599,39.931484],[-122.920623,39.92893],[-122.920524,39.916487],[-122.928296,39.912542],[-122.949997,39.90781],[-122.947732,39.894192],[-122.949584,39.889752],[-122.949647,39.879901],[-122.953306,39.872653],[-122.950601,39.86913],[-122.955846,39.858531],[-122.95399,39.854685],[-122.960088,39.845245],[-122.956427,39.839211],[-122.946706,39.833469],[-122.947484,39.827649],[-122.943602,39.801652],[-122.937654,39.798156]],[[-122.821592,38.85014],[-122.994217,38.851325],[-123.006918,38.851247],[-123.026122,38.852837],[-123.080997,38.852438],[-123.08123,38.838406],[-123.118025,38.839551],[-123.136636,38.839448],[-123.136253,38.809136],[-123.142279,38.808875],[-123.214604,38.808871],[-123.271759,38.808399],[-123.28168,38.807503],[-123.368394,38.80664],[-123.368236,38.777066],[-123.431075,38.776619],[-123.497042,38.778604],[-123.499582,38.774093],[-123.507041,38.773532],[-123.509462,38.767856],[-123.515861,38.768158],[-123.520961,38.758575],[-123.533535,38.768408]],[[-123.533535,38.768408],[-123.541837,38.776764],[-123.571987,38.798189],[-123.579856,38.802835],[-123.58638,38.802857],[-123.600221,38.814115],[-123.605317,38.822765],[-123.638637,38.843865],[-123.647387,38.845472],[-123.652212,38.854582],[-123.654696,38.865638],[-123.659846,38.872529],[-123.688099,38.893594],[-123.71054,38.91323],[-123.725367,38.917438],[-123.72763,38.9295],[-123.726315,38.936367],[-123.738886,38.95412],[-123.729053,38.956667],[-123.721347,38.963879],[-123.711149,38.977316],[-123.6969,39.004401],[-123.69074,39.021293],[-123.690095,39.031157],[-123.693969,39.057363],[-123.713392,39.108422],[-123.721505,39.125327],[-123.735936,39.139644],[-123.737913,39.143442],[-123.742221,39.164885],[-123.76101,39.191595],[-123.765891,39.193657],[-123.774998,39.212083],[-123.777368,39.237214],[-123.787893,39.264327],[-123.798991,39.271355],[-123.803848,39.278771],[-123.801757,39.28353],[-123.803081,39.291747],[-123.811387,39.312825],[-123.808772,39.324368],[-123.817369,39.3388],[-123.822085,39.343857],[-123.826306,39.36871],[-123.822325,39.379987],[-123.821887,39.406809],[-123.81469,39.446538],[-123.795639,39.492215],[-123.78417,39.509419],[-123.778521,39.521478],[-123.766475,39.552803],[-123.76721,39.559852],[-123.787417,39.604552],[-123.78354,39.609517],[-123.782322,39.621486],[-123.78636,39.659932],[-123.792659,39.684122],[-123.808208,39.710715],[-123.824744,39.718128],[-123.829545,39.723071],[-123.835092,39.738768],[-123.838089,39.752409],[-123.83715,39.776232],[-123.839797,39.795637],[-123.851714,39.832041],[-123.853764,39.8341],[-123.881458,39.845422],[-123.907664,39.863028],[-123.915142,39.875313],[-123.915853,39.881114],[-123.930047,39.909697],[-123.954952,39.922373],[-123.962655,39.937635],[-123.980031,39.962458],[-123.99586,39.973045],[-124.023938,40.001284]],[[-120.918731,36.740381],[-120.933682,36.751895],[-120.993141,36.775824],[-121.000979,36.779444],[-121.051424,36.799799],[-121.090742,36.81613],[-121.10178,36.82014],[-121.141523,36.836656],[-121.143029,36.846302],[-121.152913,36.861912],[-121.152626,36.865351],[-121.164395,36.870265],[-121.169495,36.885322],[-121.174088,36.885711],[-121.184297,36.896385],[-121.183885,36.908096],[-121.188796,36.913238],[-121.198274,36.914338],[-121.208361,36.911529],[-121.216585,36.913558],[-121.221378,36.910301],[-121.224185,36.919921],[-121.230151,36.921241],[-121.234683,36.926894],[-121.230579,36.93849],[-121.225497,36.94483],[-121.218783,36.947767],[-121.211794,36.957113],[-121.215406,36.961248]],[[-121.215406,36.961248],[-121.224833,36.967433],[-121.232128,36.968892],[-121.245887,36.983036],[-121.245137,36.992922],[-121.241517,36.997381],[-121.233137,36.999346],[-121.237826,37.009961],[-121.233337,37.011746],[-121.245989,37.025575],[-121.248647,37.03368],[-121.241104,37.031714],[-121.236138,37.036945],[-121.224507,37.039743],[-121.225808,37.052071],[-121.223387,37.057507],[-121.213061,37.055098],[-121.208198,37.061289],[-121.209637,37.068243],[-121.215799,37.069223],[-121.222925,37.073814],[-121.224638,37.078943],[-121.235493,37.086234],[-121.241977,37.085128],[-121.245384,37.089501],[-121.243019,37.092711],[-121.230439,37.096942],[-121.230526,37.10477],[-121.217339,37.123042],[-121.221754,37.125904],[-121.222683,37.130828],[-121.226804,37.134774]],[[-121.226804,37.134774],[-121.222507,37.138378],[-121.089126,37.245827],[-121.067402,37.262166],[-121.062305,37.267037],[-121.016116,37.303788],[-121.001098,37.316857],[-120.972671,37.338697],[-120.964223,37.345782],[-120.976123,37.349575],[-120.980123,37.366822],[-120.973923,37.368069],[-120.977262,37.374123],[-120.9731,37.377595],[-120.98324,37.376436],[-120.98224,37.385637],[-120.993641,37.388037],[-120.98439,37.399366],[-120.940616,37.416676],[-120.936731,37.419496],[-120.88582,37.440382],[-120.870414,37.445495],[-120.854292,37.452342],[-120.841047,37.456438],[-120.81557,37.466963],[-120.786397,37.47776],[-120.62736,37.539743],[-120.599068,37.551052],[-120.514608,37.584179],[-120.38767,37.633364]],[[-119.268979,37.73923],[-119.261179,37.74103],[-119.254678,37.746631],[-119.254981,37.756329],[-119.250554,37.757291],[-119.24308,37.76913],[-119.23658,37.77363],[-119.23078,37.77443],[-119.22708,37.778429],[-119.22128,37.77913],[-119.21698,37.787729],[-119.21278,37.791729],[-119.20438,37.793229],[-119.20128,37.804329],[-119.204981,37.811529],[-119.216881,37.818328],[-119.213281,37.825028],[-119.203981,37.829828],[-119.20688,37.839927],[-119.196182,37.844028],[-119.201782,37.847528],[-119.210482,37.845628],[-119.216282,37.847728],[-119.213382,37.854827],[-119.214083,37.871527],[-119.206383,37.883327],[-119.200783,37.883227],[-119.201383,37.888026],[-119.206483,37.889226],[-119.210683,37.893926],[-119.210783,37.899426],[-119.219883,37.898626],[-119.226684,37.906626],[-119.237284,37.911326],[-119.250685,37.910326],[-119.263885,37.912225],[-119.265586,37.913825],[-119.263986,37.926525],[-119.280587,37.933825],[-119.287887,37.933024],[-119.295888,37.942724],[-119.308189,37.946724],[-119.313889,37.954323],[-119.31529,37.965323],[-119.32259,37.971023],[-119.31429,37.982623],[-119.318391,37.986423],[-119.309897,38.001163],[-119.307034,38.012322],[-119.308152,38.019492],[-119.30459,38.023891],[-119.309706,38.033921],[-119.313952,38.034535],[-119.310624,38.040248],[-119.31119,38.044756],[-119.322645,38.049865],[-119.324213,38.060937],[-119.327927,38.065703],[-119.334109,38.065244],[-119.33671,38.070393],[-119.349845,38.085566],[-119.357127,38.082977],[-119.365065,38.090201],[-119.371055,38.088595],[-119.374557,38.093524],[-119.380222,38.092546],[-119.382849,38.097703],[-119.387301,38.097846],[-119.397024,38.106821],[-119.402507,38.105551],[-119.41089,38.107686],[-119.423957,38.107438],[-119.428813,38.11556],[-119.440226,38.10487],[-119.440468,38.095678],[-119.445875,38.093059],[-119.44833,38.099157],[-119.454378,38.096068],[-119.463692,38.098335],[-119.4645,38.103589],[-119.457448,38.11055],[-119.462083,38.109108],[-119.471872,38.116089],[-119.469456,38.128283],[-119.488519,38.132175],[-119.489127,38.143439],[-119.496967,38.149297],[-119.495799,38.154984],[-119.501832,38.159264],[-119.507783,38.152637],[-119.50581,38.148435],[-119.50649,38.137113],[-119.515527,38.137354],[-119.525519,38.140797],[-119.531162,38.144486],[-119.547406,38.143977],[-119.545501,38.153056],[-119.557931,38.154719],[-119.564261,38.154063],[-119.566015,38.156963],[-119.576496,38.157661],[-119.581348,38.172503],[-119.578595,38.176853],[-119.586561,38.184839],[-119.591421,38.185089],[-119.598421,38.181697],[-119.609932,38.19043],[-119.617707,38.190501],[-119.627936,38.194898],[-119.632671,38.198858],[-119.630927,38.20394],[-119.626354,38.204665],[-119.627101,38.213199],[-119.623504,38.220396],[-119.624422,38.228673],[-119.614775,38.232717],[-119.609276,38.23237],[-119.604182,38.234961],[-119.604895,38.239198],[-119.614017,38.242804],[-119.621901,38.25279],[-119.613201,38.261416],[-119.62681,38.268062],[-119.637763,38.278386],[-119.642056,38.278178],[-119.651509,38.286462],[-119.643617,38.291661],[-119.644352,38.299602],[-119.642189,38.306986],[-119.644776,38.32164],[-119.639205,38.32688]],[[-119.585437,38.713212],[-119.494183,38.649852],[-119.450623,38.619965],[-119.375994,38.566793],[-119.370117,38.563281],[-119.333423,38.538328],[-119.279262,38.499914],[-119.250988,38.48078],[-119.234966,38.468997],[-119.125982,38.39317],[-119.097161,38.372853],[-119.082358,38.361267],[-119.030078,38.325181],[-119.000975,38.303675],[-118.949673,38.26894],[-118.922518,38.249919],[-118.859087,38.204808],[-118.771867,38.141871],[-118.746598,38.124926],[-118.714312,38.102185],[-118.62159,38.034389],[-118.571958,37.99993],[-118.500958,37.949019],[-118.250947,37.768616],[-118.052189,37.62493],[-118.039849,37.615245],[-117.975776,37.569293],[-117.904625,37.515836],[-117.875927,37.497267],[-117.832726,37.464929]],[[-121.644001,36.893996],[-121.641284,36.879826],[-121.642565,36.8737],[-121.622089,36.846203],[-121.5971,36.836849],[-121.574738,36.818052],[-121.548121,36.794479],[-121.505748,36.758909],[-121.481523,36.765447],[-121.474368,36.756672],[-121.476571,36.752342],[-121.471382,36.745449],[-121.466579,36.745556],[-121.46003,36.740942],[-121.458894,36.733829],[-121.452646,36.729209],[-121.45134,36.724793],[-121.461592,36.717638],[-121.483368,36.715499],[-121.484508,36.713062],[-121.469391,36.69077],[-121.469023,36.685434],[-121.460956,36.686687],[-121.456836,36.681964],[-121.44953,36.678761],[-121.444333,36.673148],[-121.431571,36.678728],[-121.425391,36.675159],[-121.415535,36.673058],[-121.409394,36.661505],[-121.408346,36.656659],[-121.401946,36.655424],[-121.386107,36.654904],[-121.378334,36.652861],[-121.366527,36.656558],[-121.357489,36.65081],[-121.350092,36.648357],[-121.341586,36.638009],[-121.342089,36.631354],[-121.335247,36.623476],[-121.318373,36.610026],[-121.318711,36.604854],[-121.323781,36.602367],[-121.324225,36.588436],[-121.32735,36.585886],[-121.32347,36.577869],[-121.33392,36.574404],[-121.331248,36.570504],[-121.33171,36.561946],[-121.328879,36.56146],[-121.328697,36.55474],[-121.313967,36.549968],[-121.305145,36.540744],[-121.30156,36.539243],[-121.295362,36.527129],[-121.307189,36.516812],[-121.306762,36.512174],[-121.310726,36.508749],[-121.311788,36.502736],[-121.309017,36.499568],[-121.299839,36.50564],[-121.284963,36.505697],[-121.281993,36.502706],[-121.26946,36.502043],[-121.257882,36.504535],[-121.254882,36.503511],[-121.244091,36.506911],[-121.239295,36.504782],[-121.236865,36.497623],[-121.23101,36.492035],[-121.23249,36.489409],[-121.228108,36.484599],[-121.230472,36.478557],[-121.226126,36.472497],[-121.216825,36.474035],[-121.209823,36.464804],[-121.19767,36.455065],[-121.197919,36.451716],[-121.193465,36.445751],[-121.11695,36.38519],[-121.040797,36.323969],[-121.040302,36.271058],[-121.036311,36.27518],[-121.029533,36.275624],[-121.025625,36.271404],[-121.02862,36.269797],[-121.027362,36.26008],[-121.018919,36.259643],[-121.015511,36.267905],[-121.010902,36.26522],[-121.010458,36.268847],[-121.004545,36.267071],[-121.00017,36.270807],[-120.992835,36.269904],[-120.987086,36.275741],[-120.988067,36.285226],[-120.982813,36.291169],[-120.974459,36.290518],[-120.964501,36.282653],[-120.959133,36.280732],[-120.953996,36.274634],[-120.939157,36.283463],[-120.941213,36.2866],[-120.934574,36.289332],[-120.936479,36.294152],[-120.933104,36.299768],[-120.925705,36.302135],[-120.923823,36.309935],[-120.919778,36.310984],[-120.911715,36.308263],[-120.910426,36.305576],[-120.899019,36.300755],[-120.88998,36.29055],[-120.879057,36.295385],[-120.86508,36.292578],[-120.856288,36.284688],[-120.851416,36.28587],[-120.849616,36.281685],[-120.84072,36.27704],[-120.837038,36.262934],[-120.829311,36.257161],[-120.823871,36.257222],[-120.818945,36.253273],[-120.811194,36.251807],[-120.81237,36.246184],[-120.805473,36.240168],[-120.80091,36.239711],[-120.798931,36.235476],[-120.789058,36.234672],[-120.788998,36.230535],[-120.78306,36.228962],[-120.774779,36.219906],[-120.772331,36.220175],[-120.76663,36.209724],[-120.761483,36.20358],[-120.755652,36.202842],[-120.748601,36.198816],[-120.732223,36.203605],[-120.720427,36.199556],[-120.718426,36.196848],[-120.712774,36.198569],[-120.706121,36.20373],[-120.706411,36.227692],[-120.717696,36.260012],[-120.724303,36.266904],[-120.724813,36.27032],[-120.732006,36.275366],[-120.733847,36.284196],[-120.738289,36.288251],[-120.743114,36.298059],[-120.75834,36.308604],[-120.752936,36.307796],[-120.746654,36.310234],[-120.741031,36.30584],[-120.725569,36.297295],[-120.722584,36.292656],[-120.707805,36.28583],[-120.702144,36.286239],[-120.687227,36.271446],[-120.681651,36.271539],[-120.678582,36.267319]],[[-120.213979,35.789276],[-120.250979,35.788977],[-120.336993,35.789739],[-120.515083,35.790269],[-120.585265,35.790853],[-120.691613,35.79089],[-120.833825,35.791928],[-120.876014,35.791969],[-121.001022,35.792904],[-121.003108,35.792639],[-121.114454,35.79331],[-121.125937,35.793941],[-121.175695,35.794102],[-121.346363,35.795183]],[[-121.346363,35.795183],[-121.356737,35.804187],[-121.388053,35.823483],[-121.406823,35.844623],[-121.413146,35.855316],[-121.426955,35.860103],[-121.439584,35.86695],[-121.462264,35.885618],[-121.461227,35.896906],[-121.463452,35.904416],[-121.472435,35.91989],[-121.4862,35.970348],[-121.503112,36.000299],[-121.51159,36.006598],[-121.531876,36.014368],[-121.553716,36.019798],[-121.569612,36.021539],[-121.574602,36.025156],[-121.590395,36.050363],[-121.589183,36.053775],[-121.592853,36.065062],[-121.606845,36.072065],[-121.618672,36.087767],[-121.622009,36.099695],[-121.629634,36.114452],[-121.680145,36.165818],[-121.717176,36.195146],[-121.779851,36.227407],[-121.797059,36.234211],[-121.806979,36.232907],[-121.813734,36.234235],[-121.826425,36.24186],[-121.835785,36.250748],[-121.83935,36.260478],[-121.851967,36.277831],[-121.874797,36.289064],[-121.888491,36.30281],[-121.89676,36.304938],[-121.899642,36.302674],[-121.902729,36.306379],[-121.894714,36.317806],[-121.892917,36.340428],[-121.905446,36.358269],[-121.902669,36.363901],[-121.901813,36.381879],[-121.903195,36.393603],[-121.905657,36.398206],[-121.914378,36.404344],[-121.917463,36.414809],[-121.91474,36.42589],[-121.9255,36.453918],[-121.937205,36.472488],[-121.9416,36.485602],[-121.939216,36.496896],[-121.938763,36.506423],[-121.943678,36.511802],[-121.953884,36.517757],[-121.954915,36.523084],[-121.944666,36.521861],[-121.928769,36.523147],[-121.925937,36.525173],[-121.932508,36.559935],[-121.942533,36.566435],[-121.949659,36.567602],[-121.95146,36.564009],[-121.957335,36.564482],[-121.972594,36.57337],[-121.978592,36.580488],[-121.970427,36.582754],[-121.964059,36.590571],[-121.959695,36.608959],[-121.941666,36.618059],[-121.938551,36.633908],[-121.93643,36.636746],[-121.929666,36.636959],[-121.923866,36.634559],[-121.890164,36.609259],[-121.889064,36.601759],[-121.871364,36.604559],[-121.860604,36.611136],[-121.842263,36.630059],[-121.831995,36.644856],[-121.825052,36.657207],[-121.814462,36.682858],[-121.807062,36.714157],[-121.805643,36.750239],[-121.788278,36.803994],[-121.791544,36.815186],[-121.810552,36.850648]],[[-122.395056,38.864245],[-122.385184,38.852475],[-122.37696,38.849211],[-122.371552,38.844651],[-122.354304,38.837148],[-122.348624,38.83606],[-122.343552,38.841292],[-122.335439,38.843468],[-122.329759,38.842364],[-122.324047,38.846252],[-122.315359,38.839468],[-122.303007,38.842396],[-122.296031,38.838684],[-122.287998,38.839931],[-122.281647,38.82462],[-122.276607,38.81862],[-122.273983,38.809437],[-122.265599,38.796797],[-122.259647,38.789917],[-122.255695,38.781134],[-122.251983,38.767726],[-122.250111,38.755262],[-122.241487,38.743151],[-122.235135,38.740223],[-122.230815,38.730783],[-122.225038,38.722335],[-122.228415,38.720623],[-122.223038,38.704511],[-122.224206,38.699984],[-122.221646,38.696016],[-122.213822,38.693408],[-122.208206,38.695536],[-122.199726,38.683312],[-122.203422,38.677184],[-122.19803,38.669056],[-122.183245,38.657136],[-122.175644,38.658576],[-122.168301,38.655296],[-122.162333,38.644096],[-122.165949,38.640257],[-122.161212,38.635761],[-122.16254,38.632689],[-122.170429,38.629601],[-122.168349,38.619297],[-122.165965,38.617681],[-122.151468,38.625249],[-122.150021,38.621017],[-122.14198,38.609681],[-122.139388,38.609169],[-122.130476,38.590241],[-122.126187,38.575138],[-122.120731,38.559858],[-122.114075,38.537218],[-122.114955,38.53373],[-122.109595,38.521411],[-122.103281,38.513348]],[[-122.406786,38.155632],[-122.406793,38.15872],[-122.401363,38.161012],[-122.384774,38.160964],[-122.371116,38.15772],[-122.367561,38.158792],[-122.365582,38.166029],[-122.369751,38.175875],[-122.36679,38.183824],[-122.358565,38.181974],[-122.357051,38.190634],[-122.360257,38.197115],[-122.355128,38.196862],[-122.350502,38.192611],[-122.350681,38.201831],[-122.359241,38.209989],[-122.358267,38.218524],[-122.359924,38.230501],[-122.366787,38.247015],[-122.374587,38.244515],[-122.377187,38.248415],[-122.389744,38.260474],[-122.387242,38.273253],[-122.396717,38.272101],[-122.404592,38.281423],[-122.400823,38.289549],[-122.403589,38.299114],[-122.401739,38.30245],[-122.394917,38.304479],[-122.396336,38.309179],[-122.401953,38.314191],[-122.405401,38.322118],[-122.40914,38.320554],[-122.409719,38.325963],[-122.413732,38.330693],[-122.411993,38.334012],[-122.421514,38.339513],[-122.427329,38.34914],[-122.442283,38.359035],[-122.447196,38.359035],[-122.457741,38.367466],[-122.453574,38.374187],[-122.44789,38.379312],[-122.465891,38.390411],[-122.470191,38.397511],[-122.470591,38.404911],[-122.495492,38.423511],[-122.497475,38.424306],[-122.491391,38.43441],[-122.487107,38.431718],[-122.485507,38.437478],[-122.480003,38.44303],[-122.479955,38.448726],[-122.482991,38.45271],[-122.493691,38.45651],[-122.50155,38.455919],[-122.509469,38.457872],[-122.510049,38.46216],[-122.506092,38.464109],[-122.516244,38.470872],[-122.529592,38.469609],[-122.531396,38.478539],[-122.540536,38.488312],[-122.544901,38.496285],[-122.538201,38.497902],[-122.535534,38.501391],[-122.545527,38.506798],[-122.548807,38.511627],[-122.542367,38.513198],[-122.543893,38.519966],[-122.550623,38.522132],[-122.553677,38.525991],[-122.566644,38.525543],[-122.573999,38.540359],[-122.582148,38.549399],[-122.585076,38.549133],[-122.603282,38.558784],[-122.615031,38.558531],[-122.620846,38.560317],[-122.620281,38.56533],[-122.626095,38.569908],[-122.631451,38.569085],[-122.630494,38.579008],[-122.634996,38.586308],[-122.646314,38.598189],[-122.644695,38.603224],[-122.634732,38.614569],[-122.633588,38.619864],[-122.628293,38.623038],[-122.632996,38.627607],[-122.634096,38.636907],[-122.624196,38.649806],[-122.623785,38.664383],[-122.627396,38.667506]],[[-120.005316,39.316453],[-120.036657,39.316334],[-120.256345,39.316213],[-120.326159,39.316436],[-120.494466,39.315997],[-120.554585,39.315481],[-120.645795,39.315155],[-120.648739,39.31145],[-120.658104,39.3078],[-120.662552,39.310066],[-120.668602,39.308086],[-120.671433,39.310371],[-120.676187,39.307249],[-120.681992,39.306907],[-120.693017,39.301925],[-120.702509,39.299782],[-120.710419,39.292437],[-120.715128,39.292252],[-120.727893,39.288081],[-120.730066,39.285609],[-120.747225,39.274914],[-120.749171,39.270526],[-120.756282,39.264456],[-120.763881,39.263232],[-120.768718,39.256297],[-120.785069,39.248179],[-120.791447,39.241068],[-120.799152,39.238016],[-120.804028,39.233331],[-120.816647,39.229928],[-120.828673,39.223377],[-120.839223,39.215459],[-120.851713,39.212033],[-120.856588,39.20411],[-120.860808,39.192475],[-120.866934,39.189579],[-120.868849,39.180737],[-120.881552,39.179047],[-120.892251,39.175337],[-120.896942,39.176567],[-120.908805,39.170269],[-120.906289,39.165641],[-120.924503,39.160849],[-120.923368,39.157231],[-120.936904,39.151394],[-120.939581,39.146061],[-120.94749,39.143395],[-120.950062,39.136441],[-120.96608,39.127928],[-120.967886,39.122271],[-120.973171,39.119806],[-120.979315,39.110402],[-120.988717,39.111777],[-120.986324,39.102653],[-120.988951,39.084495],[-120.995853,39.081],[-120.991588,39.076878],[-120.998544,39.071916],[-120.997358,39.068056],[-121.002734,39.067534],[-121.002853,39.062725],[-121.007072,39.061218],[-121.008086,39.052667],[-121.02059,39.045346],[-121.021776,39.039165],[-121.02901,39.038427],[-121.031063,39.027955],[-121.037694,39.020805],[-121.037017,39.01755],[-121.041608,39.013791],[-121.052175,39.010686],[-121.061425,39.010208],[-121.068611,39.00516],[-121.080342,39.006862],[-121.080807,39.009699],[-121.090272,39.014267],[-121.096403,39.011649],[-121.104247,39.01185],[-121.10888,39.018209],[-121.118068,39.020107],[-121.125099,39.032451],[-121.133378,39.034376],[-121.136706,39.037706],[-121.150141,39.032227],[-121.152125,39.027043],[-121.16197,39.024428],[-121.172917,39.018465],[-121.179252,39.020004],[-121.18637,39.012867],[-121.19864,39.01748],[-121.204331,39.015743],[-121.205662,39.012055],[-121.221787,39.011962],[-121.228504,39.021575],[-121.233248,39.024748],[-121.240965,39.021374],[-121.248971,39.028671],[-121.253868,39.027645],[-121.265984,39.030379],[-121.273044,39.034183],[-121.279533,39.034618]],[[-120.003117,39.445044],[-120.00443,39.374908],[-120.00471,39.330488],[-120.005316,39.316453]],[[-117.673749,33.870831],[-117.674282,33.857956],[-117.662117,33.857499],[-117.63665,33.829975],[-117.607639,33.797731],[-117.580789,33.769477],[-117.569175,33.76461],[-117.536448,33.757665],[-117.533999,33.710355],[-117.497645,33.705575],[-117.474573,33.703811],[-117.459817,33.691714],[-117.413314,33.659302],[-117.415815,33.655268],[-117.457937,33.602189],[-117.496701,33.552615],[-117.51021,33.533999],[-117.509909,33.520546],[-117.503181,33.520405],[-117.503756,33.508945],[-117.509725,33.509062],[-117.509722,33.505019]],[[-117.509722,33.505019],[-117.509581,33.471633],[-117.515014,33.467739],[-117.538429,33.455643],[-117.557985,33.451633],[-117.57848,33.453927],[-117.593599,33.396819],[-117.59588,33.386629]],[[-117.59588,33.386629],[-117.607905,33.406317],[-117.631682,33.430528],[-117.645582,33.440728],[-117.684584,33.461927],[-117.689284,33.460155],[-117.691384,33.454028],[-117.715339,33.460553],[-117.726486,33.483427],[-117.761387,33.516326],[-117.784888,33.541525],[-117.801288,33.546324],[-117.814188,33.552224],[-117.840289,33.573523],[-117.87679,33.592322],[-117.89979,33.599622],[-117.927091,33.605521],[-117.940591,33.620021],[-118.000593,33.654319],[-118.029694,33.676418],[-118.064895,33.711018],[-118.088896,33.729817],[-118.101097,33.734117],[-118.116703,33.743549]],[[-120.005316,39.316453],[-120.005142,39.291258],[-120.005746,39.22521],[-120.002461,39.067489]],[[-121.141009,38.71198],[-121.151857,38.711502],[-121.198159,38.715009],[-121.299461,38.722201],[-121.327534,38.723916],[-121.411017,38.72992],[-121.484396,38.734598]],[[-121.436886,40.151905],[-121.44187,40.152075],[-121.446208,40.155874],[-121.442877,40.161856],[-121.442811,40.170049],[-121.445123,40.177692],[-121.436108,40.181878],[-121.439628,40.18782],[-121.444111,40.190745],[-121.439187,40.195085],[-121.412735,40.194314],[-121.407356,40.191404],[-121.401606,40.195346],[-121.400774,40.199811],[-121.395318,40.200428],[-121.385028,40.210297],[-121.368395,40.21223],[-121.361713,40.225581],[-121.367411,40.236005],[-121.364823,40.239135],[-121.367098,40.245572],[-121.356882,40.253371],[-121.349,40.265406],[-121.352671,40.268488],[-121.350322,40.275883],[-121.359133,40.276891],[-121.36303,40.281648],[-121.363195,40.287501],[-121.370265,40.287961],[-121.372248,40.294236],[-121.3768,40.297989],[-121.366689,40.301054],[-121.356626,40.29747],[-121.349041,40.306489],[-121.343024,40.306643],[-121.345571,40.312667],[-121.353544,40.315524],[-121.356331,40.319739],[-121.362372,40.322863],[-121.366133,40.321961],[-121.368909,40.32564],[-121.36796,40.331801],[-121.381826,40.340513],[-121.394092,40.339741],[-121.397478,40.342109],[-121.412066,40.342719],[-121.429353,40.350349],[-121.442738,40.34807],[-121.459431,40.350381],[-121.470395,40.350213],[-121.474458,40.357017],[-121.479111,40.360351],[-121.480992,40.366614],[-121.47354,40.374556],[-121.481972,40.381507],[-121.484117,40.388514],[-121.484278,40.396559],[-121.47997,40.411192],[-121.479598,40.419505],[-121.474029,40.423732],[-121.47689,40.42687],[-121.483197,40.427525],[-121.49788,40.432003],[-121.494509,40.441219],[-121.497635,40.445591]],[[-121.497635,40.445591],[-121.366111,40.445927],[-121.346531,40.449715],[-121.337575,40.445484],[-121.327826,40.445367]],[[-116.085165,33.425932],[-116.129863,33.42611],[-116.197591,33.428893],[-116.233551,33.428393],[-116.349881,33.427522],[-116.518401,33.426887],[-116.617687,33.427354],[-116.836747,33.426865],[-116.857095,33.426574],[-116.954054,33.427649],[-117.030861,33.426931],[-117.031381,33.430134],[-117.098815,33.43026],[-117.140275,33.432566],[-117.241271,33.431993],[-117.241668,33.448928],[-117.314651,33.472585],[-117.370925,33.490549],[-117.364272,33.505025],[-117.509722,33.505019]],[[-114.435429,34.079727],[-114.437683,34.071937],[-114.43934,34.057893],[-114.438602,34.050205],[-114.434949,34.037784],[-114.438266,34.022609],[-114.443821,34.016176],[-114.450206,34.012574],[-114.46283,34.008421],[-114.460264,33.996649],[-114.467932,33.992877],[-114.471138,33.98804],[-114.481455,33.981261],[-114.484784,33.975519],[-114.499883,33.961789],[-114.509568,33.957264],[-114.51586,33.958106],[-114.522002,33.955623],[-114.52868,33.947817],[-114.535478,33.934651],[-114.533679,33.926072],[-114.525361,33.922272],[-114.511511,33.911092],[-114.50792,33.903807],[-114.508708,33.90064],[-114.517808,33.894889],[-114.516501,33.885926],[-114.50434,33.876882],[-114.503017,33.867998],[-114.505638,33.864276],[-114.514673,33.858638],[-114.52453,33.858477],[-114.528451,33.854929],[-114.529597,33.848063],[-114.523409,33.835323],[-114.51997,33.825381],[-114.522714,33.818979],[-114.52805,33.814963],[-114.520094,33.799473],[-114.516734,33.788345],[-114.507089,33.76793],[-114.504863,33.760465],[-114.504483,33.750998],[-114.512348,33.734214],[-114.504176,33.728055],[-114.496565,33.719155],[-114.494197,33.707922],[-114.496489,33.696901],[-114.512409,33.691282],[-114.523959,33.685879],[-114.530348,33.679245],[-114.531523,33.675108],[-114.525201,33.658092],[-114.530244,33.65014],[-114.526947,33.637534],[-114.529662,33.622794],[-114.524619,33.61426],[-114.529186,33.60665],[-114.540617,33.591412],[-114.5403,33.580615],[-114.535965,33.569154],[-114.526834,33.557466],[-114.524599,33.552231],[-114.542011,33.542481],[-114.558898,33.531819],[-114.560963,33.516739],[-114.569533,33.509219],[-114.580468,33.506465],[-114.591554,33.499443],[-114.599713,33.484315],[-114.612472,33.470768],[-114.622918,33.456561],[-114.622283,33.447558],[-114.627125,33.433554]],[[-121.027084,38.300252],[-121.04057,38.297718],[-121.047494,38.291142],[-121.053475,38.293134],[-121.061672,38.29894],[-121.066653,38.299146],[-121.084232,38.286361],[-121.09544,38.281633],[-121.102203,38.283247],[-121.116829,38.277349],[-121.127782,38.277447],[-121.133825,38.271875],[-121.141997,38.268935],[-121.159908,38.26527],[-121.161201,38.26097],[-121.173079,38.255208],[-121.195752,38.254187],[-121.203407,38.248754],[-121.217451,38.2488],[-121.222512,38.244406],[-121.22925,38.247525],[-121.237498,38.247479],[-121.244785,38.244718],[-121.250828,38.24472],[-121.259036,38.250267],[-121.269228,38.252089],[-121.27767,38.249096],[-121.282267,38.249836],[-121.289951,38.242029],[-121.296154,38.23825],[-121.315661,38.236039],[-121.321962,38.232835],[-121.329199,38.232866],[-121.344024,38.22826],[-121.354682,38.231031],[-121.370914,38.229725],[-121.389672,38.23301],[-121.396042,38.227706],[-121.405172,38.22996],[-121.419103,38.236513],[-121.425607,38.243672],[-121.425081,38.250401],[-121.428643,38.253782],[-121.444916,38.256846],[-121.450426,38.254617],[-121.461574,38.259185],[-121.470958,38.259902],[-121.48007,38.253576],[-121.478741,38.245993],[-121.486613,38.240458],[-121.491669,38.22769],[-121.501008,38.226847],[-121.507487,38.222563],[-121.504335,38.212131],[-121.513551,38.202372],[-121.522128,38.201908],[-121.529152,38.193828],[-121.524455,38.185516],[-121.527831,38.18166],[-121.524614,38.174844],[-121.531398,38.1631],[-121.536151,38.158158],[-121.53631,38.151581],[-121.541671,38.151758],[-121.543399,38.147566],[-121.559176,38.143886],[-121.557688,38.136751],[-121.56244,38.135983],[-121.576968,38.12851],[-121.584074,38.120228],[-121.583502,38.113475],[-121.580783,38.111009],[-121.565751,38.105279],[-121.564035,38.101422],[-121.567184,38.097321],[-121.580022,38.094414]],[[-121.593273,38.313089],[-121.589816,38.322691],[-121.585221,38.325512],[-121.58348,38.3319],[-121.575216,38.327161],[-121.559353,38.342567],[-121.541103,38.346261],[-121.533929,38.349847],[-121.521001,38.361224],[-121.523728,38.374574],[-121.523241,38.380582],[-121.515817,38.385766],[-121.513097,38.396934],[-121.518521,38.410453],[-121.532425,38.429316],[-121.527046,38.434821],[-121.515352,38.434518],[-121.506585,38.437286],[-121.502665,38.44129],[-121.50116,38.451257],[-121.505168,38.469807],[-121.508867,38.472809],[-121.538766,38.474707],[-121.547467,38.481207],[-121.559167,38.498007],[-121.556747,38.50653],[-121.551866,38.513806],[-121.525178,38.518962],[-121.525566,38.523106],[-121.530767,38.527906],[-121.528467,38.532106],[-121.520366,38.535367],[-121.513199,38.540743],[-121.51129,38.54629],[-121.520965,38.566205],[-121.511566,38.575005],[-121.506275,38.586288],[-121.508668,38.596803],[-121.515766,38.602704],[-121.527667,38.604604],[-121.539067,38.601904],[-121.544567,38.597704],[-121.549869,38.599405],[-121.558268,38.608204],[-121.561568,38.618604],[-121.5651,38.642304],[-121.570469,38.647602],[-121.576068,38.648604],[-121.587169,38.642705],[-121.594069,38.644106],[-121.609569,38.661108],[-121.628014,38.674757],[-121.633774,38.686164],[-121.631214,38.696739],[-121.614222,38.709041],[-121.605278,38.719519],[-121.602894,38.735838]],[[-121.581354,36.899152],[-121.575797,36.893043],[-121.570515,36.897218],[-121.560272,36.897111],[-121.558452,36.910468],[-121.553415,36.915233],[-121.540016,36.920765],[-121.54068,36.925542],[-121.534463,36.930933],[-121.523591,36.93709],[-121.513813,36.945155],[-121.510231,36.954053],[-121.512275,36.959036],[-121.50528,36.964216],[-121.501488,36.971895],[-121.488949,36.983148],[-121.467939,36.976772],[-121.463561,36.978294],[-121.463656,36.984877],[-121.450607,36.988944],[-121.447346,36.982955],[-121.437697,36.97851],[-121.434563,36.973983],[-121.418538,36.960797],[-121.351395,36.960272],[-121.215406,36.961248]],[[-116.106181,32.618641],[-116.125848,32.616673],[-116.211033,32.610326],[-116.540708,32.583741],[-116.62705,32.576261],[-116.857154,32.557459],[-116.928055,32.550758],[-116.945956,32.550058],[-117.026358,32.542457],[-117.062759,32.539857],[-117.124862,32.534156],[-117.133363,32.575625],[-117.132963,32.597054],[-117.136664,32.618754],[-117.139464,32.627054],[-117.159865,32.660652],[-117.168866,32.671952],[-117.180366,32.681652],[-117.196767,32.688851],[-117.213068,32.687751],[-117.223868,32.683051],[-117.236237,32.671355],[-117.237294,32.667489],[-117.243738,32.662677],[-117.255169,32.700051],[-117.25757,32.72605],[-117.25537,32.745449],[-117.25257,32.752948],[-117.25497,32.786948],[-117.26107,32.803148],[-117.280971,32.822247],[-117.28217,32.839547],[-117.28117,32.843047],[-117.27387,32.851447],[-117.26497,32.848947],[-117.25617,32.859447],[-117.25167,32.874346],[-117.25447,32.900146],[-117.26047,32.931245],[-117.28077,33.012343],[-117.29337,33.034642],[-117.309771,33.07454],[-117.315278,33.093504],[-117.328359,33.121842],[-117.362572,33.168437],[-117.39148,33.202762],[-117.401926,33.213598],[-117.445583,33.268517],[-117.469794,33.296417],[-117.50565,33.334063],[-117.547693,33.365491],[-117.571722,33.378988],[-117.59588,33.386629]],[[-120.926449,38.077421],[-120.926545,38.073107],[-120.926347,37.886724],[-120.923251,37.793571],[-120.922645,37.759528],[-120.923245,37.757728],[-120.920665,37.738392],[-120.922367,37.737445],[-120.944445,37.742128],[-120.95416,37.738445],[-120.973165,37.747952],[-120.981775,37.756262],[-120.987333,37.756616],[-120.995696,37.760178],[-120.997771,37.755339],[-121.008,37.749091],[-121.012347,37.749528],[-121.011047,37.755027],[-121.01748,37.755406],[-121.028816,37.740704],[-121.037178,37.742525],[-121.045248,37.739424],[-121.046362,37.742634],[-121.051813,37.742507],[-121.052043,37.748522],[-121.059939,37.749263],[-121.066603,37.740091],[-121.076428,37.737574],[-121.083127,37.74184],[-121.088368,37.741052],[-121.089989,37.736601],[-121.096874,37.734423],[-121.099524,37.739824],[-121.110208,37.742043],[-121.111349,37.740028],[-121.10763,37.73228],[-121.116281,37.724661],[-121.128449,37.724227],[-121.131801,37.722051],[-121.137381,37.72414],[-121.141908,37.722716],[-121.146106,37.717499],[-121.155096,37.720323],[-121.160829,37.711142],[-121.15922,37.704439],[-121.165672,37.70425],[-121.163679,37.700377],[-121.168922,37.699125],[-121.176299,37.704047],[-121.180159,37.703416],[-121.175912,37.699421],[-121.181769,37.699001],[-121.180415,37.695829],[-121.183096,37.689984],[-121.187679,37.687635],[-121.195914,37.694802],[-121.198426,37.690273],[-121.201542,37.69615],[-121.208692,37.686302],[-121.216391,37.68787],[-121.223466,37.683608],[-121.22185,37.670329],[-121.229248,37.668928],[-121.229073,37.66434],[-121.23327,37.662512],[-121.240615,37.665231],[-121.246335,37.663319],[-121.271115,37.642487],[-121.273808,37.638285],[-121.32405,37.598831],[-121.333388,37.59105],[-121.375479,37.558408],[-121.471925,37.481783]],[[-120.648905,34.974393],[-120.63999,35.002963],[-120.63357,35.033085],[-120.629931,35.061515],[-120.629583,35.078362],[-120.630957,35.101941],[-120.635787,35.123805],[-120.644311,35.139616],[-120.651134,35.147768],[-120.662475,35.153357],[-120.675074,35.153061],[-120.686974,35.160708],[-120.698906,35.171192],[-120.714185,35.175998],[-120.734231,35.178472],[-120.74887,35.177795],[-120.754823,35.174701],[-120.756862,35.169208],[-120.756086,35.160459],[-120.760492,35.15971],[-120.778998,35.168897],[-120.786076,35.177666],[-120.805258,35.184973],[-120.846674,35.204429],[-120.856047,35.206487],[-120.873046,35.225688],[-120.89679,35.247877],[-120.896876,35.25399],[-120.889354,35.277819],[-120.87957,35.294184],[-120.8672,35.327154],[-120.862684,35.346776],[-120.862134,35.360744],[-120.866094,35.393008],[-120.869209,35.403276],[-120.884757,35.430196],[-120.896862,35.442243],[-120.907937,35.449069],[-120.946546,35.446715],[-120.950742,35.44802],[-120.955863,35.453743],[-120.969436,35.460197],[-120.976122,35.459028],[-121.003359,35.46071],[-121.025621,35.484598],[-121.05308,35.50753],[-121.059913,35.509671],[-121.101595,35.548814],[-121.126027,35.593058],[-121.133556,35.600455],[-121.143561,35.606046],[-121.166712,35.635399],[-121.188897,35.643138],[-121.195291,35.640734],[-121.251034,35.656641],[-121.272332,35.666708],[-121.284731,35.662508],[-121.284973,35.674109],[-121.289794,35.689428],[-121.296473,35.696824],[-121.304583,35.701794],[-121.314632,35.71331],[-121.315786,35.75252],[-121.326319,35.757531],[-121.324918,35.769347],[-121.332449,35.783106],[-121.346363,35.795183]],[[-122.081473,37.477838],[-122.096762,37.461905],[-122.096574,37.466138],[-122.111237,37.466288],[-122.113265,37.46753],[-122.123895,37.461117],[-122.121952,37.454182],[-122.127883,37.45269],[-122.138774,37.454802],[-122.141998,37.457728],[-122.153513,37.456677],[-122.157686,37.453495],[-122.165302,37.452843],[-122.175704,37.441884],[-122.182299,37.439362],[-122.185131,37.433769],[-122.190402,37.431472],[-122.191312,37.42545],[-122.187915,37.420016],[-122.187647,37.414747],[-122.192365,37.413868],[-122.194331,37.408867],[-122.189575,37.39128],[-122.190505,37.385253],[-122.201007,37.371215],[-122.202467,37.360272],[-122.193504,37.344997],[-122.185954,37.338701],[-122.182493,37.33264],[-122.175075,37.325741],[-122.183038,37.327314],[-122.186119,37.322489],[-122.192513,37.318795],[-122.186592,37.315546],[-122.18232,37.309528],[-122.175817,37.312749],[-122.170812,37.311982],[-122.166584,37.305617],[-122.16233,37.304413],[-122.165641,37.294864],[-122.154381,37.290423],[-122.152278,37.286055]],[[-122.292974,37.107318],[-122.306139,37.116383],[-122.313907,37.118161],[-122.322971,37.11546],[-122.330463,37.115338],[-122.337071,37.117382],[-122.338856,37.120854],[-122.337085,37.130795],[-122.337833,37.135936],[-122.344029,37.144099],[-122.359791,37.155574],[-122.36179,37.163593],[-122.367085,37.172817],[-122.37927,37.181128],[-122.390599,37.182988],[-122.397065,37.187249],[-122.405073,37.195791],[-122.407181,37.219465],[-122.408982,37.225258],[-122.415822,37.232839],[-122.419113,37.24147],[-122.418452,37.248521],[-122.411686,37.265844],[-122.401323,37.337009],[-122.40085,37.359225],[-122.409258,37.374805],[-122.423286,37.392542],[-122.443687,37.435941],[-122.445987,37.461541],[-122.452087,37.48054],[-122.467888,37.49814],[-122.472388,37.50054],[-122.493789,37.492341],[-122.499289,37.495341],[-122.516689,37.52134],[-122.519533,37.537302],[-122.513688,37.552239],[-122.518088,37.576138],[-122.517187,37.590637],[-122.501386,37.599637],[-122.496786,37.612136],[-122.494085,37.644035],[-122.496784,37.686433],[-122.502427,37.708133]],[[-122.391374,37.708331],[-122.39319,37.707531],[-122.387626,37.67906],[-122.374291,37.662206],[-122.3756,37.652389],[-122.387381,37.648462],[-122.386072,37.637662],[-122.365455,37.626208],[-122.35531,37.615736],[-122.358583,37.611155],[-122.370364,37.614427],[-122.373309,37.613773],[-122.378545,37.605592],[-122.360219,37.592501],[-122.317676,37.590865],[-122.315713,37.583666],[-122.305895,37.575484],[-122.262698,37.572866],[-122.251898,37.566321],[-122.244372,37.55814],[-122.214264,37.538505],[-122.196593,37.537196],[-122.194957,37.522469],[-122.168449,37.504143],[-122.155686,37.501198],[-122.149632,37.502671],[-122.140142,37.507907],[-122.130979,37.503652],[-122.127706,37.500053],[-122.116112,37.505386]],[[-121.472648,37.48217],[-121.486207,37.474146],[-121.484252,37.466032],[-121.477198,37.463248],[-121.473163,37.45726],[-121.462917,37.451489],[-121.46186,37.438799],[-121.469936,37.430872],[-121.46915,37.424733],[-121.472606,37.423345],[-121.466251,37.415034],[-121.463551,37.415934],[-121.456351,37.406735],[-121.456651,37.395535],[-121.448163,37.391677],[-121.436085,37.39613],[-121.42405,37.393635],[-121.412549,37.389435],[-121.409075,37.380672],[-121.415849,37.375916],[-121.41929,37.364445],[-121.42365,37.358837],[-121.41981,37.352807],[-121.42075,37.344737],[-121.40915,37.330637],[-121.411939,37.324445],[-121.405753,37.31099],[-121.414258,37.306509],[-121.42275,37.299138],[-121.423452,37.295287],[-121.431391,37.294994],[-121.436816,37.291971],[-121.443551,37.296638],[-121.44965,37.293939],[-121.448658,37.2903],[-121.454009,37.28405],[-121.459051,37.282739],[-121.453977,37.276427],[-121.454849,37.263141],[-121.457255,37.260943],[-121.45502,37.25555],[-121.45575,37.24944],[-121.441746,37.231127],[-121.431559,37.227816],[-121.422219,37.221934],[-121.421075,37.214826],[-121.416869,37.211262],[-121.415323,37.199001],[-121.410209,37.189596],[-121.411525,37.185407],[-121.408905,37.180842],[-121.413157,37.171953],[-121.407727,37.169006],[-121.407601,37.163241],[-121.404636,37.155989],[-121.400004,37.150863],[-121.393424,37.148131],[-121.392005,37.150256],[-121.383551,37.151487],[-121.381686,37.157635],[-121.384266,37.166201],[-121.379654,37.168006],[-121.372209,37.176962],[-121.364535,37.180318],[-121.360942,37.184321],[-121.354561,37.183893],[-121.346666,37.179914],[-121.342382,37.174192],[-121.332548,37.171277],[-121.328409,37.16595],[-121.314034,37.16791],[-121.311644,37.170041],[-121.305582,37.16661],[-121.29773,37.166429],[-121.290655,37.172132],[-121.290959,37.175427],[-121.286063,37.181139],[-121.281107,37.183603],[-121.275378,37.178739],[-121.262093,37.159323],[-121.23711,37.157204],[-121.236145,37.149724],[-121.232297,37.139893],[-121.226804,37.134774]],[[-122.498376,41.182675],[-122.399793,41.182806],[-122.317716,41.184851],[-122.19603,41.18444],[-122.147626,41.184554],[-122.126114,41.182969],[-122.018039,41.183232],[-121.807389,41.183285],[-121.718263,41.183387],[-121.446495,41.183484]],[[-121.497635,40.445591],[-121.514621,40.444922],[-121.532309,40.446265],[-121.565132,40.445797],[-121.57708,40.442454],[-121.581893,40.435813],[-121.589713,40.431282],[-121.600437,40.431763],[-121.608881,40.438294],[-121.615387,40.439063],[-121.639554,40.436857],[-121.645819,40.434752],[-121.655882,40.441882],[-121.686563,40.453088],[-121.696382,40.448876],[-121.708921,40.450841],[-121.719642,40.448658],[-121.721881,40.44524],[-121.734585,40.435632],[-121.776521,40.437706],[-121.787597,40.443635],[-121.78989,40.442289],[-121.804341,40.443533],[-121.806697,40.444978],[-121.813502,40.441369],[-121.830789,40.437656],[-121.838442,40.437536],[-121.850984,40.442601],[-121.864175,40.440388],[-121.872665,40.436181],[-121.877185,40.436907],[-121.892097,40.426925],[-121.89495,40.427305],[-121.901298,40.420915],[-121.913641,40.424202],[-121.921653,40.423122],[-121.926641,40.418587],[-121.941146,40.415363],[-121.950761,40.418938],[-121.960568,40.419283],[-121.96751,40.422115],[-121.989204,40.423392],[-121.994882,40.425652],[-121.997639,40.422795],[-122.00994,40.426767],[-122.015001,40.420938],[-122.020305,40.424153],[-122.030086,40.420987],[-122.030098,40.417717],[-122.035558,40.419687],[-122.044715,40.418478],[-122.052142,40.42038],[-122.05667,40.416845],[-122.072051,40.415301],[-122.08015,40.412281],[-122.091875,40.41114],[-122.09294,40.413754],[-122.098217,40.410206],[-122.098583,40.414758],[-122.112908,40.405074],[-122.118309,40.406452],[-122.121317,40.403357],[-122.129772,40.403038],[-122.129395,40.398763],[-122.149727,40.398084],[-122.159462,40.396954],[-122.163044,40.393176],[-122.177853,40.391839],[-122.182918,40.392501],[-122.187717,40.385344],[-122.180306,40.384791],[-122.172913,40.379159],[-122.183634,40.379339],[-122.192116,40.386024],[-122.193557,40.392311],[-122.199173,40.377943],[-122.206862,40.381787],[-122.214464,40.382587],[-122.217727,40.385285],[-122.229608,40.389057],[-122.233706,40.385578],[-122.251112,40.387194],[-122.255955,40.379919],[-122.264393,40.379786],[-122.280852,40.375787],[-122.294206,40.380462],[-122.299432,40.375493],[-122.309185,40.371155],[-122.322349,40.374875],[-122.328751,40.372825],[-122.33695,40.374174],[-122.342155,40.370901],[-122.355439,40.371926],[-122.364925,40.374165],[-122.380694,40.372193],[-122.388741,40.374279],[-122.394936,40.372062],[-122.403104,40.374386],[-122.412586,40.374536],[-122.416686,40.379289],[-122.422341,40.379244],[-122.432514,40.374503],[-122.445021,40.373398],[-122.451216,40.377894],[-122.462586,40.375467],[-122.470489,40.383932],[-122.479196,40.384111],[-122.482695,40.380517],[-122.494907,40.383647],[-122.499065,40.382295],[-122.505415,40.389526],[-122.513826,40.388386],[-122.519988,40.393675],[-122.525374,40.394294],[-122.521936,40.388115],[-122.525677,40.387613],[-122.53409,40.37956],[-122.540941,40.382422],[-122.541661,40.376518],[-122.551026,40.378122],[-122.550652,40.374873],[-122.564908,40.365503],[-122.578581,40.367996],[-122.585848,40.359277],[-122.595299,40.357993],[-122.602415,40.351011],[-122.610158,40.346409],[-122.620567,40.348235],[-122.625172,40.347455],[-122.621906,40.340385],[-122.632703,40.338121],[-122.633948,40.334138],[-122.645923,40.333184],[-122.650263,40.32863],[-122.663446,40.332205],[-122.673734,40.330444],[-122.675646,40.335434],[-122.689478,40.337997],[-122.693605,40.341596],[-122.705934,40.345176],[-122.710436,40.348253],[-122.731558,40.34692],[-122.730436,40.357939],[-122.740358,40.365],[-122.748608,40.365694],[-122.752079,40.360721],[-122.758151,40.363327],[-122.781164,40.35864],[-122.788057,40.355264],[-122.805573,40.355887],[-122.813463,40.35112],[-122.836368,40.348427],[-122.839597,40.345405],[-122.853671,40.342891],[-122.86291,40.345085],[-122.864312,40.34761],[-122.872274,40.348969],[-122.877891,40.346825],[-122.880529,40.34184],[-122.891086,40.333316],[-122.906228,40.317882],[-122.909696,40.312627],[-122.915177,40.311173],[-122.918213,40.306846],[-122.929964,40.307627],[-122.93411,40.313097],[-122.946227,40.310736],[-122.946715,40.30833],[-122.956888,40.310817],[-122.970354,40.310358],[-122.976505,40.315151],[-122.998696,40.307529],[-123.011917,40.306484],[-123.013548,40.303244],[-123.025233,40.303661],[-123.0338,40.298803],[-123.041255,40.290967],[-123.047839,40.291462],[-123.056668,40.285375],[-123.065426,40.286971]],[[-123.517906,42.000883],[-123.49883,42.000525],[-123.43477,42.001641],[-123.381776,41.999268],[-123.347562,41.999108],[-123.192361,42.005446],[-123.154908,42.008036],[-123.145959,42.009247],[-123.083956,42.005448],[-123.065655,42.004948],[-123.045254,42.003049],[-122.941597,42.003085],[-122.893961,42.002605],[-122.876148,42.003247],[-122.80008,42.004071],[-122.712942,42.004157],[-122.634739,42.004858],[-122.501135,42.00846],[-122.397984,42.008758],[-122.378193,42.009518],[-122.261127,42.007364],[-122.161328,42.007637],[-122.101922,42.005766],[-122.000319,42.003967],[-121.846712,42.00307],[-121.689159,42.000584],[-121.580865,41.998668],[-121.44754,41.997169]],[[-122.403514,38.150624],[-122.409798,38.136231],[-122.439577,38.116923],[-122.450377,38.116269],[-122.454958,38.118887],[-122.484411,38.11496],[-122.490727,38.109755]],[[-123.002911,38.295708],[-123.024333,38.310573],[-123.038742,38.313576],[-123.051061,38.310693],[-123.053504,38.299385],[-123.058239,38.298355],[-123.063671,38.302178],[-123.074684,38.322574],[-123.068437,38.33521],[-123.068265,38.359865],[-123.085572,38.390525],[-123.103706,38.415541],[-123.122379,38.437314],[-123.128825,38.450418],[-123.145325,38.459422],[-123.166428,38.474947],[-123.202277,38.494314],[-123.249797,38.511045],[-123.287156,38.540223],[-123.297151,38.543452],[-123.331899,38.565542],[-123.343338,38.590008],[-123.349612,38.596805],[-123.371876,38.607235],[-123.379303,38.621953],[-123.398166,38.647044],[-123.40301,38.649449],[-123.405663,38.656729],[-123.43272,38.687131],[-123.441774,38.699744],[-123.461291,38.717001],[-123.490021,38.732213],[-123.514784,38.741966],[-123.525152,38.753801],[-123.533535,38.768408]],[[-120.652673,37.831422],[-120.547596,37.754778],[-120.54188,37.749943],[-120.442102,37.674602],[-120.387613,37.633704]]]}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/app.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 14d6d14066f8bc7c3a98","module.exports = d3;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 0\n// module chunks = 0","import { groupBy } from \"../utils/array\";\r\n\r\nconst categories: ICategory[] = require(\"./categories.json\");\r\n\r\n// transform into array\r\nconst departmentJson: any = require(\"./departments.json\");\r\nconst departments: IDepartment[] = Object.keys(departmentJson).map((k) => {\r\n    const categoryKey = departmentJson[k].category;\r\n    const categoryIndex = categories.findIndex(c => c.key === categoryKey);\r\n    return {\r\n        key: k,\r\n        name: departmentJson[k].name,\r\n        categoryKey: categoryKey,\r\n        categoryIndex: categoryIndex,\r\n    };\r\n}).filter(d => d.categoryIndex > -1);\r\n\r\n// transform into array\r\nconst sourceJson: any = require(\"./sources.json\");\r\nconst sources: ISource[] = Object.keys(sourceJson).map((k) => {\r\n    return {\r\n        key: k,\r\n        name: sourceJson[k].name as string,\r\n        parentSourceName: sourceJson[k].category as string,\r\n    };\r\n});\r\n\r\n// parse projects\r\nconst projectJson: any[] = require(\"./projectTotals.json\");\r\nconst projects: IProject[] = projectJson.map(p => {\r\n    const categoryKey = departmentJson[p.dept].category;\r\n    const categoryIndex = categories.findIndex(c => c.key === categoryKey);\r\n    return {\r\n        key: p.project,\r\n        name: p.project,\r\n        categoryKey: categoryKey,\r\n        categoryIndex: categoryIndex,\r\n        departmentKey: p.dept,\r\n        total: p.total,\r\n    };\r\n}).filter(p => p.categoryIndex > -1);\r\n\r\nconst sourceTotalsByDepartmentJson: any = require(\"./sourceTotalsByDepartment.json\");\r\nconst sourceTotals: ISourceTotal[] = [];\r\nfor (const sourceKey of Object.keys(sourceTotalsByDepartmentJson)) {\r\n\r\n    const totals = sourceTotalsByDepartmentJson[sourceKey];\r\n    const source = sources.find(s => s.key === sourceKey);\r\n\r\n    if (source === undefined) {\r\n        console.info(\"Could not find source: \", sourceKey);\r\n        continue;\r\n    }\r\n\r\n    const result: ISourceTotal = {\r\n        key: sourceKey,\r\n        source: source,\r\n        byDeparment: [],\r\n        byCategory: categories.map(c => { return { ...c, total: 0 }; }),\r\n        total: 0\r\n    };\r\n\r\n    // loop through departments\r\n    for (const departmentKey of Object.keys(totals)) {\r\n        const department = departments.find(d => d.key === departmentKey);\r\n        if (department === undefined) {\r\n            console.info(\"Could not find department: \", departmentKey);\r\n            continue;\r\n        }\r\n\r\n        const total: number = totals[departmentKey] || 0;\r\n\r\n        // don't include empty/negative departments\r\n        if (total <= 0) {\r\n            continue;\r\n        }\r\n\r\n        // add department entry\r\n        result.byDeparment.push({\r\n            ...department,\r\n            total,\r\n        });\r\n\r\n        // find and update category entry\r\n        const category = result.byCategory.find(c => c.key === department.categoryKey);\r\n        if (category === undefined) {\r\n            console.info(\"Could not find category: \", department.categoryKey);\r\n            continue;\r\n        }\r\n        category.total += total;\r\n\r\n        // update result total\r\n        result.total += total;\r\n    }\r\n\r\n    // don't include empty/negative results\r\n    if (result.total <= 0) {\r\n        continue;\r\n    }\r\n\r\n    sourceTotals.push(result);\r\n}\r\n\r\n\r\n\r\nexport interface ICategory {\r\n    key: string;\r\n    name: string;\r\n    color: string;\r\n    icon: string;\r\n}\r\n\r\nexport interface ICategoryTotal extends ICategory {\r\n    total: number;\r\n}\r\n\r\nexport interface IDepartment {\r\n    key: string;\r\n    name: string;\r\n    categoryKey: string;\r\n    categoryIndex: number;\r\n}\r\n\r\nexport interface IDepartmentTotal extends IDepartment {\r\n    total: number;\r\n}\r\n\r\nexport interface IProject {\r\n    key: string;\r\n    name: string;\r\n    categoryKey: string;\r\n    categoryIndex: number;\r\n    departmentKey: string;\r\n    total: number;\r\n}\r\n\r\nexport interface ISource {\r\n    key: string;\r\n    name: string;\r\n    parentSourceName: string;\r\n}\r\n\r\nexport interface ISourceTotal {\r\n    key: string;\r\n    source: ISource;\r\n    byDeparment: IDepartmentTotal[];\r\n    byCategory: ICategoryTotal[];\r\n    total: number;\r\n}\r\n\r\nexport function getDepartments(): IDepartment[] {\r\n    return [...departments];\r\n}\r\n\r\nexport function getSources(): ISource[] {\r\n    return [...sources];\r\n}\r\n\r\nexport function getSourceTotals(): ISourceTotal[] {\r\n    return [...sourceTotals];\r\n}\r\n\r\nexport function getCategories(): ICategory[] {\r\n    return [...categories];\r\n}\r\n\r\nexport function getProjects(): IProject[] {\r\n    return [...projects];\r\n}\r\n\r\nlet selectedCategory = -1;\r\nexport function getSelectedCategory(): number {\r\n    return selectedCategory;\r\n}\r\n\r\nexport function setSelectedCategory(category: string): number {\r\n    const index = categories.findIndex(c => c.name === category);\r\n    selectedCategory = index;\r\n\r\n    events.forEach(e => {\r\n        e(index);\r\n    });\r\n\r\n    return selectedCategory;\r\n}\r\n\r\nexport interface SelectedCategoryChangedEvent {\r\n    (index: number): void;\r\n}\r\n\r\nconst events: SelectedCategoryChangedEvent[] = [];\r\nexport function onSelectedCategoryChanged(func: SelectedCategoryChangedEvent) {\r\n    events.push(func);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/js/data.ts","import identity from \"./identity\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/transform.js\n// module id = 3\n// module chunks = 0","import reverse from \"./reverse\";\nimport transform from \"./transform\";\n\nexport default function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/feature.js\n// module id = 4\n// module chunks = 0","export default function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/hash/hashmap.js\n// module id = 5\n// module chunks = 0","export function planarTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n}\n\nexport function planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area) / 2;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-simplify/src/planar.js\n// module id = 6\n// module chunks = 0","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 7\n// module chunks = 0","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (!obj) {\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/color/index.js\n// module id = 8\n// module chunks = 0","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/color-name/index.js\n// module id = 9\n// module chunks = 0","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar v;\n\n\tif (max === 0) {\n\t\ts = 0;\n\t} else {\n\t\ts = (delta / max * 1000) / 10;\n\t}\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tv = ((max / 255) * 1000) / 10;\n\n\treturn [h, s, v];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/color-convert/conversions.js\n// module id = 10\n// module chunks = 0","import transform from \"./transform\";\n\nexport default function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/bbox.js\n// module id = 11\n// module chunks = 0","export default function(x) {\n  return x;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/identity.js\n// module id = 12\n// module chunks = 0","export default function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/stitch.js\n// module id = 13\n// module chunks = 0","import identity from \"./identity\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/untransform.js\n// module id = 14\n// module chunks = 0","export default function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/hash/point-equal.js\n// module id = 15\n// module chunks = 0","// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16),\n    floats = new Float64Array(buffer),\n    uints = new Uint32Array(buffer);\n\nexport default function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/hash/point-hash.js\n// module id = 16\n// module chunks = 0","export default function(topology) {\n  var ownerByArc = new Array(topology.arcs.length), // arc index -> index of unique associated ring, or -1 if used by multiple rings\n      ownerIndex = 0,\n      key;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n      case \"Polygon\": testArcs(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ownerIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var owner = ownerByArc[arc];\n        if (owner == null) ownerByArc[arc] = ownerIndex;\n        else if (owner !== ownerIndex) ownerByArc[arc] = -1;\n      }\n    }\n  }\n\n  for (key in topology.objects) {\n    testGeometry(topology.objects[key]);\n  }\n\n  return function(ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (ownerByArc[(arc = ring[j]) < 0 ? ~arc : arc] === -1) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-simplify/src/filterAttached.js\n// module id = 17\n// module chunks = 0","import {feature} from \"topojson-client\";\nimport {planarRingArea} from \"./planar\";\n\nexport default function(topology, minWeight, weight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  if (weight == null) weight = planarRingArea;\n\n  return function(ring, interior) {\n    return weight(feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-simplify/src/filterWeight.js\n// module id = 18\n// module chunks = 0","import \"../sass/app.scss\";\r\n\r\nimport * as $ from \"jquery\";\r\nimport \"slick-carousel\";\r\n\r\nimport \"./totals\";\r\nimport \"./bubble\";\r\nimport \"./sources\";\r\nimport \"./map\";\r\n\r\nimport { setSelectedCategory } from \"./data\";\r\n\r\nconst $topicBar = $(\"#topic-bar\");\r\nconst $root = $(\"html, body\");\r\nfunction smoothScroll(href: string) {\r\n    const target = ($(href).offset() || { top: 0 }).top;\r\n    const offset = $topicBar.height() || 0;\r\n    const margin = 50;\r\n\r\n    $root.animate({\r\n        scrollTop: target - offset - margin\r\n    }, 500, function () {\r\n        // window.location.hash = href;\r\n    });\r\n}\r\n\r\nfunction handleTopicChanged(topic: string) {\r\n    setSelectedCategory(topic);\r\n\r\n    // decorate body\r\n    $root.data(\"topic\", topic);\r\n\r\n    // decorate topic button\r\n    $(\".topic-button\").each(function() {\r\n        const t = $(this).data(\"topic\");\r\n        if (t === topic) {\r\n            $(this).addClass(\"active\");\r\n        } else {\r\n            $(this).removeClass(\"active\");\r\n        }\r\n    });\r\n}\r\n\r\nfunction setupTopicSelector() {\r\n    // attach listeners\r\n    $(\".topic-button\").click(function() {\r\n        const topic = $(this).data(\"topic\");\r\n        handleTopicChanged(topic);\r\n        handleTopicChanged(topic);\r\n\r\n        showRandomArticle(topic);\r\n    });\r\n\r\n    $(\".topic-all\").click(function(e) {\r\n        e.preventDefault();\r\n        handleTopicChanged(\"\");\r\n        showRandomArticle(\"\");\r\n    });\r\n}\r\n\r\nfunction setupScroll() {\r\n    // get fixed position\r\n    const startTop = Math.ceil($topicBar.position().top) + 1;\r\n\r\n    // add sticky\r\n    $topicBar.addClass(\"sticky-top\");\r\n\r\n    // setup scroll spy\r\n    const handleScroll = () => {\r\n        const top = $topicBar.position().top;\r\n        if (top > startTop) {\r\n            $topicBar.addClass(\"thin\");\r\n        } else {\r\n            $topicBar.removeClass(\"thin\");\r\n        }\r\n    };\r\n    $(window).scroll(handleScroll);\r\n\r\n    // prefire\r\n    handleScroll();\r\n}\r\n\r\nconst $carousel = $(\".lead_carousel\");\r\nfunction setupSlideshow() {\r\n    $carousel.slick({\r\n        variableWidth: true,\r\n        arrows: false,\r\n        autoplay: true,\r\n        autoplaySpeed: 3000\r\n    });\r\n}\r\n\r\nconst $articleLinks = $(\".lead_carousel .article-link\");\r\nconst $articles = $(\".article\");\r\nfunction setupArticleSelect() {\r\n    $(\".lead_carousel\").on(\"click\", \".article-link\", function(e) {\r\n        e.preventDefault();\r\n\r\n        // mark one slide as active\r\n        $articleLinks.removeClass(\"active\");\r\n        $(this).addClass(\"active\");\r\n\r\n        // hide all articles\r\n        $articles.hide();\r\n\r\n        // show single article\r\n        const href = $(this).attr(\"href\") || \"\";\r\n        $(href).show();\r\n        smoothScroll(href);\r\n\r\n        // set topic\r\n        const topic = $(this).data(\"topic\");\r\n        handleTopicChanged(topic);\r\n    });\r\n}\r\n\r\nfunction showRandomArticle(topic: string) {\r\n    // deactivate active article, show random one\r\n    $articleLinks.removeClass(\"active\");\r\n    $articles.hide();\r\n\r\n    let article;\r\n    if (!topic) {\r\n        const articleIndex = Math.floor(Math.random() * $articles.length);\r\n        article = $articles[articleIndex];\r\n    } else {\r\n        const $topicArticles = $articles.filter(function() {\r\n            const t = $(this).data(\"topic\");\r\n            return t === topic;\r\n        });\r\n        const articleIndex = Math.floor(Math.random() * $topicArticles.length);\r\n        article = $topicArticles[articleIndex];\r\n    }\r\n    // show article\r\n    $(article).show();\r\n\r\n    // find an select slide as active\r\n    const id = article.id;\r\n    for (let i = 0; i < $articleLinks.length; i++) {\r\n        const $articleLink = $($articleLinks[i]);\r\n        if ($articleLink.attr(\"href\") === `#${id}`) {\r\n            $articleLink.addClass(\"active\");\r\n            $carousel.slick(\"slickGoTo\", i);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n$().ready(() => {\r\n    setupTopicSelector();\r\n    setupScroll();\r\n    setupSlideshow();\r\n    setupArticleSelect();\r\n    showRandomArticle(\"\");\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/js/app.ts","import { getProjects, getCategories, getSelectedCategory, onSelectedCategoryChanged } from \"./data\";\r\n\r\nconst categories = getCategories();\r\nconst projects = getProjects();\r\n\r\nfunction getTotal() {\r\n    const categoryIndex = getSelectedCategory();\r\n    if (categoryIndex < 0) {\r\n        return projects.reduce((prev, p) => prev + p.total, 0);\r\n    }\r\n\r\n    const category = categories[categoryIndex];\r\n    const total = projects\r\n        .filter(p => p.categoryKey == category.key)\r\n        .reduce((prev, p) => prev + p.total, 0);\r\n\r\n    return total;\r\n}\r\n\r\nfunction getCategoryTopic() {\r\n    const categoryIndex = getSelectedCategory();\r\n    if (categoryIndex < 0) {\r\n        return \"\";\r\n    }\r\n    const category = categories[categoryIndex];\r\n    return category.name;\r\n}\r\n\r\nconst totalSpans = document.getElementsByClassName(\"total-span\");\r\n\r\nfunction setTotals() {\r\n    const total = getTotal();\r\n    const millions = total / 1000000;\r\n    const topic = getCategoryTopic();\r\n\r\n    for (let i = 0; i < totalSpans.length; i++) {\r\n        const span = totalSpans[i] as HTMLSpanElement;\r\n        span.innerText = `$${millions.toFixed(1)} Million`;\r\n        span.setAttribute(\"data-topic\", topic);\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"load\", setTotals);\r\n\r\nonSelectedCategoryChanged(setTotals);\n\n\n// WEBPACK FOOTER //\n// ./src/public/js/totals.ts","module.exports = [{\"key\":\"AG\",\"name\":\"Agriculture\",\"color\":\"#78be20\",\"icon\":\"/media/seed-intro.svg\"},{\"key\":\"ENV\",\"name\":\"Environment\",\"color\":\"#008eaa\",\"icon\":\"/media/tree-intro.svg\"},{\"key\":\"HUMAN\",\"name\":\"Human\",\"color\":\"#ffcd00\",\"icon\":\"/media/brain-intro.svg\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/js/categories.json\n// module id = 22\n// module chunks = 0","module.exports = {\"ARE\":{\"name\":\"Agricultural & Resource Economics\",\"category\":\"HUMAN\"},\"BAE\":{\"name\":\"Biological & Agricultural Engineering\",\"category\":\"AG\"},\"PLS\":{\"name\":\"Plant Sciences\",\"category\":\"AG\"},\"PLB\":{\"name\":\"Plant Biology\",\"category\":\"BIO\"},\"PPA\":{\"name\":\"Plant Pathology\",\"category\":\"AG\"},\"ASC\":{\"name\":\"Animal Science\",\"category\":\"AG\"},\"HCE\":{\"name\":\"Human Ecology\",\"category\":\"HUMAN\"},\"TXC\":{\"name\":\"Textiles & Clothing\",\"category\":\"HUMAN\"},\"ESP\":{\"name\":\"Environmental Science & Policy\",\"category\":\"ENV\"},\"ENM\":{\"name\":\"Entomology & Nematology\",\"category\":\"AG\"},\"ETX\":{\"name\":\"Environmental Toxicology\",\"category\":\"ENV\"},\"LAW\":{\"name\":\"Land, Air & Water Resources\",\"category\":\"ENV\"},\"WFB\":{\"name\":\"Wildlife, Fish & Conservation Biology\",\"category\":\"ENV\"},\"VIT\":{\"name\":\"Viticulture & Enology\",\"category\":\"AG\"},\"FST\":{\"name\":\"Food Science & Technology\",\"category\":\"HUMAN\"},\"NTR\":{\"name\":\"Nutrition\",\"category\":\"HUMAN\"},\"MCB\":{\"name\":\"Molecular & Cellular Biology\",\"category\":\"BIO\"},\"EVE\":{\"name\":\"Evolution & Ecology\",\"category\":\"BIO\"},\"MIC\":{\"name\":\"Microbiology & Molecular Genetics\",\"category\":\"BIO\"},\"NPB\":{\"name\":\"Neurobiology, Physiology & Behavior\",\"category\":\"BIO\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/js/departments.json\n// module id = 23\n// module chunks = 0","module.exports = {\"f201\":{\"name\":\"Hatch Funds\",\"category\":\"CSREES Admin Federal Research Funds\"},\"f202\":{\"name\":\"Multi-State Research Funds\",\"category\":\"CSREES Admin Federal Research Funds\"},\"f203\":{\"name\":\"McIntire-Stennis Funds\",\"category\":\"CSREES Admin Federal Research Funds\"},\"f204\":{\"name\":\"Contracts, Grants, Research Coop Agreements\",\"category\":\"CSREES Admin Federal Research Funds\"},\"f205\":{\"name\":\"Other Funds (Animal Health Sec 1433, Evans-Allen)\",\"category\":\"CSREES Admin Federal Research Funds\"},\"f219\":{\"name\":\"USDA Contracts, Grans, Coop Agreements\",\"category\":\"Other Federal Research Funds\"},\"f209\":{\"name\":\"National Security Foundation\",\"category\":\"Other Federal Research Funds\"},\"f310\":{\"name\":\"Department of Energy\",\"category\":\"Other Federal Research Funds\"},\"f308\":{\"name\":\"Agency for International Development\",\"category\":\"Other Federal Research Funds\"},\"f311\":{\"name\":\"Department of Defense\",\"category\":\"Other Federal Research Funds\"},\"f316\":{\"name\":\"National Institutes of Health\",\"category\":\"Other Federal Research Funds\"},\"f312\":{\"name\":\"Public Health Service\",\"category\":\"Other Federal Research Funds\"},\"f313\":{\"name\":\"Health and Human Services\",\"category\":\"Other Federal Research Funds\"},\"f314\":{\"name\":\"National Aeronautics and Space Admin\",\"category\":\"Other Federal Research Funds\"},\"f315\":{\"name\":\"Tennessee Valley Authority\",\"category\":\"Other Federal Research Funds\"},\"f318\":{\"name\":\"Other Federal Funds (including 'pass-through')\",\"category\":\"Other Federal Research Funds\"},\"f220\":{\"name\":\"State Appropriations\",\"category\":\"Non-Federal Research Funds\"},\"f22F\":{\"name\":\"Field Stations\",\"category\":\"Non-Federal Research Funds\"},\"f221\":{\"name\":\"Self-Generated Funds\",\"category\":\"Non-Federal Research Funds\"},\"f222\":{\"name\":\"Industry Grants and Agreements\",\"category\":\"Non-Federal Research Funds\"},\"f223\":{\"name\":\"Other Non-Federal Funds\",\"category\":\"Non-Federal Research Funds\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/js/sources.json\n// module id = 24\n// module chunks = 0","module.exports = [{\"project\":\"CA-D-ARE-2027-H\",\"dept\":\"ARE\",\"total\":361557.08},{\"project\":\"CA-D-ARE-2186-RR\",\"dept\":\"ARE\",\"total\":196229.69},{\"project\":\"CA-D-ARE-2194-H\",\"dept\":\"ARE\",\"total\":83252.68},{\"project\":\"CA-D-ARE-2197-H \",\"dept\":\"ARE\",\"total\":300293.52},{\"project\":\"CA-D-ARE-2198-H\",\"dept\":\"ARE\",\"total\":165951.74},{\"project\":\"CA-D-ARE-2199-H\",\"dept\":\"ARE\",\"total\":179449.44},{\"project\":\"CA-D-ARE-2200-H\",\"dept\":\"ARE\",\"total\":428557.85},{\"project\":\"CA-D-ARE-2215-H\",\"dept\":\"ARE\",\"total\":128428.73},{\"project\":\"CA-D-ARE-2249-H\",\"dept\":\"ARE\",\"total\":165148.92},{\"project\":\"CA-D-ARE-2251-H\",\"dept\":\"ARE\",\"total\":201054.45},{\"project\":\"CA-D-ARE-2254-H\",\"dept\":\"ARE\",\"total\":401403.14},{\"project\":\"CA-D-ARE-2280-H\",\"dept\":\"ARE\",\"total\":259799.48},{\"project\":\"CA-D-ARE-2294-H\",\"dept\":\"ARE\",\"total\":234828.84},{\"project\":\"CA-D-ARE-2298-H\",\"dept\":\"ARE\",\"total\":233247.7},{\"project\":\"CA-D-ARE-2331-CG\",\"dept\":\"ARE\",\"total\":259799.48},{\"project\":\"CA-D-ARE-2363-H\",\"dept\":\"ARE\",\"total\":213976.35},{\"project\":\"CA-D-ARE-2364-H\",\"dept\":\"ARE\",\"total\":5564755.32},{\"project\":\"CA-D-ARE-6585-H\",\"dept\":\"ARE\",\"total\":220922.98},{\"project\":\"CA-D-ARE-6987-H\",\"dept\":\"ARE\",\"total\":316291.61},{\"project\":\"CA-D-ARE-7307-RR\",\"dept\":\"ARE\",\"total\":192554.48},{\"project\":\"CA-D-ARE-7639-RR\",\"dept\":\"ARE\",\"total\":413522.52},{\"project\":\"CA-D-ARE-7733-H\",\"dept\":\"ARE\",\"total\":324636.88},{\"project\":\"CA-D-ARE-7740-H\",\"dept\":\"ARE\",\"total\":83336.57},{\"project\":\"CA-D-ARE-7820-H\",\"dept\":\"ARE\",\"total\":331263.77},{\"project\":\"CA-D-ARE-7833-H\",\"dept\":\"ARE\",\"total\":241197.36},{\"project\":\"CA-D-ARE-7837-H\",\"dept\":\"ARE\",\"total\":162547.02},{\"project\":\"CA-D-ASC-2002-RR\",\"dept\":\"ASC\",\"total\":188418.72},{\"project\":\"CA-D-ASC-2003-RR\",\"dept\":\"ASC\",\"total\":303004.67},{\"project\":\"CA-D-ASC-2024-RR\",\"dept\":\"ASC\",\"total\":302371.78},{\"project\":\"CA-D-ASC-2070-RR\",\"dept\":\"ASC\",\"total\":253198.55},{\"project\":\"CA-D-ASC-2095-RR\",\"dept\":\"ASC\",\"total\":331420.83},{\"project\":\"CA-D-ASC-2138-RR\",\"dept\":\"ASC\",\"total\":239120.97},{\"project\":\"CA-D-ASC-2155-RR\",\"dept\":\"ASC\",\"total\":213536.68},{\"project\":\"CA-D-ASC-2156-RR\",\"dept\":\"ASC\",\"total\":213536.68},{\"project\":\"CA-D-ASC-2157-RR\",\"dept\":\"ASC\",\"total\":213536.68},{\"project\":\"CA-D-ASC-2193-RR\",\"dept\":\"ASC\",\"total\":1390611.07},{\"project\":\"CA-D-ASC-2209-RR\",\"dept\":\"ASC\",\"total\":208817.97},{\"project\":\"CA-D-ASC-2237-OG\",\"dept\":\"ASC\",\"total\":289210.68},{\"project\":\"CA-D-ASC-2239-RR\",\"dept\":\"ASC\",\"total\":213536.68},{\"project\":\"CA-D-ASC-2240-RR\",\"dept\":\"ASC\",\"total\":213536.68},{\"project\":\"CA-D-ASC-2250-AH\",\"dept\":\"ASC\",\"total\":792457.46},{\"project\":\"CA-D-ASC-2252-H\",\"dept\":\"ASC\",\"total\":267061.26},{\"project\":\"CA-D-ASC-2253-RR\",\"dept\":\"ASC\",\"total\":267061.26},{\"project\":\"CA-D-ASC-2262-RR\",\"dept\":\"ASC\",\"total\":210837.55},{\"project\":\"CA-D-ASC-2263-H\",\"dept\":\"ASC\",\"total\":95023.38},{\"project\":\"CA-D-ASC-2283-CG \",\"dept\":\"ASC\",\"total\":252335.32},{\"project\":\"CA-D-ASC-2286-H\",\"dept\":\"ASC\",\"total\":93409.15},{\"project\":\"CA-D-ANS-2299-CG\",\"dept\":\"ASC\",\"total\":234938.72},{\"project\":\"CA-D-ASC-2303-RR\",\"dept\":\"ASC\",\"total\":159873.21},{\"project\":\"CA-D-ASC-2304-RR\",\"dept\":\"ASC\",\"total\":233512.13},{\"project\":\"CA-D-ASC-2306-RR\",\"dept\":\"ASC\",\"total\":136130.21},{\"project\":\"CA-D-ASC-2307-RR\",\"dept\":\"ASC\",\"total\":233517.06},{\"project\":\"CA-D-ASC-2308-CG\",\"dept\":\"ASC\",\"total\":350727.67},{\"project\":\"CA-D-ASC-2339-RR\",\"dept\":\"ASC\",\"total\":407463.24},{\"project\":\"CA-D-ASC-2341-RR\",\"dept\":\"ASC\",\"total\":119550.89},{\"project\":\"CA-D-ASC-2342-RR\",\"dept\":\"ASC\",\"total\":119550.89},{\"project\":\"CA-D-ASC-2355-RR\",\"dept\":\"ASC\",\"total\":194546.67},{\"project\":\"CA-D-ASC-2356-RR\",\"dept\":\"ASC\",\"total\":194546.67},{\"project\":\"CA-D-ASC-2360-H\",\"dept\":\"ASC\",\"total\":254042.66},{\"project\":\"CA-D-ASC-2371-RR\",\"dept\":\"ASC\",\"total\":235033.55},{\"project\":\"CA-D-ASC-2372-CG\",\"dept\":\"ASC\",\"total\":221185.13},{\"project\":\"CA-D-ASC-2374-OG\",\"dept\":\"ASC\",\"total\":143000.08},{\"project\":\"CA-D-ASC-2380-CG\",\"dept\":\"ASC\",\"total\":237105.33},{\"project\":\"CA-D-ASC-2389-RR\",\"dept\":\"ASC\",\"total\":244447.84},{\"project\":\"CA-D-ASC-2390-RR\",\"dept\":\"ASC\",\"total\":244447.84},{\"project\":\"CA-D-ASC-2414-CG\",\"dept\":\"ASC\",\"total\":207229.47},{\"project\":\"CA-D-ASC-2420-CG\",\"dept\":\"ASC\",\"total\":305259.92},{\"project\":\"CA-D-ASC-5929-RR \",\"dept\":\"ASC\",\"total\":413242.26},{\"project\":\"CA-D-ASC-6414-RR\",\"dept\":\"ASC\",\"total\":165487.84},{\"project\":\"CA-D-ASC-6578-H\",\"dept\":\"ASC\",\"total\":426204.83},{\"project\":\"CA-D-ASC-6796-RR\",\"dept\":\"ASC\",\"total\":253764.09},{\"project\":\"CA-D-ASC-7233-RR\",\"dept\":\"ASC\",\"total\":230352.84},{\"project\":\"CA-D-ASC-7281-RR\",\"dept\":\"ASC\",\"total\":165509.34},{\"project\":\"CA-D-ASC-7366-RR\",\"dept\":\"ASC\",\"total\":372423.25},{\"project\":\"CA-D-ASC-7369-RR\",\"dept\":\"ASC\",\"total\":409668.51},{\"project\":\"CA-D-ASC-7373-RR\",\"dept\":\"ASC\",\"total\":207229.47},{\"project\":\"CA-D-ASC-7384-RR\",\"dept\":\"ASC\",\"total\":207253.84},{\"project\":\"CA-D-ASC-7507-H\",\"dept\":\"ASC\",\"total\":181815.06},{\"project\":\"CA-D-ASC-7624-RR\",\"dept\":\"ASC\",\"total\":260364.29},{\"project\":\"CA-D-ASC-7666-RR\",\"dept\":\"ASC\",\"total\":239120.97},{\"project\":\"CA-D-ASC-7690-H\",\"dept\":\"ASC\",\"total\":309959.29},{\"project\":\"CA-D-ASC-7744-RR\",\"dept\":\"ASC\",\"total\":459552.32},{\"project\":\"CA-D-ASC-7771-RR\",\"dept\":\"ASC\",\"total\":155907.82},{\"project\":\"CA-D-ASC-7776-RR\",\"dept\":\"ASC\",\"total\":155907.82},{\"project\":\"CA-D-BAE-2005-RR\",\"dept\":\"BAE\",\"total\":772177.02},{\"project\":\"CA-D-BAE-2011-RR\",\"dept\":\"BAE\",\"total\":131459.69},{\"project\":\"CA-D-BAE-2031-H\",\"dept\":\"BAE\",\"total\":343550.44},{\"project\":\"CA-D-BAE-2190-RR\",\"dept\":\"BAE\",\"total\":147242.14},{\"project\":\"CA-D-BAE-2208-CG\",\"dept\":\"BAE\",\"total\":384729.14},{\"project\":\"CA-D-BAE-2212-H\",\"dept\":\"BAE\",\"total\":126322.62},{\"project\":\"CA-D-BAE-2225-CG\",\"dept\":\"BAE\",\"total\":379209.44},{\"project\":\"CA-D-BAE-2228-RR\",\"dept\":\"BAE\",\"total\":494349.61},{\"project\":\"CA-D-BAE-2230-RR\",\"dept\":\"BAE\",\"total\":168204.62},{\"project\":\"CA-D-BAE-2231-RR\",\"dept\":\"BAE\",\"total\":273539.31},{\"project\":\"CA-D-BAE-2270-OG\",\"dept\":\"BAE\",\"total\":807219.17},{\"project\":\"CA-D-BAE-2271-OG\",\"dept\":\"BAE\",\"total\":350897.4},{\"project\":\"CA-D-BAE-2277-RR\",\"dept\":\"BAE\",\"total\":326144.68},{\"project\":\"CA-D-BAE-2312-OG\",\"dept\":\"BAE\",\"total\":185035.14},{\"project\":\"CA-D-BAE-2314-CG\",\"dept\":\"BAE\",\"total\":494513.14},{\"project\":\"CA-D-BAE-2335-RR\",\"dept\":\"BAE\",\"total\":290519.37},{\"project\":\"CA-D-BAE-2375-OG\",\"dept\":\"BAE\",\"total\":454236.79},{\"project\":\"CA-D-BAE-6444-H\",\"dept\":\"BAE\",\"total\":137904.4},{\"project\":\"CA-D-BAE-7098-H\",\"dept\":\"BAE\",\"total\":473636.21},{\"project\":\"CA-D-BAE-7099-H\",\"dept\":\"BAE\",\"total\":506104.65},{\"project\":\"CA-D-BAE-7725-H\",\"dept\":\"BAE\",\"total\":131459.69},{\"project\":\"CA-D-BAE-7737-RR\",\"dept\":\"BAE\",\"total\":772177.02},{\"project\":\"CA-D-BAE-7746-H\",\"dept\":\"BAE\",\"total\":218791.31},{\"project\":\"CA-D-BAE-7808-RR\",\"dept\":\"BAE\",\"total\":247844.17},{\"project\":\"CA-D-ENM-2064-H\",\"dept\":\"ENM\",\"total\":379998.73},{\"project\":\"CA-D-ENM-2103-H\",\"dept\":\"ENM\",\"total\":328209.58},{\"project\":\"CA-D-ENM-2105-H\",\"dept\":\"ENM\",\"total\":1149456.8},{\"project\":\"CA-D-ENM-2141-H\",\"dept\":\"ENM\",\"total\":590095.02},{\"project\":\"CA-D-ENM-2150-H\",\"dept\":\"ENM\",\"total\":1087890.3},{\"project\":\"CA-D-ENM-2161-H\",\"dept\":\"ENM\",\"total\":350081.7},{\"project\":\"CA-D-ENM-2174-OG\",\"dept\":\"ENM\",\"total\":948073.55},{\"project\":\"CA-D-ENM-2189-RR\",\"dept\":\"ENM\",\"total\":241036.21},{\"project\":\"CA-D-ENM-2309-H\",\"dept\":\"ENM\",\"total\":687052.9},{\"project\":\"CA-D-ENM-2316-OG\",\"dept\":\"ENM\",\"total\":338407.37},{\"project\":\"CA-D-ENM-2351-H\",\"dept\":\"ENM\",\"total\":240438.55},{\"project\":\"CA-D-ENM-2353-RR\",\"dept\":\"ENM\",\"total\":251034.16},{\"project\":\"CA-D-ENM-2354-RR\",\"dept\":\"ENM\",\"total\":240438.55},{\"project\":\"CA-D-ENM-4162-H\",\"dept\":\"ENM\",\"total\":397657.7},{\"project\":\"CA-D-ENM-4278-H\",\"dept\":\"ENM\",\"total\":251034.16},{\"project\":\"CA-D-ENM-5234-H\",\"dept\":\"ENM\",\"total\":380991.29},{\"project\":\"CA-D-ENM-5671-RR\",\"dept\":\"ENM\",\"total\":290725.37},{\"project\":\"CA-D-ENM-6020-H\",\"dept\":\"ENM\",\"total\":328263.55},{\"project\":\"CA-D-ENM-6264-H\",\"dept\":\"ENM\",\"total\":857282.53},{\"project\":\"CA-D-ENM-6546-H\",\"dept\":\"ENM\",\"total\":362861.66},{\"project\":\"CA-D-ENM-6772-H\",\"dept\":\"ENM\",\"total\":444325.29},{\"project\":\"CA-D-ENM-6851-H\",\"dept\":\"ENM\",\"total\":545983.16},{\"project\":\"CA-D-ENM-7136-H\",\"dept\":\"ENM\",\"total\":304914.31},{\"project\":\"CA-D-ENM-7314-RR\",\"dept\":\"ENM\",\"total\":251046.42},{\"project\":\"CA-D-ENM-7356-RR\",\"dept\":\"ENM\",\"total\":260966.39},{\"project\":\"CA-D-ENM-7654-H\",\"dept\":\"ENM\",\"total\":2298344.34},{\"project\":\"CA-D-ESP-2020-H\",\"dept\":\"ESP\",\"total\":374374.01},{\"project\":\"CA-D-ESP-2084-H\",\"dept\":\"ESP\",\"total\":255647.14},{\"project\":\"CA-D-ESP-2086-H\",\"dept\":\"ESP\",\"total\":261191},{\"project\":\"CA-D-ESP-2087-H\",\"dept\":\"ESP\",\"total\":292331.16},{\"project\":\"CA-D-ESP-2094-H\",\"dept\":\"ESP\",\"total\":283711.1},{\"project\":\"CA-D-ESP-2163-H\",\"dept\":\"ESP\",\"total\":616384.65},{\"project\":\"CA-D-ESP-2201-H \",\"dept\":\"ESP\",\"total\":437142.14},{\"project\":\"CA-D-ESP-2244-H\",\"dept\":\"ESP\",\"total\":286215.04},{\"project\":\"CA-D-ESP-2245-H\",\"dept\":\"ESP\",\"total\":487499.52},{\"project\":\"CA-D-ESP-2367-OG\",\"dept\":\"ESP\",\"total\":294730.47},{\"project\":\"CA-D-ESP-7005-H\",\"dept\":\"ESP\",\"total\":298908.09},{\"project\":\"CA-D-ESP-7104-H\",\"dept\":\"ESP\",\"total\":687292.66},{\"project\":\"CA-D-ESP-7122-H\",\"dept\":\"ESP\",\"total\":475685.48},{\"project\":\"CA-D-ESP-7140-H\",\"dept\":\"ESP\",\"total\":247903.28},{\"project\":\"CA-D-ESP-7687-H\",\"dept\":\"ESP\",\"total\":304065},{\"project\":\"CA-D-ESP-7853-H\",\"dept\":\"ESP\",\"total\":487792.66},{\"project\":\"CA-D-ETX-2102-H\",\"dept\":\"ETX\",\"total\":274050.9},{\"project\":\"CA-D-ETX-2152-H\",\"dept\":\"ETX\",\"total\":272571.99},{\"project\":\"CA-D-ETX-2227-H\",\"dept\":\"ETX\",\"total\":502575.98},{\"project\":\"CA-D-ETX-2233-H\",\"dept\":\"ETX\",\"total\":779976.79},{\"project\":\"CA-D-ETX-2293-SG\",\"dept\":\"ETX\",\"total\":2051898.26},{\"project\":\"CA-D-ETX-2345-H\",\"dept\":\"ETX\",\"total\":119363.97},{\"project\":\"CA-D-ETX-2421-CG\",\"dept\":\"ETX\",\"total\":123560.31},{\"project\":\"CA-D-ETX-3926-H\",\"dept\":\"ETX\",\"total\":298066.86},{\"project\":\"CA-D-ETX-6718-H\",\"dept\":\"ETX\",\"total\":1524797.18},{\"project\":\"CA-D-ETX-7751-RR\",\"dept\":\"ETX\",\"total\":369194.77},{\"project\":\"CA-D-EVE-2241-H\",\"dept\":\"EVE\",\"total\":680414.28},{\"project\":\"CA-D-EVE-2264-H\",\"dept\":\"EVE\",\"total\":97445.44},{\"project\":\"CA-D-EVE-2265-H\",\"dept\":\"EVE\",\"total\":100074.84},{\"project\":\"CA-D-EVE-2266-H\",\"dept\":\"EVE\",\"total\":330519.7},{\"project\":\"CA-D-EVE-2268-H\",\"dept\":\"EVE\",\"total\":292202.61},{\"project\":\"CA-D-EVE-2365-H\",\"dept\":\"EVE\",\"total\":126972.56},{\"project\":\"CA-D-EVE-2369-H\",\"dept\":\"EVE\",\"total\":145245.98},{\"project\":\"CA-D-EVE-3515-H\",\"dept\":\"EVE\",\"total\":326650.95},{\"project\":\"CA-D-EVE-4244-H\",\"dept\":\"EVE\",\"total\":388918.68},{\"project\":\"CA-D-EVE-5490-H\",\"dept\":\"EVE\",\"total\":131629.89},{\"project\":\"CA-D-EVE-5542-H\",\"dept\":\"EVE\",\"total\":463108.7},{\"project\":\"CA-D-EVE-5630-H\",\"dept\":\"EVE\",\"total\":100296.98},{\"project\":\"CA-D-EVE-6882-H\",\"dept\":\"EVE\",\"total\":402711.29},{\"project\":\"CA-D-EVE-7118-H\",\"dept\":\"EVE\",\"total\":98666.24},{\"project\":\"CA-D-FST-2028-H\",\"dept\":\"FST\",\"total\":634302.89},{\"project\":\"CA-D-FST-2090-H\",\"dept\":\"FST\",\"total\":213773.12},{\"project\":\"CA-D-FST-2093-H\",\"dept\":\"FST\",\"total\":272696.9},{\"project\":\"CA-D-FST-2106-H\",\"dept\":\"FST\",\"total\":310820.36},{\"project\":\"CA-D-FST-2187-H\",\"dept\":\"FST\",\"total\":724638.17},{\"project\":\"CA-D-FST-2236-RR\",\"dept\":\"FST\",\"total\":336256.43},{\"project\":\"CA-D-FST-2281-CG\",\"dept\":\"FST\",\"total\":365911.21},{\"project\":\"CA-D-FST-2282-CG\",\"dept\":\"FST\",\"total\":1066127.12},{\"project\":\"CA-D-FST-2317-H\",\"dept\":\"FST\",\"total\":338377.88},{\"project\":\"CA-D-FST-2321-OG\",\"dept\":\"FST\",\"total\":281849.88},{\"project\":\"CA-D-FST-2348-RR\",\"dept\":\"FST\",\"total\":361322.3},{\"project\":\"CA-D-FST-2366-OG\",\"dept\":\"FST\",\"total\":196744.81},{\"project\":\"CA-D-FST-2377-OG\",\"dept\":\"FST\",\"total\":307852.33},{\"project\":\"CA-D-FST-2379-RR\",\"dept\":\"FST\",\"total\":195483.28},{\"project\":\"CA-D-FST-3627-H\",\"dept\":\"FST\",\"total\":161874.07},{\"project\":\"CA-D-FST-4929-H\",\"dept\":\"FST\",\"total\":646461.14},{\"project\":\"CA-D-FST-6097-H\",\"dept\":\"FST\",\"total\":351427.94},{\"project\":\"CA-D-FST-6568-H\",\"dept\":\"FST\",\"total\":1701786.13},{\"project\":\"CA-D-FST-6975-H\",\"dept\":\"FST\",\"total\":361344.27},{\"project\":\"CA-D-FST-7105-H\",\"dept\":\"FST\",\"total\":306905.72},{\"project\":\"CA-D-FST-7598-H \",\"dept\":\"FST\",\"total\":666620.18},{\"project\":\"CA-D-HCE-2049-H\",\"dept\":\"HCE\",\"total\":192082.12},{\"project\":\"CA-D-HCE-2050-H\",\"dept\":\"HCE\",\"total\":487326.13},{\"project\":\"CA-D-HCE-2051-H\",\"dept\":\"HCE\",\"total\":146368.92},{\"project\":\"CA-D-HCE-2055-H\",\"dept\":\"HCE\",\"total\":126682.12},{\"project\":\"CA-D-HCE-2151-H\",\"dept\":\"HCE\",\"total\":202138.32},{\"project\":\"CA-D-HCE-2159-RR\",\"dept\":\"HCE\",\"total\":146368.92},{\"project\":\"CA-D-HCE-2184-RR\",\"dept\":\"HCE\",\"total\":147234.26},{\"project\":\"CA-D-HCE-2195-H\",\"dept\":\"HCE\",\"total\":103843.31},{\"project\":\"CA-D-HCE-2213-H\",\"dept\":\"HCE\",\"total\":89907.86},{\"project\":\"CA-D-HCE-2214-H\",\"dept\":\"HCE\",\"total\":143448.41},{\"project\":\"CA-D-HCE-2220-H\",\"dept\":\"HCE\",\"total\":98823.99},{\"project\":\"CA-D-HCE-2234-H\",\"dept\":\"HCE\",\"total\":84481.5},{\"project\":\"CA-D-HCE-2267-H\",\"dept\":\"HCE\",\"total\":255500.08},{\"project\":\"CA-D-HCE-2269-H\",\"dept\":\"HCE\",\"total\":171985.46},{\"project\":\"CA-D-HCE-2300-H\",\"dept\":\"HCE\",\"total\":158067.23},{\"project\":\"CA-D-HCE-2302-H \",\"dept\":\"HCE\",\"total\":110958.15},{\"project\":\"CA-D-HCE-2319-H\",\"dept\":\"HCE\",\"total\":151096.51},{\"project\":\"CA-D-HCE-2344-RR\",\"dept\":\"HCE\",\"total\":120584.91},{\"project\":\"CA-D-HCE-2358-H\",\"dept\":\"HCE\",\"total\":123525.33},{\"project\":\"CA-D-HCE-2361-H\",\"dept\":\"HCE\",\"total\":145888.01},{\"project\":\"CA-D-HCE-2362-H\",\"dept\":\"HCE\",\"total\":257664},{\"project\":\"CA-D-HCE-7035-H\",\"dept\":\"HCE\",\"total\":104897.03},{\"project\":\"CA-D-HCE-7513-H\",\"dept\":\"HCE\",\"total\":381187.65},{\"project\":\"CA-D-HCE-7743-H\",\"dept\":\"HCE\",\"total\":151215.15},{\"project\":\"CA-D-LAW-2058-H\",\"dept\":\"LAW\",\"total\":145099.81},{\"project\":\"CA-D-LAW-2076-H\",\"dept\":\"LAW\",\"total\":122358.14},{\"project\":\"CA-D-LAW-2085-H\",\"dept\":\"LAW\",\"total\":125208.25},{\"project\":\"CA-D-LAW-2122-H\",\"dept\":\"LAW\",\"total\":303198.32},{\"project\":\"CA-D-LAW-2128-CG\",\"dept\":\"LAW\",\"total\":429360.92},{\"project\":\"CA-D-LAW-2177-OG\",\"dept\":\"LAW\",\"total\":250297.92},{\"project\":\"CA-D-LAW-2178-H\",\"dept\":\"LAW\",\"total\":414251.68},{\"project\":\"CA-D-LAW-2203-H\",\"dept\":\"LAW\",\"total\":847470.38},{\"project\":\"CA-D-LAW-2217-CG\",\"dept\":\"LAW\",\"total\":425354.89},{\"project\":\"CA-D-LAW-2229-H\",\"dept\":\"LAW\",\"total\":507427.89},{\"project\":\"CA-D-LAW-2243-H\",\"dept\":\"LAW\",\"total\":553400.7},{\"project\":\"CA-D-LAW-2256-CG\",\"dept\":\"LAW\",\"total\":635920.92},{\"project\":\"CA-D-LAW-2274-RR\",\"dept\":\"LAW\",\"total\":660634.14},{\"project\":\"CA-D-LAW-2295-H\",\"dept\":\"LAW\",\"total\":356569.7},{\"project\":\"CA-D-LAW-2296-H\",\"dept\":\"LAW\",\"total\":498798},{\"project\":\"CA-D-LAW-2315-RR\",\"dept\":\"LAW\",\"total\":122358.14},{\"project\":\"CA-D-LAW-2333-OG\",\"dept\":\"LAW\",\"total\":420909.32},{\"project\":\"CA-D-LAW-2352-H\",\"dept\":\"LAW\",\"total\":469607.59},{\"project\":\"CA-D-LAW-2386-OG \",\"dept\":\"LAW\",\"total\":122554.14},{\"project\":\"CA-D-LAW-4264-H\",\"dept\":\"LAW\",\"total\":309180.3},{\"project\":\"CA-D-LAW-4526-H\",\"dept\":\"LAW\",\"total\":373464.52},{\"project\":\"CA-D-LAW-5332-H\",\"dept\":\"LAW\",\"total\":308785.21},{\"project\":\"CA-D-LAW-5631-RR\",\"dept\":\"LAW\",\"total\":918607.08},{\"project\":\"CA-D-LAW-5661-H\",\"dept\":\"LAW\",\"total\":520641.83},{\"project\":\"CA-D-LAW-6036-H\",\"dept\":\"LAW\",\"total\":811808.18},{\"project\":\"CA-D-LAW-6397-H\",\"dept\":\"LAW\",\"total\":114036.55},{\"project\":\"CA-D-LAW-6403-RR\",\"dept\":\"LAW\",\"total\":327200.87},{\"project\":\"CA-D-LAW-6864-H\",\"dept\":\"LAW\",\"total\":169339.44},{\"project\":\"CA-D-LAW-6910-H\",\"dept\":\"LAW\",\"total\":227308.7},{\"project\":\"CA-D-LAW-6999-H\",\"dept\":\"LAW\",\"total\":376553.99},{\"project\":\"CA-D-LAW-7034-H\",\"dept\":\"LAW\",\"total\":482660.73},{\"project\":\"CA-D-LAW-7137-H\",\"dept\":\"LAW\",\"total\":256455.24},{\"project\":\"CA-D-LAW-7214-RR\",\"dept\":\"LAW\",\"total\":373464.52},{\"project\":\"CA-D-LAW-7348-RR\",\"dept\":\"LAW\",\"total\":215087.81},{\"project\":\"CA-D-LAW-7349-RR\",\"dept\":\"LAW\",\"total\":120880.39},{\"project\":\"CA-D-LAW-7350-RR\",\"dept\":\"LAW\",\"total\":120880.39},{\"project\":\"CA-D-LAW-7551-RR\",\"dept\":\"LAW\",\"total\":221414.92},{\"project\":\"CA-D-MCB-2310-H\",\"dept\":\"MCB\",\"total\":53294.96},{\"project\":\"CA-D-MCB-4126-H\",\"dept\":\"MCB\",\"total\":543605.77},{\"project\":\"CA-D-MCB-5554-H\",\"dept\":\"MCB\",\"total\":618483.22},{\"project\":\"CA-D-MCB-5896-H\",\"dept\":\"MCB\",\"total\":109084.6},{\"project\":\"CA-D-MCB-6239-H\",\"dept\":\"MCB\",\"total\":211795.51},{\"project\":\"CA-D-MCB-6365-H\",\"dept\":\"MCB\",\"total\":168706.63},{\"project\":\"CA-D-MCB-6471-H\",\"dept\":\"MCB\",\"total\":48556.64},{\"project\":\"CA-D-MCB-6731-H\",\"dept\":\"MCB\",\"total\":58146.64},{\"project\":\"CA-D-MCB-6735-H\",\"dept\":\"MCB\",\"total\":295257.33},{\"project\":\"CA-D-MCB-7165-H\",\"dept\":\"MCB\",\"total\":62918.16},{\"project\":\"CA-D-MCB-7237-H\",\"dept\":\"MCB\",\"total\":240170.78},{\"project\":\"CA-D-MCB-7399-H\",\"dept\":\"MCB\",\"total\":214952.25},{\"project\":\"CA-D-MCB-7420-H\",\"dept\":\"MCB\",\"total\":347008.31},{\"project\":\"CA-D-MMG-2313-H\",\"dept\":\"MIC\",\"total\":81518.49},{\"project\":\"CA-D-MMG-5733-H\",\"dept\":\"MIC\",\"total\":76769.34},{\"project\":\"CA-D-MMG-7235-H\",\"dept\":\"MIC\",\"total\":217780.93},{\"project\":\"CA-D-MMG-7402-H\",\"dept\":\"MIC\",\"total\":64986.84},{\"project\":\"CA-D-MMG-7473-H\",\"dept\":\"MIC\",\"total\":211160.9},{\"project\":\"CA-D-NPB-2330-H\",\"dept\":\"NPB\",\"total\":383187.29},{\"project\":\"CA-D-NPB-3512-H\",\"dept\":\"NPB\",\"total\":503868.4},{\"project\":\"CA-D-NPB-6309-H\",\"dept\":\"NPB\",\"total\":804803.98},{\"project\":\"CA-D-NPB-7153-H\",\"dept\":\"NPB\",\"total\":389995},{\"project\":\"CA-D-NTR-2060-H\",\"dept\":\"NTR\",\"total\":276147.45},{\"project\":\"CA-D-NTR-2092-H\",\"dept\":\"NTR\",\"total\":1637848.92},{\"project\":\"CA-D-NTR-2242-H\",\"dept\":\"NTR\",\"total\":340306.83},{\"project\":\"CA-D-NTR-2285-CG\",\"dept\":\"NTR\",\"total\":837141.47},{\"project\":\"CA-D-NTR-2407-CG\",\"dept\":\"NTR\",\"total\":255443.45},{\"project\":\"CA-D-NTR-4543-H\",\"dept\":\"NTR\",\"total\":1745304.75},{\"project\":\"CA-D-NTR-5908-H\",\"dept\":\"NTR\",\"total\":1648725.69},{\"project\":\"CA-D-NTR-5966-H\",\"dept\":\"NTR\",\"total\":503003.67},{\"project\":\"CA-D-NTR-6316-H\",\"dept\":\"NTR\",\"total\":2700298.97},{\"project\":\"CA-D-NTR-7836-H\",\"dept\":\"NTR\",\"total\":692505.85},{\"project\":\"CA-D-PLB-2259-H\",\"dept\":\"PLB\",\"total\":751667.86},{\"project\":\"CA-D-PLB-2260-H\",\"dept\":\"PLB\",\"total\":296373.15},{\"project\":\"CA-D-PLB-3504-H\",\"dept\":\"PLB\",\"total\":119312.55},{\"project\":\"CA-D-PLB-3511-CG\",\"dept\":\"PLB\",\"total\":327030.52},{\"project\":\"CA-D-PLB-3514-CG\",\"dept\":\"PLB\",\"total\":373991.52},{\"project\":\"CA-D-PLB-6167-H\",\"dept\":\"PLB\",\"total\":636835.15},{\"project\":\"CA-D-PLB-6991-H\",\"dept\":\"PLB\",\"total\":353546.17},{\"project\":\"CA-D-PLB-7226-H\",\"dept\":\"PLB\",\"total\":220838.99},{\"project\":\"CA-D-PLB-7381-H\",\"dept\":\"PLB\",\"total\":366547.81},{\"project\":\"CA-D-PLB-7412-H\",\"dept\":\"PLB\",\"total\":230911.52},{\"project\":\"CA-D-PLS-2013-H\",\"dept\":\"PLS\",\"total\":2260041.66},{\"project\":\"CA-D-PLS-2016-H\",\"dept\":\"PLS\",\"total\":952918.4},{\"project\":\"CA-D-PLS-2017-H\",\"dept\":\"PLS\",\"total\":279425.33},{\"project\":\"CA-D-PLS-2066-H\",\"dept\":\"PLS\",\"total\":1219983.83},{\"project\":\"CA-D-PLS-2073-H\",\"dept\":\"PLS\",\"total\":357603.83},{\"project\":\"CA-D-PLS-2078-H\",\"dept\":\"PLS\",\"total\":884739.72},{\"project\":\"CA-D-PLS-2079-H\",\"dept\":\"PLS\",\"total\":340808.54},{\"project\":\"CA-D-PLS-2125-CG\",\"dept\":\"PLS\",\"total\":1482012.44},{\"project\":\"CA-D-PLS-2127-CG\",\"dept\":\"PLS\",\"total\":683139.33},{\"project\":\"CA-D-PLS-2129-H\",\"dept\":\"PLS\",\"total\":850719.93},{\"project\":\"CA-D-PLS-2132-H\",\"dept\":\"PLS\",\"total\":406063.02},{\"project\":\"CA-D-PLS-2164-H\",\"dept\":\"PLS\",\"total\":229432.81},{\"project\":\"CA-D-PLS-2173-H\",\"dept\":\"PLS\",\"total\":233775.47},{\"project\":\"CA-D-PLS-2179-H\",\"dept\":\"PLS\",\"total\":1064739.62},{\"project\":\"CA-D-PLS-2183-H\",\"dept\":\"PLS\",\"total\":919012.02},{\"project\":\"CA-D-PLS-2205-H\",\"dept\":\"PLS\",\"total\":200617.29},{\"project\":\"CA-D-PLS-2218-OG\",\"dept\":\"PLS\",\"total\":329737.57},{\"project\":\"CA-D-PLS-2219-H\",\"dept\":\"PLS\",\"total\":339298.54},{\"project\":\"CA-D-PLS-2221-CG\",\"dept\":\"PLS\",\"total\":262918.18},{\"project\":\"CA-D-PLS-2222-CG\",\"dept\":\"PLS\",\"total\":263445.31},{\"project\":\"CA-D-PLS-2224-H\",\"dept\":\"PLS\",\"total\":724643.36},{\"project\":\"CA-D-PLS-2235-H\",\"dept\":\"PLS\",\"total\":279978.08},{\"project\":\"CA-D-PLS-2246-RR\",\"dept\":\"PLS\",\"total\":687222.01},{\"project\":\"CA-D-PLS-2247-H\",\"dept\":\"PLS\",\"total\":962770.72},{\"project\":\"CA-D-PLS-2272-OG\",\"dept\":\"PLS\",\"total\":212266.09},{\"project\":\"CA-D-PLS-2273-OG\",\"dept\":\"PLS\",\"total\":214788.7},{\"project\":\"CA-D-PLS-2276-OG\",\"dept\":\"PLS\",\"total\":273668.25},{\"project\":\"CA-D-PLS-2279-OG\",\"dept\":\"PLS\",\"total\":292535.3},{\"project\":\"CA-D-PLS-2289-OG\",\"dept\":\"PLS\",\"total\":236080.7},{\"project\":\"CA-D-PLS-2291-CG\",\"dept\":\"PLS\",\"total\":207636.7},{\"project\":\"CA-D-PLS-2305-CG\",\"dept\":\"PLS\",\"total\":196764.12},{\"project\":\"CA-D-PLS-2311-OG\",\"dept\":\"PLS\",\"total\":299355.7},{\"project\":\"CA-D-PLS-2324-OG\",\"dept\":\"PLS\",\"total\":187819.7},{\"project\":\"CA-D-PLS-2325-OG\",\"dept\":\"PLS\",\"total\":321920.18},{\"project\":\"CA-D-PLS-2327-H\",\"dept\":\"PLS\",\"total\":240858.96},{\"project\":\"CA-D-PLS-2329-OG\",\"dept\":\"PLS\",\"total\":304008.44},{\"project\":\"CA-D-PLS-2332-H\",\"dept\":\"PLS\",\"total\":579317.42},{\"project\":\"CA-D-PLS-2343-RR\",\"dept\":\"PLS\",\"total\":555935.26},{\"project\":\"CA-D-PLS-2349-H\",\"dept\":\"PLS\",\"total\":3112393.34},{\"project\":\"CA-D-PLS-2350-H\",\"dept\":\"PLS\",\"total\":515660.7},{\"project\":\"CA-D-PLS-2359-OG\",\"dept\":\"PLS\",\"total\":358947.08},{\"project\":\"CA-D-PLS-2370-CG\",\"dept\":\"PLS\",\"total\":217902.23},{\"project\":\"CA-D-PLS-2373-CG\",\"dept\":\"PLS\",\"total\":471580.44},{\"project\":\"CA-D-PLS-2378-OG\",\"dept\":\"PLS\",\"total\":168413.7},{\"project\":\"CA-D-PLS-2383-OG\",\"dept\":\"PLS\",\"total\":149728.7},{\"project\":\"CA-D-PLS-2384-OG\",\"dept\":\"PLS\",\"total\":234617.33},{\"project\":\"CA-D-PLS-2385-OG\",\"dept\":\"PLS\",\"total\":175370.32},{\"project\":\"CA-D-PLS-2418-CG\",\"dept\":\"PLS\",\"total\":149480.7},{\"project\":\"CA-D-PLS-2424-CG\",\"dept\":\"PLS\",\"total\":140984.12},{\"project\":\"CA-D-PLS 5457-RR\",\"dept\":\"PLS\",\"total\":203897.48},{\"project\":\"CA-D-PLS-5629-H\",\"dept\":\"PLS\",\"total\":750807.18},{\"project\":\"CA-D-PLS-5884-H\",\"dept\":\"PLS\",\"total\":635037.43},{\"project\":\"CA-D-PLS-5983-H\",\"dept\":\"PLS\",\"total\":265194.69},{\"project\":\"CA-D-PLS-6063-H\",\"dept\":\"PLS\",\"total\":468454.17},{\"project\":\"CA-D-PLS-6254-H\",\"dept\":\"PLS\",\"total\":477100.79},{\"project\":\"CA-D-PLS-6273-H\",\"dept\":\"PLS\",\"total\":544197.05},{\"project\":\"CA-D-PLS-6278-H\",\"dept\":\"PLS\",\"total\":2182727.25},{\"project\":\"CA-D-PLS-6315-H\",\"dept\":\"PLS\",\"total\":445881.08},{\"project\":\"CA-D-PLS-6410-H\",\"dept\":\"PLS\",\"total\":239504.76},{\"project\":\"CA-D-PLS-6418-H\",\"dept\":\"PLS\",\"total\":1721644.84},{\"project\":\"CA-D-PLS-6470-H\",\"dept\":\"PLS\",\"total\":372463.26},{\"project\":\"CA-D-PLS-6599-H\",\"dept\":\"PLS\",\"total\":433037.44},{\"project\":\"CA-D-PLS-6884-H\",\"dept\":\"PLS\",\"total\":2522314.11},{\"project\":\"CA-D-PLS-7033-H\",\"dept\":\"PLS\",\"total\":512903.62},{\"project\":\"CA-D-PLS-7121-H\",\"dept\":\"PLS\",\"total\":346040.87},{\"project\":\"CA-D-PLS-7250-RR\",\"dept\":\"PLS\",\"total\":1428686.79},{\"project\":\"CA-D-PLS-7259-RR\",\"dept\":\"PLS\",\"total\":671334.09},{\"project\":\"CA-D-PLS-7262-RR\",\"dept\":\"PLS\",\"total\":750808.33},{\"project\":\"CA-D-PLS-7279-H\",\"dept\":\"PLS\",\"total\":270638.48},{\"project\":\"CA-D-PLS-7311-H\",\"dept\":\"PLS\",\"total\":720737.52},{\"project\":\"CA-D-PLS-7344-H\",\"dept\":\"PLS\",\"total\":1147603.24},{\"project\":\"CA-D-PLS-7514-RR\",\"dept\":\"PLS\",\"total\":508698.05},{\"project\":\"CA-D-PLS-7641-H\",\"dept\":\"PLS\",\"total\":400080.02},{\"project\":\"CA-D-PLS-7658-H\",\"dept\":\"PLS\",\"total\":188312.21},{\"project\":\"CA-D-PLS-7663-RR\",\"dept\":\"PLS\",\"total\":454202.22},{\"project\":\"CA-D-PLS-7680-H\",\"dept\":\"PLS\",\"total\":328837.88},{\"project\":\"CA-D-PLS-7749-RR\",\"dept\":\"PLS\",\"total\":397349.42},{\"project\":\"CA-D-PLS-7864-RR\",\"dept\":\"PLS\",\"total\":212473.21},{\"project\":\"CA-D-PLS-7869-H\",\"dept\":\"PLS\",\"total\":279986.97},{\"project\":\"CA-D-PPA-2021-H\",\"dept\":\"PPA\",\"total\":619532.47},{\"project\":\"CA-D-PPA-2022-H\",\"dept\":\"PPA\",\"total\":363585.5},{\"project\":\"CA-D-PPA-2025-H\",\"dept\":\"PPA\",\"total\":1297756.69},{\"project\":\"CA-D-PPA-2057-CG\",\"dept\":\"PPA\",\"total\":638410.19},{\"project\":\"CA-D-PPA-2131-H\",\"dept\":\"PPA\",\"total\":502529.82},{\"project\":\"CA-D-PPA-2165-H\",\"dept\":\"PPA\",\"total\":459112.75},{\"project\":\"CA-D-PPA-2167-OG\",\"dept\":\"PPA\",\"total\":450542.33},{\"project\":\"CA-D-PPA-2185-H\",\"dept\":\"PPA\",\"total\":460135.27},{\"project\":\"CA-D-PPA-2223-CG\",\"dept\":\"PPA\",\"total\":474221.5},{\"project\":\"CA-D-PPA-2226-CG\",\"dept\":\"PPA\",\"total\":207580.64},{\"project\":\"CA-D-PPA-2258-CG \",\"dept\":\"PPA\",\"total\":480331.03},{\"project\":\"CA-D-PPA-2283-CG\",\"dept\":\"PPA\",\"total\":2319053.47},{\"project\":\"CA-D-PPA-2297-H\",\"dept\":\"PPA\",\"total\":517720.89},{\"project\":\"CA-D-PPA-2323-OG\",\"dept\":\"PPA\",\"total\":159950.01},{\"project\":\"CA-D-PPA-2347-OG\",\"dept\":\"PPA\",\"total\":878553.82},{\"project\":\"CA-D-PPA-2368-CG \",\"dept\":\"PPA\",\"total\":157116.01},{\"project\":\"CA-D-PPA-2392-CG\",\"dept\":\"PPA\",\"total\":951423.07},{\"project\":\"CA-D-PPA-5484-H\",\"dept\":\"PPA\",\"total\":466994.23},{\"project\":\"CA-D-PPA-5681-H\",\"dept\":\"PPA\",\"total\":362829.03},{\"project\":\"CA-D-PPA-6395-H\",\"dept\":\"PPA\",\"total\":341577.33},{\"project\":\"CA-D-PPA-6456-H\",\"dept\":\"PPA\",\"total\":577440.2},{\"project\":\"CA-D-PPA-6575-H\",\"dept\":\"PPA\",\"total\":943877.07},{\"project\":\"CA-D-PPA-6699-H\",\"dept\":\"PPA\",\"total\":563534.4},{\"project\":\"CA-D-PPA-6738-H\",\"dept\":\"PPA\",\"total\":879834.09},{\"project\":\"CA-D-PPA-7268-RR\",\"dept\":\"PPA\",\"total\":362893},{\"project\":\"CA-D-PPA-7536-H\",\"dept\":\"PPA\",\"total\":2872991.03},{\"project\":\"CA-D-PPA-7629-RR\",\"dept\":\"PPA\",\"total\":504771.23},{\"project\":\"CA-D-PPA-7757-H\",\"dept\":\"PPA\",\"total\":438992.19},{\"project\":\"CA-D-TXC-4313-RR\",\"dept\":\"TXC\",\"total\":5505},{\"project\":\"CA-D-TXC-6424-RR\",\"dept\":\"TXC\",\"total\":99351.41},{\"project\":\"CA-D-TXC-6425-RR\",\"dept\":\"TXC\",\"total\":140790.13},{\"project\":\"CA-D-TXC-6706-H\",\"dept\":\"TXC\",\"total\":269785.77},{\"project\":\"CA-D-TXC-7694-H\",\"dept\":\"TXC\",\"total\":54781.41},{\"project\":\"CA-D-TXC-7739-H\",\"dept\":\"TXC\",\"total\":140783.81},{\"project\":\"CA-D-VIT-2196-H\",\"dept\":\"VIT\",\"total\":1171739.6},{\"project\":\"CA-D-VIT-2322-H\",\"dept\":\"VIT\",\"total\":458077.79},{\"project\":\"CA-D-VIT-2346-H\",\"dept\":\"VIT\",\"total\":446791.93},{\"project\":\"CA-D-VIT-4345-H\",\"dept\":\"VIT\",\"total\":500147.86},{\"project\":\"CA-D-VIT-4662-H\",\"dept\":\"VIT\",\"total\":441864.55},{\"project\":\"CA-D-VIT-6013-H\",\"dept\":\"VIT\",\"total\":427761.83},{\"project\":\"CA-D-VIT-6700-H\",\"dept\":\"VIT\",\"total\":237387.98},{\"project\":\"CA-D-VIT-6923-H\",\"dept\":\"VIT\",\"total\":677161},{\"project\":\"CA-D-VIT-7086-H\",\"dept\":\"VIT\",\"total\":2043091.92},{\"project\":\"CA-D-VIT-7120-H\",\"dept\":\"VIT\",\"total\":381555.51},{\"project\":\"CA-D-VIT-7727-H\",\"dept\":\"VIT\",\"total\":237387.98},{\"project\":\"CA-D-VIT-7728-H\",\"dept\":\"VIT\",\"total\":679212.16},{\"project\":\"CA-D-VIT-7729-H\",\"dept\":\"VIT\",\"total\":671245.8},{\"project\":\"CA-D-WFB-2097-H\",\"dept\":\"WFB\",\"total\":656373.95},{\"project\":\"CA-D-WFB-2098-H\",\"dept\":\"WFB\",\"total\":1628578.76},{\"project\":\"CA-D-WFB-2376-RR\",\"dept\":\"WFB\",\"total\":656373.95},{\"project\":\"CA-D-WFB-2381-OG\",\"dept\":\"WFB\",\"total\":606781.82},{\"project\":\"CA-D-WFB-4071-H\",\"dept\":\"WFB\",\"total\":740050.27},{\"project\":\"CA-D-WFB-5245-H\",\"dept\":\"WFB\",\"total\":701117.55},{\"project\":\"CA-D-WFB-6126-H\",\"dept\":\"WFB\",\"total\":732570},{\"project\":\"CA-D-WFB-6342-H\",\"dept\":\"WFB\",\"total\":980186.51},{\"project\":\"CA-D-WFB-6721-H\",\"dept\":\"WFB\",\"total\":529908.74}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/js/projectTotals.json\n// module id = 25\n// module chunks = 0","module.exports = {\"f201\":{\"ARE\":118614,\"ASC\":197084,\"BAE\":102751,\"ENM\":162230,\"ESP\":42321,\"ETX\":70749,\"EVE\":67244,\"FST\":87323,\"HCE\":82584,\"LAW\":164470,\"MCB\":46619,\"MIC\":18238,\"NPB\":14732,\"NTR\":66300,\"PLB\":37751,\"PLS\":443446,\"PPA\":108406,\"TXC\":17880,\"VIT\":91277,\"WFB\":43563},\"f202\":{\"ARE\":46705,\"ASC\":497443,\"BAE\":111943,\"ENM\":61342,\"ESP\":0,\"ETX\":21721,\"EVE\":0,\"FST\":30029,\"HCE\":27933,\"LAW\":108730,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":91992,\"PPA\":37777,\"TXC\":44570,\"VIT\":0,\"WFB\":0},\"f203\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f204\":{\"ARE\":0,\"ASC\":311268,\"BAE\":1668245,\"ENM\":796243,\"ESP\":40344,\"ETX\":1993381,\"EVE\":0,\"FST\":1096984,\"HCE\":0,\"LAW\":944159,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":641322,\"PLB\":239271,\"PLS\":3616446,\"PPA\":2812899,\"TXC\":0,\"VIT\":0,\"WFB\":2331},\"f205\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f231\":{\"ARE\":165319,\"ASC\":1005795,\"BAE\":1882939,\"ENM\":1019815,\"ESP\":82665,\"ETX\":2085851,\"EVE\":67244,\"FST\":1214336,\"HCE\":110517,\"LAW\":1217359,\"MCB\":46619,\"MIC\":18238,\"NPB\":14732,\"NTR\":707622,\"PLB\":277022,\"PLS\":4151884,\"PPA\":2959082,\"TXC\":62450,\"VIT\":91277,\"WFB\":45894},\"f219\":{\"ARE\":673303.22,\"ASC\":918055.9399999996,\"BAE\":470735.6899999999,\"ENM\":2280171.5500000003,\"ESP\":787009.3400000003,\"ETX\":278983.71,\"EVE\":139456.74,\"FST\":747304.8600000002,\"HCE\":9836.28,\"LAW\":969787.3399999996,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":1896739.8399999999,\"PLB\":0,\"PLS\":3569989.5799999987,\"PPA\":2987236.5300000003,\"TXC\":0,\"VIT\":762493.44,\"WFB\":48826.13},\"f209\":{\"ARE\":262,\"ASC\":266624,\"BAE\":267717,\"ENM\":1087708,\"ESP\":1116680,\"ETX\":123385,\"EVE\":497780,\"FST\":24109,\"HCE\":197508,\"LAW\":1051869,\"MCB\":239175,\"MIC\":301267,\"NPB\":164728,\"NTR\":0,\"PLB\":2339019,\"PLS\":3331749,\"PPA\":995455,\"TXC\":0,\"VIT\":0,\"WFB\":72394},\"f310\":{\"ARE\":0,\"ASC\":98550,\"BAE\":21998,\"ENM\":0,\"ESP\":0,\"ETX\":111021,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":694922,\"MCB\":269991,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":1200006,\"PPA\":978514,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f308\":{\"ARE\":5347896.92,\"ASC\":518473.8799999999,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":141796.1,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":264617.03,\"PLB\":0,\"PLS\":1091586.72,\"PPA\":1762485.4600000002,\"TXC\":0,\"VIT\":13150.47,\"WFB\":0},\"f311\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":73654,\"ESP\":9861,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":22181,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":190505,\"TXC\":0,\"VIT\":0,\"WFB\":26985},\"f316\":{\"ARE\":0,\"ASC\":82439,\"BAE\":0,\"ENM\":3064205,\"ESP\":0,\"ETX\":530625,\"EVE\":1141192,\"FST\":534614,\"HCE\":414006,\"LAW\":17476,\"MCB\":1073539,\"MIC\":0,\"NPB\":637665,\"NTR\":948825,\"PLB\":290489,\"PLS\":12470,\"PPA\":322810,\"TXC\":13926,\"VIT\":5630,\"WFB\":0},\"f312\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f313\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f314\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":285353,\"MCB\":0,\"MIC\":0,\"NPB\":768276,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f315\":{\"ARE\":0,\"ASC\":0,\"BAE\":0,\"ENM\":0,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":0,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":0,\"PPA\":0,\"TXC\":0,\"VIT\":0,\"WFB\":0},\"f318\":{\"ARE\":54446,\"ASC\":316861,\"BAE\":1022832,\"ENM\":83990,\"ESP\":913685,\"ETX\":1076351,\"EVE\":12298,\"FST\":935,\"HCE\":260755,\"LAW\":606362,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":6205,\"PPA\":1234,\"TXC\":0,\"VIT\":0,\"WFB\":759307},\"f332\":{\"ARE\":6075908.140000001,\"ASC\":2201003.820000001,\"BAE\":1783282.69,\"ENM\":6589728.549999997,\"ESP\":2827235.3399999994,\"ETX\":2120365.71,\"EVE\":1790726.74,\"FST\":1306962.8599999999,\"HCE\":882105.28,\"LAW\":3767565.439999999,\"MCB\":1604886,\"MIC\":301267,\"NPB\":1570669,\"NTR\":3110181.87,\"PLB\":2629508,\"PLS\":9212006.30000001,\"PPA\":7238239.990000001,\"TXC\":13926,\"VIT\":781273.91,\"WFB\":907512.1300000001},\"f220\":{\"ARE\":4037386.229999999,\"ASC\":7736238.679999997,\"BAE\":3082284.0999999996,\"ENM\":3355367.4400000004,\"ESP\":2520438.52,\"ETX\":1854511.2299999997,\"EVE\":1595885.66,\"FST\":3372363.83,\"HCE\":2615703.1399999997,\"LAW\":6395737.249999999,\"MCB\":1056809.82,\"MIC\":332521.6,\"NPB\":415508.58,\"NTR\":1786273.26,\"PLB\":615541.63,\"PLS\":13474768.680000007,\"PPA\":5166565.890000001,\"TXC\":512375.3099999999,\"VIT\":3229956.7200000007,\"WFB\":5329331.02},\"f22F\":{\"ARE\":0,\"ASC\":3174,\"BAE\":0,\"ENM\":26257,\"ESP\":0,\"ETX\":0,\"EVE\":0,\"FST\":0,\"HCE\":0,\"LAW\":41165,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":0,\"PLB\":0,\"PLS\":699141,\"PPA\":193562,\"TXC\":0,\"VIT\":44435,\"WFB\":0},\"f221\":{\"ARE\":51518.22,\"ASC\":2756788.5500000003,\"BAE\":510755.44,\"ENM\":35381.38,\"ESP\":43116.2,\"ETX\":23380.32,\"EVE\":104044.76,\"FST\":443447.34,\"HCE\":77623.75,\"LAW\":511546.2899999999,\"MCB\":3122.1,\"MIC\":189.9,\"NPB\":33793.64,\"NTR\":345324.03,\"PLB\":1412.92,\"PLS\":6055969.520000001,\"PPA\":217180.35,\"TXC\":10301.76,\"VIT\":269837.0999999999,\"WFB\":207643.86},\"f222\":{\"ARE\":686751.2499999998,\"ASC\":436821.7899999998,\"BAE\":1114407.99,\"ENM\":962778.71,\"ESP\":188479.46,\"ETX\":60539.97,\"EVE\":64884.92,\"FST\":2580667.4699999997,\"HCE\":191908.2299999997,\"LAW\":708898.2300000006,\"MCB\":0,\"MIC\":0,\"NPB\":0,\"NTR\":3388146.6699999995,\"PLB\":148533.91,\"PLS\":7558511.640000004,\"PPA\":2145508.6899999995,\"TXC\":94611.13,\"VIT\":1989243.95,\"WFB\":6948.37},\"f223\":{\"ARE\":647124.76,\"ASC\":1502095.2,\"BAE\":243597.95,\"ENM\":1817281.5100000002,\"ESP\":428938.88,\"ETX\":171408.78,\"EVE\":62072.06,\"FST\":884798.6299999999,\"HCE\":223417.9699999999,\"LAW\":1016280.31,\"MCB\":260543.88,\"MIC\":0,\"NPB\":47151.45,\"NTR\":1299179.22,\"PLB\":5036.78,\"PLS\":4761754.500000001,\"PPA\":1333150.3399999996,\"TXC\":17333.33,\"VIT\":1967402.23,\"WFB\":734612.17},\"f233\":{\"ARE\":5422780.46,\"ASC\":12435118.219999999,\"BAE\":4951045.4799999995,\"ENM\":6197066.040000001,\"ESP\":3180973.06,\"ETX\":2109840.3,\"EVE\":1826887.4,\"FST\":7281277.27,\"HCE\":3108653.0900000003,\"LAW\":8673627.079999998,\"MCB\":1320475.8,\"MIC\":332711.5,\"NPB\":496453.67,\"NTR\":6818923.180000001,\"PLB\":770525.24,\"PLS\":32550145.33999999,\"PPA\":9055967.270000001,\"TXC\":634621.53,\"VIT\":7500875,\"WFB\":6278535.420000001},\"f234\":{\"ARE\":11664007.6,\"ASC\":15641917.040000001,\"BAE\":8617267.170000002,\"ENM\":13806609.59,\"ESP\":6090873.400000001,\"ETX\":6316057.01,\"EVE\":3684858.140000001,\"FST\":9802576.13,\"HCE\":4101275.3699999996,\"LAW\":13658551.520000001,\"MCB\":2971980.8,\"MIC\":652216.5,\"NPB\":2081854.67,\"NTR\":10636727.05,\"PLB\":3677055.24,\"PLS\":45914035.64,\"PPA\":19253289.26,\"TXC\":710997.53,\"VIT\":8373425.91,\"WFB\":7231941.55}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/js/sourceTotalsByDepartment.json\n// module id = 26\n// module chunks = 0","import * as d3 from \"d3\";\r\nimport * as force from \"d3-force\";\r\nimport * as Color from \"color\";\r\nimport { SimulationNodeDatum, DragContainerElement, interval, sum, timer, timeout } from \"d3\";\r\n\r\nimport { getProjects, getCategories, getSelectedCategory, onSelectedCategoryChanged, IProject } from \"./data\";\r\n\r\ninterface IProjectDatam extends IProject, SimulationNodeDatum {\r\n}\r\n\r\nconst projects = getProjects();\r\n\r\nconst sumTotal = projects.reduce((prev, d) => prev + d.total, 0);\r\nconst maxTotal = projects.reduce((prev, d) => Math.max(prev, d.total), 0);\r\n\r\nconst chartSelector = \"#bubble\";\r\nconst width = 800;\r\nconst height = 800;\r\nconst center = {\r\n  x: (width / 2),\r\n  y: (height / 2),\r\n};\r\nconst scale = 50;\r\n\r\nconst categories = getCategories();\r\n\r\n// map to datam\r\nconst data: IProjectDatam[] = projects;\r\n\r\n// sort by total, limit\r\ndata.sort((a, b) => b.total - a.total);\r\n\r\nfunction getCircleColor(index: number): string {\r\n  const defaultColor = \"#C7C8CC\";\r\n\r\n  const selectedCategory = getSelectedCategory();\r\n  if (selectedCategory < 0) {\r\n    return categories[index].color || defaultColor;\r\n  }\r\n\r\n  if (index === selectedCategory) {\r\n      return categories[index].color || defaultColor;\r\n  }\r\n\r\n  return defaultColor;\r\n}\r\n\r\nfunction getCircleStroke(index: number): string {\r\n  return Color(categories[index].color)\r\n    .darken(0.5)\r\n    .hex();\r\n}\r\n\r\nfunction getCircleRadius(total: number) {\r\n  return Math.sqrt(total) / scale;\r\n}\r\n\r\nfunction getTargetX(categoryIndex: number): number {\r\n  return Math.sin(2 * Math.PI * categoryIndex / categories.length) * (width / 5)\r\n    + center.x;\r\n}\r\n\r\nfunction getTargetY(categoryIndex: number): number {\r\n  return Math.cos(2 * Math.PI * categoryIndex / categories.length) * (height / 5)\r\n    + center.y;\r\n}\r\n\r\nfunction getTargetRadius(d: IProjectDatam): number {\r\n  const selectedCategory = getSelectedCategory();\r\n  if (selectedCategory < 0) {\r\n    return 0;\r\n  }\r\n\r\n  if (d.categoryIndex === selectedCategory) {\r\n    return 0;\r\n  }\r\n\r\n  return (width / 3);\r\n}\r\n\r\nfunction getStrengthMultiplier(d: IProjectDatam) {\r\n  return 2 + (d.total / maxTotal);\r\n}\r\n\r\n// build chart\r\nconst svg: d3.Selection<Element, {}, Element, {}> = d3\r\n  .select(chartSelector)\r\n  .append(\"svg\")\r\n  .attr(\"width\", width)\r\n  .attr(\"height\", height)\r\n  .append(\"g\");\r\n\r\n// initial setup\r\nconst circles = svg\r\n  .append(\"svg:g\")\r\n  .attr(\"id\", \"circles\")\r\n  .selectAll(\"circle\")\r\n  .data(data)\r\n  .enter()\r\n  .append(\"svg:circle\")\r\n  .attr(\"fill\", (d) => getCircleColor(d.categoryIndex))\r\n  .attr(\"stroke\", (d) => getCircleStroke(d.categoryIndex))\r\n  .attr(\"stroke-width\", \"1\")\r\n  .attr(\"cx\", (d) => getTargetX(d.categoryIndex))\r\n  .attr(\"cy\", (d) => getTargetY(d.categoryIndex))\r\n  .attr(\"r\", (d) => getCircleRadius(d.total));\r\n\r\n// mouse over thick border and project view\r\nconst mouseoverChart = d3.select(\"#bubble-mouseover-chart\");\r\n\r\ncircles\r\n    .on(\"mouseover\", function() {\r\n      const project = d3.select<Element, IProjectDatam>(this as Element).datum();\r\n      const category = categories[project.categoryIndex];\r\n\r\n      d3.select<Element, IProjectDatam>(this as Element)\r\n        .transition()\r\n        .duration(100)\r\n        .attr(\"stroke\", \"#1d1d1d\")\r\n        .attr(\"stroke-width\", \"2\");\r\n\r\n      // show the chart\r\n      mouseoverChart\r\n        .classed(\"opaque\", false);\r\n\r\n      mouseoverChart.select(\"#bubble-mouseover-chart-icon\");\r\n      mouseoverChart.select(\"#bubble-mouseover-chart-topic\")\r\n        .text(category.name);\r\n\r\n      mouseoverChart.select(\"#bubble-mouseover-chart-title\")\r\n        .text(project.name);\r\n\r\n      mouseoverChart.select(\"#bubble-mouseover-chart-total\")\r\n        .text(`$${ (project.total / 1000000).toFixed(1) }M`);\r\n    })\r\n    .on(\"mouseout\", function() {\r\n      d3.select<Element, IProjectDatam>(this as Element)\r\n        .transition()\r\n        .duration(100)\r\n        .attr(\"stroke\", (d) => getCircleStroke(d.categoryIndex))\r\n        .attr(\"stroke-width\", \"1\");\r\n\r\n      mouseoverChart\r\n        .classed(\"opaque\", true);\r\n    });\r\n\r\nlet simulation: force.Simulation<IProjectDatam, any>;\r\nfunction buildSimulation() {\r\n  const selectedCategory = getSelectedCategory();\r\n\r\n  // build forces\r\n  simulation = force\r\n    .forceSimulation<any, any>(data)\r\n    .force(\"collision\", force.forceCollide((d: IProjectDatam) => getCircleRadius(d.total) * 0.95).strength(0.5).iterations(3))\r\n    .force(\"center\", force.forceCenter(center.x, center.y));\r\n\r\n  if (selectedCategory >= 0) {\r\n    // use radial positioning\r\n    simulation\r\n      .force(\"r\", force.forceRadial((d: IProjectDatam) => getTargetRadius(d), center.x, center.y).strength((d: IProjectDatam) => 0.1 * getStrengthMultiplier(d)));\r\n  } else {\r\n    // use x/y positioning\r\n    simulation\r\n      .force(\"x\", force.forceX((d: IProjectDatam) => getTargetX(d.categoryIndex)).strength((d: IProjectDatam) => 0.05 * getStrengthMultiplier(d)))\r\n      .force(\"y\", force.forceY((d: IProjectDatam) => getTargetY(d.categoryIndex)).strength((d: IProjectDatam) => 0.05 * getStrengthMultiplier(d)));\r\n  }\r\n\r\n  // listen to ticks\r\n  simulation.on(\"tick\", () => {\r\n    circles\r\n      .attr(\"cx\", (d) => {\r\n        return d.x as number;\r\n      })\r\n      .attr(\"cy\", (d) => {\r\n        return d.y as number;\r\n      });\r\n  });\r\n\r\n  // if no selected category, group items\r\n  if (selectedCategory < 0) {\r\n    timeout(() => {\r\n      const forceX = simulation.force<force.ForceX<any>>(\"x\");\r\n      if (forceX === undefined) return;\r\n      const forceY = simulation.force<force.ForceY<any>>(\"y\");\r\n      if (forceY === undefined) return;\r\n\r\n      forceX.strength(0);\r\n      forceY.strength(0);\r\n\r\n      simulation.force(\"r\", force.forceRadial(0, center.x, center.y).strength(0.1));\r\n    }, 3000);\r\n  }\r\n}\r\nbuildSimulation();\r\n\r\nlet collisionTimer: d3.Timer;\r\nfunction easeCollision() {\r\n  // slowly build collision strength\r\n  const forceCollide = simulation.force<force.ForceCollide<IProjectDatam>>(\"collision\");\r\n  if (forceCollide === undefined) return;\r\n\r\n  const strength = forceCollide.strength();\r\n  const endTime = 2000;\r\n  collisionTimer = timer(elapsed => {\r\n    const dt = elapsed / endTime;\r\n    // half default, half exp growth\r\n    const newStrength = (0.3 * strength) + (0.7 * Math.pow(dt, (endTime / 1000) * strength));\r\n    forceCollide.strength(newStrength);\r\n    if (dt >= 1.0) {\r\n      collisionTimer.stop();\r\n    }\r\n  });\r\n}\r\neaseCollision();\r\n\r\nconst totalChart = d3.select(\"#bubble-summary-chart\");\r\n\r\nonSelectedCategoryChanged(() => {\r\n    // stop previous simulation\r\n    simulation.stop();\r\n    collisionTimer.stop();\r\n\r\n    // rebuild\r\n    buildSimulation();\r\n    easeCollision();\r\n\r\n    // re-colorize\r\n    circles\r\n      .attr(\"fill\", (d) => getCircleColor(d.categoryIndex));\r\n\r\n    // update chart\r\n    const selectedCategory = getSelectedCategory();\r\n    if (selectedCategory < 0) {\r\n      const total = sumTotal;\r\n      const count = data.length;\r\n\r\n      totalChart.select(\"#bubble-summary-chart-icon\");\r\n\r\n      totalChart.select(\"#bubble-summary-chart-topic\")\r\n        .text(\"\");\r\n\r\n      totalChart.select(\"#bubble-summary-chart-total\")\r\n        .text(`$${ (total / 1000000).toFixed(1) }M`);\r\n\r\n      totalChart.select(\"#bubble-summary-chart-count\")\r\n        .text(count);\r\n    } else {\r\n      const category = categories[selectedCategory];\r\n      const total = data.reduce((prev, p) => p.categoryIndex !== selectedCategory ? prev : prev + p.total, 0);\r\n      const count = data.reduce((prev, p) => p.categoryIndex !== selectedCategory ? prev : prev + 1, 0);\r\n\r\n      totalChart.select(\"#bubble-summary-chart-icon\")\r\n        .attr(\"src\", category.icon || \"\");\r\n\r\n      totalChart.select(\"#bubble-summary-chart-topic\")\r\n        .text(category.name);\r\n\r\n      totalChart.select(\"#bubble-summary-chart-total\")\r\n        .text(`$${ (total / 1000000).toFixed(1) }M`);\r\n\r\n      totalChart.select(\"#bubble-summary-chart-count\")\r\n        .text(count);\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/js/bubble.ts","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/color-string/index.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/simple-swizzle/index.js\n// module id = 29\n// module chunks = 0","'use strict';\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-arrayish/index.js\n// module id = 30\n// module chunks = 0","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/color-convert/index.js\n// module id = 31\n// module chunks = 0","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/color-convert/route.js\n// module id = 32\n// module chunks = 0","import * as d3 from \"d3\";\r\nimport * as force from \"d3-force\";\r\nimport * as Color from \"color\";\r\nimport { SimulationNodeDatum, DragContainerElement, interval, sum, timer, timeout } from \"d3\";\r\nimport { debounce } from \"../utils/common\";\r\nimport { getSources, getCategories, getSelectedCategory, onSelectedCategoryChanged, ISourceTotal, ICategory, getSourceTotals, ICategoryTotal } from \"./data\";\r\n\r\ninterface ISourceDatam extends ISourceTotal {\r\n  byCategory: ICategoryDatam[];\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface ICategoryDatam extends ICategoryTotal, SimulationNodeDatum {\r\n  // sourceIndex: number;\r\n  categoryIndex: number;\r\n}\r\n\r\n// prepare data\r\nlet sources = getSourceTotals();\r\nsources = sources.filter(s => s.total > 0);\r\nsources.sort((a, b) => b.total - a.total);\r\nsources = sources.slice(0, 15);\r\n\r\nconst sumTotal = sources.reduce((prev, d) => prev + d.total, 0);\r\nconst maxTotal = sources.reduce((prev, d) => Math.max(prev, d.total), 0);\r\n\r\nconst chartSelector = \"#sources\";\r\nconst scale = 80;\r\n\r\nconst categories = getCategories();\r\n\r\nfunction getCircleColor(index: number): string {\r\n  const defaultColor = \"#C7C8CC\";\r\n\r\n  const selectedCategory = getSelectedCategory();\r\n  if (selectedCategory < 0) {\r\n    return categories[index].color || defaultColor;\r\n  }\r\n\r\n  if (index === selectedCategory) {\r\n      return categories[index].color || defaultColor;\r\n  }\r\n\r\n  return defaultColor;\r\n}\r\n\r\nfunction getSelectedTotal(source: ISourceDatam): number {\r\n  const selectedCategory = getSelectedCategory();\r\n  if (selectedCategory < 0) {\r\n    return source.total;\r\n  }\r\n  return source.byCategory[selectedCategory].total;\r\n}\r\n\r\nfunction getTotalLabelColor(): string {\r\n  const selectedCategory = getSelectedCategory();\r\n  if (selectedCategory < 0) {\r\n    return \"inherit\";\r\n  }\r\n\r\n  return Color(categories[selectedCategory].color)\r\n    .darken(0.5)\r\n    .hex();\r\n}\r\n\r\nfunction getCircleStroke(index: number): string {\r\n  return Color(categories[index].color)\r\n    .darken(0.5)\r\n    .hex();\r\n}\r\n\r\nfunction getCircleRadius(total: number): number {\r\n  return Math.sqrt(total) / scale;\r\n}\r\n\r\nconst targetHeights = [100, 150, 200, 300];\r\nfunction getTargetHeight(total: number): number {\r\n  const result = 3.5 * getCircleRadius(total);\r\n\r\n  for (let i = 0; i < targetHeights.length; i++) {\r\n    const target = targetHeights[i];\r\n    if (target > result) return target;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// tranform data into datams\r\nconst data: ISourceDatam[] = sources.map((s, i) => {\r\n  return {\r\n    ...s,\r\n    width: Math.max(3 * getCircleRadius(s.total), 75) + 50,\r\n    height: Math.max(3 * getCircleRadius(s.total), 150) + 40,\r\n    byCategory: s.byCategory.map((c) => {\r\n      return {\r\n        ...c,\r\n        categoryIndex: categories.findIndex((x) => x.name === c.name),\r\n      };\r\n    }),\r\n  };\r\n});\r\n\r\n// select target div\r\nconst svg = d3.select(chartSelector);\r\n\r\n// build individual charts\r\nconst charts = svg\r\n  .selectAll(\".chart\")\r\n  .data(data)\r\n  .enter()\r\n  .append(\"div\")\r\n  .attr(\"class\", \"chart-container\")\r\n  .attr(\"style\", (d) => `min-height:${d.height}`)\r\n  .append(\"svg\")\r\n  .attr(\"class\", \"chart\")\r\n  .attr(\"width\", (d) => d.width)\r\n  .attr(\"height\", \"100%\");\r\n\r\ncharts.each(function(sourceTotal) {\r\n\r\n  const chart = d3.select(this as Element);\r\n\r\n  const center = {\r\n    x: (sourceTotal.width / 2),\r\n    y: (sourceTotal.height / 2),\r\n  };\r\n\r\n  // setup circles\r\n  const circles = chart\r\n    .selectAll(\".circle\")\r\n    .data(sourceTotal.byCategory)\r\n    .enter()\r\n    .append(\"svg:circle\")\r\n    .attr(\"class\", \"circle\")\r\n    .attr(\"fill\", (d) => getCircleColor(d.categoryIndex))\r\n    .attr(\"stroke\", (d) => getCircleStroke(d.categoryIndex))\r\n    .attr(\"stroke-width\", \"1\")\r\n    .attr(\"r\", (d) => getCircleRadius(d.total))\r\n    .attr(\"cx\", center.x)\r\n    .attr(\"cy\", center.y);\r\n\r\n  // add labels\r\n  const label = chart\r\n    .append<SVGTextElement>(\"text\")\r\n    .attr(\"class\", \"chart-label\")\r\n    .attr(\"x\", center.x)\r\n    .attr(\"y\", 10)\r\n    .attr(\"dy\", \"1.1em\")\r\n    // .attr(\"alignment-baseline\", \"middle\")\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .text(sourceTotal.source.name);\r\n\r\n  // word wrap label\r\n  label.call(wrap, sourceTotal.width - 30);\r\n\r\n  const totals = label\r\n    .selectAll(\".total-label\")\r\n    .data([sourceTotal])\r\n    .enter()\r\n    .append<SVGTSpanElement>(\"tspan\")\r\n    .attr(\"class\", \"total-label\")\r\n    .attr(\"x\", center.x)\r\n    .attr(\"y\", 10)\r\n    .attr(\"dy\", function() {\r\n      const count = label.selectAll(\"tspan\").size();\r\n      const dy = parseFloat(label.attr(\"dy\"));\r\n      return count * dy + \"em\";\r\n    })\r\n    .text((d) => `$${ (getSelectedTotal(d) / 1000000).toFixed(1) }M`);\r\n\r\n\r\n  // mouse over thick border\r\n  circles\r\n    .on(\"mouseover\", function() {\r\n      d3.select(this as SVGCircleElement)\r\n        .transition()\r\n        .duration(100)\r\n        .attr(\"stroke\", \"#1d1d1d\")\r\n        .attr(\"stroke-width\", \"2\");\r\n    })\r\n    .on(\"mouseout\", function() {\r\n      d3.select(this as SVGCircleElement)\r\n        .transition()\r\n        .duration(100)\r\n        .attr(\"stroke\", (d: any) => getCircleStroke(d.categoryIndex))\r\n        .attr(\"stroke-width\", \"1\");\r\n    });\r\n});\r\n\r\nfunction wrap(text: d3.Selection<SVGTextElement, any, any, any>, width: number) {\r\n    const words: string[] = text.text().split(/\\s+/).reverse();\r\n    let word: string;\r\n    let line: string[] = [];\r\n    let lineNumber = 0;\r\n    const lineHeight = 1.1; // ems\r\n    const x = text.attr(\"x\");\r\n    const y = text.attr(\"y\");\r\n    const dy = parseFloat(text.attr(\"dy\"));\r\n\r\n    let tspan = text\r\n      .text(\"\")                           // clear existing text\r\n      .append<SVGTSpanElement>(\"tspan\")   // add new tspan items\r\n      .attr(\"x\", x)\r\n      .attr(\"y\", y)\r\n      .attr(\"dy\", dy + \"em\");\r\n\r\n    while (word = words.pop() || \"\") {\r\n      line.push(word);\r\n      tspan.text(line.join(\" \"));\r\n\r\n      const node = tspan.node();\r\n      if (node !== null && node.getComputedTextLength() > width && line.length > 1) {\r\n        line.pop();\r\n        tspan.text(line.join(\" \"));\r\n        line = [word];\r\n        tspan = text\r\n          .append<SVGTSpanElement>(\"tspan\")\r\n          .attr(\"x\", x)\r\n          .attr(\"y\", y)\r\n          .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\r\n          .text(word);\r\n      }\r\n    }\r\n}\r\n\r\n\r\nlet simulations: d3.Simulation<ICategoryDatam, any>[] = [];\r\nconst buildSimulation = debounce(() => {\r\n  // stop and clear simulations\r\n  simulations.forEach(s => s.stop);\r\n  simulations = [];\r\n\r\n  // iterate over charts\r\n  charts.each(function(source) {\r\n    const element = this as Element;\r\n    if (element === null) {\r\n      return;\r\n    }\r\n\r\n    // fetch category so we can \"lift\" active bubbles\r\n    const selectedCategory = getSelectedCategory();\r\n\r\n    // calculate height from container div\r\n    const parent = element.parentElement;\r\n    let height = source.height;\r\n    if (parent !== null) {\r\n      height = parent.clientHeight;\r\n    }\r\n    const center = {\r\n      x: (source.width / 2),\r\n      y: (height / 2),\r\n    };\r\n\r\n    // build forces\r\n    const simulation = force\r\n      .forceSimulation(source.byCategory)\r\n      .force(\"collision\", force.forceCollide((d: ICategoryDatam) => getCircleRadius(d.total) * 0.95).strength(0.3).iterations(3))\r\n      .force(\"x\", force.forceX(center.x))\r\n      .force(\"y\", force.forceY((d: ICategoryDatam) => d.categoryIndex === selectedCategory ? center.y * 0.5 : center.y));\r\n\r\n    // listen to ticks\r\n    const chart = d3.select(element);\r\n    const circles = chart.selectAll<Element, ICategoryDatam>(\".circle\");\r\n    simulation.on(\"tick\", () => {\r\n      circles\r\n        .attr(\"cx\", (d) => {\r\n          return d.x as number;\r\n        })\r\n        .attr(\"cy\", (d) => {\r\n          return d.y as number;\r\n        });\r\n    });\r\n\r\n    // ease collision\r\n    let collisionTimer: d3.Timer;\r\n    const forceCollide = simulation.force<force.ForceCollide<ICategoryDatam>>(\"collision\");\r\n    if (forceCollide === undefined) return;\r\n\r\n    const strength = forceCollide.strength();\r\n    const endTime = 3500;\r\n    collisionTimer = timer(elapsed => {\r\n      const dt = elapsed / endTime;\r\n      // half default, half exp growth\r\n      const newStrength = (0.1 * strength) + (0.7 * Math.pow(dt, (endTime / 1000) * strength));\r\n      forceCollide.strength(newStrength);\r\n      if (dt >= 1.0) {\r\n        collisionTimer.stop();\r\n      }\r\n    });\r\n\r\n    simulations.push(simulation);\r\n  });\r\n}, 500);\r\n\r\n\r\n\r\ntimeout(buildSimulation, 500);\r\n\r\nwindow.addEventListener(\"resize\", buildSimulation);\r\n\r\nonSelectedCategoryChanged(() => {\r\n  // re-colorize bubbles\r\n  charts\r\n    .selectAll<SVGCircleElement, ICategoryDatam>(\".circle\")\r\n    .attr(\"fill\", (d: ICategoryDatam) => getCircleColor(d.categoryIndex));\r\n\r\n  // re-colorize labels\r\n  charts\r\n    .selectAll<SVGTSpanElement, ISourceDatam>(\".total-label\")\r\n    .attr(\"fill\", getTotalLabelColor)\r\n    .text((d) => `$${ (getSelectedTotal(d) / 1000000).toFixed(1) }M`);\r\n\r\n  // move bubbles a bit\r\n  buildSimulation();\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/public/js/sources.ts","export function debounce(func: () => void, wait = 50) {\r\n  let h: any;\r\n  return () => {\r\n      clearTimeout(h);\r\n      h = setTimeout(() => func(), wait);\r\n  };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/public/utils/common.ts","import * as d3 from \"d3\";\r\nimport * as geo from \"d3-geo\";\r\nimport * as topojson from \"topojson\";\r\nimport { Polygon, Point } from \"geojson\";\r\nimport { Selection } from \"d3-selection\";\r\n\r\nconst data = require(\"./map-data.json\") as geo.ExtendedFeatureCollection<geo.ExtendedFeature<Point, any>>;\r\nconst state_data = require(\"./map-geo.json\") as geo.ExtendedFeature<Polygon, any>;\r\nconst counties_data = require(\"./map-counties-ca-topo.json\") as topojson.Topology;\r\n\r\nconst selector = \"#map\";\r\nconst width = 500;\r\nconst height = 600;\r\n\r\n// create projection translation\r\nconst projection = geo.geoMercator()\r\n    .center([-121, 38])\r\n    .scale(2500)\r\n    .translate([175, 250]);\r\n\r\nconst path = geo.geoPath()\r\n    .projection(projection);\r\n\r\nconst svg = d3.select(selector)\r\n    .insert(\"svg:svg\", \"h2\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height);\r\n\r\nconst states = svg.append(\"svg:g\")\r\n    .attr(\"id\", \"states\")\r\n    .attr(\"fill\", \"#ccc\")\r\n    .attr(\"stroke\", \"#fff\");\r\n\r\nconst counties = svg.append(\"svg:g\")\r\n    .attr(\"id\", \"counties\")\r\n    .attr(\"fill\", \"#ccc\")\r\n    .attr(\"stroke\", \"#fff\");\r\n\r\nconst circles = svg.append(\"svg:g\")\r\n    .attr(\"id\", \"circles\");\r\n\r\nconst tooltip = d3.select(\"body\").append(\"div\")\r\n    .attr(\"class\", \"tooltip\")\r\n    .style(\"opacity\", 0);\r\n\r\nstates.selectAll(\"path\")\r\n    .data([state_data] as any)\r\n    .enter().append(\"svg:path\")\r\n    .attr(\"d\", path as any);\r\n\r\ncounties.selectAll(\"path\")\r\n    .data(topojson.feature(counties_data, counties_data.objects.counties as topojson.GeometryCollection).features)\r\n    .enter().append(\"svg:path\")\r\n    .attr(\"d\", path as any)\r\n    .attr(\"stroke-dasharray\", function() {\r\n        const len = (this as SVGPathElement).getTotalLength();\r\n        return `${len} ${len}`;\r\n    })\r\n    .attr(\"stroke-dashoffset\", function() {\r\n        return (this as SVGPathElement).getTotalLength();\r\n    });\r\n\r\n// load in animation\r\ncounties.selectAll(\"path\")\r\n    .transition()\r\n    .duration(3000)\r\n    .attr(\"stroke-dashoffset\", 0);\r\n\r\nconst positions = data.features\r\n    .map(f => projection([f.geometry.coordinates[0], f.geometry.coordinates[1]]) || [0, 0]);\r\n\r\n// initial setup\r\ncircles.selectAll(\"circle\")\r\n    .data(data.features as any)\r\n    .enter().append(\"svg:circle\")\r\n    .attr(\"fill\", \"#ba0c2f\")\r\n    .attr(\"fill-opacity\", \"0.8\")\r\n    .attr(\"cx\", (d, i) => { return positions[i][0]; })\r\n    .attr(\"cy\", (d, i) => { return positions[i][1]; })\r\n    .attr(\"r\", 0);\r\n\r\n// load in animation\r\ncircles.selectAll(\"circle\")\r\n    .transition()\r\n    .duration(3000)\r\n    .delay(() => { return Math.random() * 3000 + 500; })\r\n    .ease(d3.easeElasticInOut)\r\n    .attr(\"r\", (d: any) => { return d.properties.Name.length; });\r\n\r\n// mouse overs\r\ncircles.selectAll(\"circle\")\r\n    .on(\"mouseover\", function (d: any, i) {\r\n\r\n        d3.select(this as Element)\r\n            .transition()\r\n            .duration(200)\r\n            .attr(\"r\", (d: any) => { return d.properties.Name.length * 1.5; });\r\n\r\n        tooltip.transition()\r\n            .duration(200)\r\n            .style(\"opacity\", .9);\r\n\r\n        tooltip.html(d.properties.Name)\r\n            .style(\"left\", (d3.event.pageX) + \"px\")\r\n            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n    })\r\n    .on(\"mouseout\", function() {\r\n        d3.select(this as Element)\r\n            .transition()\r\n            .duration(1000)\r\n            .attr(\"r\", (d: any) => { return d.properties.Name.length; });\r\n\r\n        tooltip.transition()\r\n            .duration(500)\r\n            .style(\"opacity\", 0);\r\n    });\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/public/js/map.ts","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/reverse.js\n// module id = 37\n// module chunks = 0","import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nexport default function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/mesh.js\n// module id = 38\n// module chunks = 0","import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/merge.js\n// module id = 39\n// module chunks = 0","import bisect from \"./bisect\";\n\nexport default function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/neighbors.js\n// module id = 40\n// module chunks = 0","export default function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/bisect.js\n// module id = 41\n// module chunks = 0","import bbox from \"./bbox\";\nimport untransform from \"./untransform\";\n\nexport default function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be ≥2\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-client/src/quantize.js\n// module id = 42\n// module chunks = 0","import bounds from \"./bounds\";\nimport cut from \"./cut\";\nimport dedup from \"./dedup\";\nimport delta from \"./delta\";\nimport extract from \"./extract\";\nimport geometry from \"./geometry\";\nimport hashmap from \"./hash/hashmap\";\nimport prequantize from \"./prequantize\";\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nexport default function(objects, quantization) {\n  var bbox = bounds(objects = geometry(objects)),\n      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n      topology = dedup(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry) {\n    if (geometry && indexGeometryType.hasOwnProperty(geometry.type)) indexGeometryType[geometry.type](geometry);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n\n  return topology;\n}\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/topology.js\n// module id = 44\n// module chunks = 0","// Computes the bounding box of the specified hash of GeoJSON objects.\nexport default function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n    Polygon: function(o) { o.arcs.forEach(boundLine); },\n    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/bounds.js\n// module id = 45\n// module chunks = 0","import join from \"./join\";\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nexport default function(topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i, n;\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n}\n\nfunction rotateArray(array, start, end, offset) {\n  reverse(array, start, end);\n  reverse(array, start, start + offset);\n  reverse(array, start + offset, end);\n}\n\nfunction reverse(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/cut.js\n// module id = 46\n// module chunks = 0","import hashset from \"./hash/hashset\";\nimport hashmap from \"./hash/hashmap\";\nimport equalPoint from \"./hash/point-equal\";\nimport hashPoint from \"./hash/point-hash\";\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nexport default function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0, // upper bound on number of junctions\n      i, n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/join.js\n// module id = 47\n// module chunks = 0","export default function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/hash/hashset.js\n// module id = 48\n// module chunks = 0","import hashmap from \"./hash/hashmap\";\nimport equalPoint from \"./hash/point-equal\";\nimport hashPoint from \"./hash/point-hash\";\n\n// Given a cut topology, combines duplicate arcs.\nexport default function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines, line,\n      rings = topology.rings, ring,\n      arcCount = lines.length + rings.length,\n      i, n;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs, startArc,\n        endArcs, endArc,\n        i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs,\n        endArc,\n        i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/dedup.js\n// module id = 49\n// module chunks = 0","// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\nexport default function(arcs) {\n  var i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n\n  return arcs;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/delta.js\n// module id = 50\n// module chunks = 0","// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nexport default function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/extract.js\n// module id = 51\n// module chunks = 0","// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nexport default function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n}\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/geometry.js\n// module id = 52\n// module chunks = 0","export default function(objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        pi,\n        px,\n        py,\n        x,\n        y;\n\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n\n  function quantizeGeometry(o) {\n    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-server/src/prequantize.js\n// module id = 53\n// module chunks = 0","import prune from \"./prune\";\n\nexport default function(topology, filter) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      key;\n\n  if (filter == null) filter = filterTrue;\n\n  function filterGeometry(input) {\n    var output, arcs;\n    switch (input.type) {\n      case \"Polygon\": {\n        arcs = filterRings(input.arcs);\n        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"MultiPolygon\": {\n        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"GeometryCollection\": {\n        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n        break;\n      }\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function filterRings(arcs) {\n    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n        : null;\n  }\n\n  function filterExteriorRing(ring) {\n    return filter(ring, false);\n  }\n\n  function filterInteriorRing(ring) {\n    return filter(ring, true);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = filterGeometry(oldObjects[key]);\n  }\n\n  return prune({\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: topology.arcs\n  });\n}\n\nfunction filterTrue() {\n  return true;\n}\n\nfunction filterIdentity(x) {\n  return x;\n}\n\nfunction filterNotNull(geometry) {\n  return geometry.type != null;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-simplify/src/filter.js\n// module id = 55\n// module chunks = 0","export default function(topology) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      oldArcs = topology.arcs,\n      oldArcsLength = oldArcs.length,\n      oldIndex = -1,\n      newIndexByOldIndex = new Array(oldArcsLength),\n      newArcsLength = 0,\n      newArcs,\n      newIndex = -1,\n      key;\n\n  function scanGeometry(input) {\n    switch (input.type) {\n      case \"GeometryCollection\": input.geometries.forEach(scanGeometry); break;\n      case \"LineString\": scanArcs(input.arcs); break;\n      case \"MultiLineString\": input.arcs.forEach(scanArcs); break;\n      case \"Polygon\": input.arcs.forEach(scanArcs); break;\n      case \"MultiPolygon\": input.arcs.forEach(scanMultiArcs); break;\n    }\n  }\n\n  function scanArc(index) {\n    if (index < 0) index = ~index;\n    if (!newIndexByOldIndex[index]) newIndexByOldIndex[index] = 1, ++newArcsLength;\n  }\n\n  function scanArcs(arcs) {\n    arcs.forEach(scanArc);\n  }\n\n  function scanMultiArcs(arcs) {\n    arcs.forEach(scanArcs);\n  }\n\n  function reindexGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(reindexGeometry)}; break;\n      case \"LineString\": output = {type: \"LineString\", arcs: reindexArcs(input.arcs)}; break;\n      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(reindexMultiArcs)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function reindexArc(oldIndex) {\n    return oldIndex < 0 ? ~newIndexByOldIndex[~oldIndex] : newIndexByOldIndex[oldIndex];\n  }\n\n  function reindexArcs(arcs) {\n    return arcs.map(reindexArc);\n  }\n\n  function reindexMultiArcs(arcs) {\n    return arcs.map(reindexArcs);\n  }\n\n  for (key in oldObjects) {\n    scanGeometry(oldObjects[key]);\n  }\n\n  newArcs = new Array(newArcsLength);\n\n  while (++oldIndex < oldArcsLength) {\n    if (newIndexByOldIndex[oldIndex]) {\n      newIndexByOldIndex[oldIndex] = ++newIndex;\n      newArcs[newIndex] = oldArcs[oldIndex];\n    }\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = reindexGeometry(oldObjects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: newArcs\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-simplify/src/prune.js\n// module id = 56\n// module chunks = 0","import filterAttached from \"./filterAttached\";\nimport filterWeight from \"./filterWeight\";\n\nexport default function(topology, minWeight, weight) {\n  var a = filterAttached(topology),\n      w = filterWeight(topology, minWeight, weight);\n  return function(ring, interior) {\n    return a(ring, interior) || w(ring, interior);\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-simplify/src/filterAttachedWeight.js\n// module id = 57\n// module chunks = 0","import {transform} from \"topojson-client\";\nimport newHeap from \"./heap\";\nimport {planarTriangleArea} from \"./planar\";\n\nfunction copy(point) {\n  return [point[0], point[1], 0];\n}\n\nexport default function(topology, weight) {\n  var point = topology.transform ? transform(topology.transform) : copy,\n      heap = newHeap();\n\n  if (weight == null) weight = planarTriangleArea;\n\n  var arcs = topology.arcs.map(function(arc) {\n    var triangles = [],\n        maxWeight = 0,\n        triangle,\n        i,\n        n;\n\n    arc = arc.map(point);\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n      triangle[1][2] = weight(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    // Always keep the arc endpoints!\n    arc[0][2] = arc[n][2] = Infinity;\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the weight of the current point is less than that of the previous\n      // point to be eliminated, use the latter’s weight instead. This ensures\n      // that the current point cannot be eliminated without eliminating\n      // previously- eliminated points.\n      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n      else maxWeight = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    return arc;\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = weight(triangle);\n    heap.push(triangle);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-simplify/src/presimplify.js\n// module id = 58\n// module chunks = 0","function compare(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nexport default function() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compare(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-simplify/src/heap.js\n// module id = 59\n// module chunks = 0","export default function(topology, p) {\n  var array = [];\n\n  topology.arcs.forEach(function(arc) {\n    arc.forEach(function(point) {\n      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n        array.push(point[2]);\n      }\n    });\n  });\n\n  return array.length && quantile(array.sort(descending), p);\n}\n\nfunction quantile(array, p) {\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return array[0];\n  if (p >= 1) return array[n - 1];\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = array[i],\n      b = array[i + 1];\n  return a + (b - a) * (h - i);\n}\n\nfunction descending(a, b) {\n  return b - a;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-simplify/src/quantile.js\n// module id = 60\n// module chunks = 0","export default function(topology, minWeight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  // Remove points whose weight is less than the minimum weight.\n  var arcs = topology.arcs.map(function(input) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        point;\n\n    while (++i < n) {\n      if ((point = input[i])[2] >= minWeight) {\n        output[j++] = [point[0], point[1]];\n      }\n    }\n\n    output.length = j;\n    return output;\n  });\n\n  return {\n    type: \"Topology\",\n    transform: topology.transform,\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-simplify/src/simplify.js\n// module id = 61\n// module chunks = 0","var pi = Math.PI,\n    tau = 2 * pi,\n    quarterPi = pi / 4,\n    radians = pi / 180,\n    abs = Math.abs,\n    atan2 = Math.atan2,\n    cos = Math.cos,\n    sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0, lambda1 = point[0] * radians,\n      phi1 = (point[1] * radians) / 2 + quarterPi,\n      cosPhi0, cosPhi1 = cos(phi1),\n      sinPhi0, sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = (point[1] * radians) / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nexport function sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nexport function sphericalTriangleArea(t) {\n  return abs(halfArea(t, false)) * 2;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/topojson-simplify/src/spherical.js\n// module id = 62\n// module chunks = 0","module.exports = {\"type\":\"FeatureCollection\",\"crs\":{\"type\":\"name\",\"properties\":{\"name\":\"urn:ogc:def:crs:OGC:1.3:CRS84\"}},\"features\":[{\"type\":\"Feature\",\"properties\":{\"Name\":\"Tulelake\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.4774916,41.9559884,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"El Centro\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-115.5630514,32.792,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Solano County\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.9017954,38.3104969,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Arcade Creek\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.354107,38.6549656,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Sacramento\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.4943996,38.5815719,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"San Joaquin Valley\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.8677352,37.9832553,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Tulare\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-119.3473379,36.2077288,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Grizzly Island Wildlife Area\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.975662,38.1551766,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Woodland\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.7732971,38.6785157,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Lake Tahoe Basin Management Unit\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-119.9732314,38.9325805,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Big Sur\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.856261,36.3614749,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Point Reyes\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-122.9912711,38.017769,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Muir Woods National Monument\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-122.5811177,37.8970199,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Redwood National and State Parks\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-124.0046275,41.2131788,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Arbuckle\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-122.0577477,39.0173963,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Hopland\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-123.1163918,38.9729541,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"McLaughlin Natural Reserve\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-122.421662,38.8739434,0]}},{\"type\":\"Feature\",\"properties\":{\"Name\":\"Davis\",\"description\":null,\"timestamp\":null,\"begin\":null,\"end\":null,\"altitudeMode\":null,\"tessellate\":-1,\"extrude\":0,\"visibility\":-1,\"drawOrder\":null,\"icon\":null},\"geometry\":{\"type\":\"Point\",\"coordinates\":[-121.7405167,38.5449065,0]}}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/js/map-data.json\n// module id = 63\n// module chunks = 0","module.exports = {\"type\":\"Feature\",\"id\":\"06\",\"properties\":{\"name\":\"California\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-123.233256,42.006186],[-122.378853,42.011663],[-121.037003,41.995232],[-120.001861,41.995232],[-119.996384,40.264519],[-120.001861,38.999346],[-118.71478,38.101128],[-117.498899,37.21934],[-116.540435,36.501861],[-115.85034,35.970598],[-114.634459,35.00118],[-114.634459,34.87521],[-114.470151,34.710902],[-114.333228,34.448009],[-114.136058,34.305608],[-114.256551,34.174162],[-114.415382,34.108438],[-114.535874,33.933176],[-114.497536,33.697668],[-114.524921,33.54979],[-114.727567,33.40739],[-114.661844,33.034958],[-114.524921,33.029481],[-114.470151,32.843265],[-114.524921,32.755634],[-114.72209,32.717295],[-116.04751,32.624187],[-117.126467,32.536556],[-117.24696,32.668003],[-117.252437,32.876127],[-117.329114,33.122589],[-117.471515,33.297851],[-117.7837,33.538836],[-118.183517,33.763391],[-118.260194,33.703145],[-118.413548,33.741483],[-118.391641,33.840068],[-118.566903,34.042715],[-118.802411,33.998899],[-119.218659,34.146777],[-119.278905,34.26727],[-119.558229,34.415147],[-119.875891,34.40967],[-120.138784,34.475393],[-120.472878,34.448009],[-120.64814,34.579455],[-120.609801,34.858779],[-120.670048,34.902595],[-120.631709,35.099764],[-120.894602,35.247642],[-120.905556,35.450289],[-121.004141,35.461243],[-121.168449,35.636505],[-121.283465,35.674843],[-121.332757,35.784382],[-121.716143,36.195153],[-121.896882,36.315645],[-121.935221,36.638785],[-121.858544,36.6114],[-121.787344,36.803093],[-121.929744,36.978355],[-122.105006,36.956447],[-122.335038,37.115279],[-122.417192,37.241248],[-122.400761,37.361741],[-122.515777,37.520572],[-122.515777,37.783465],[-122.329561,37.783465],[-122.406238,38.15042],[-122.488392,38.112082],[-122.504823,37.931343],[-122.701993,37.893004],[-122.937501,38.029928],[-122.97584,38.265436],[-123.129194,38.451652],[-123.331841,38.566668],[-123.44138,38.698114],[-123.737134,38.95553],[-123.687842,39.032208],[-123.824765,39.366301],[-123.764519,39.552517],[-123.85215,39.831841],[-124.109566,40.105688],[-124.361506,40.259042],[-124.410798,40.439781],[-124.158859,40.877937],[-124.109566,41.025814],[-124.158859,41.14083],[-124.065751,41.442061],[-124.147905,41.715908],[-124.257444,41.781632],[-124.213628,42.000709],[-123.233256,42.006186]]]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/js/map-geo.json\n// module id = 64\n// module chunks = 0","module.exports = {\"type\":\"Topology\",\"bbox\":[-124.409591,32.534156,-114.134427,42.009518],\"objects\":{\"counties\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"GEO_ID\":\"0500000US06035\",\"STATE\":\"06\",\"COUNTY\":\"035\",\"NAME\":\"Lassen\",\"LSAD\":\"County\",\"CENSUSAREA\":4541.184}},{\"type\":\"Polygon\",\"arcs\":[[-4,5,6,7]],\"properties\":{\"GEO_ID\":\"0500000US06049\",\"STATE\":\"06\",\"COUNTY\":\"049\",\"NAME\":\"Modoc\",\"LSAD\":\"County\",\"CENSUSAREA\":3917.77}},{\"type\":\"MultiPolygon\",\"arcs\":[[[8]],[[9,10]],[[11,12]],[[13,14]],[[15]],[[16,17]]],\"properties\":{\"GEO_ID\":\"0500000US06075\",\"STATE\":\"06\",\"COUNTY\":\"075\",\"NAME\":\"San Francisco\",\"LSAD\":\"County\",\"CENSUSAREA\":46.873}},{\"type\":\"MultiPolygon\",\"arcs\":[[[18]],[[19]],[[20]],[[21]],[[22,23,24,25]]],\"properties\":{\"GEO_ID\":\"0500000US06083\",\"STATE\":\"06\",\"COUNTY\":\"083\",\"NAME\":\"Santa Barbara\",\"LSAD\":\"County\",\"CENSUSAREA\":2735.085}},{\"type\":\"Polygon\",\"arcs\":[[26,27,28,-1,29]],\"properties\":{\"GEO_ID\":\"0500000US06091\",\"STATE\":\"06\",\"COUNTY\":\"091\",\"NAME\":\"Sierra\",\"LSAD\":\"County\",\"CENSUSAREA\":953.214}},{\"type\":\"Polygon\",\"arcs\":[[30,31,32,33,34,35]],\"properties\":{\"GEO_ID\":\"0500000US06095\",\"STATE\":\"06\",\"COUNTY\":\"095\",\"NAME\":\"Solano\",\"LSAD\":\"County\",\"CENSUSAREA\":821.765}},{\"type\":\"Polygon\",\"arcs\":[[36,37,38,39,40,41]],\"properties\":{\"GEO_ID\":\"0500000US06101\",\"STATE\":\"06\",\"COUNTY\":\"101\",\"NAME\":\"Sutter\",\"LSAD\":\"County\",\"CENSUSAREA\":602.41}},{\"type\":\"Polygon\",\"arcs\":[[42,43,44,45,46]],\"properties\":{\"GEO_ID\":\"0500000US06105\",\"STATE\":\"06\",\"COUNTY\":\"105\",\"NAME\":\"Trinity\",\"LSAD\":\"County\",\"CENSUSAREA\":3179.254}},{\"type\":\"MultiPolygon\",\"arcs\":[[[47]],[[48]],[[-26,49,50,51]]],\"properties\":{\"GEO_ID\":\"0500000US06111\",\"STATE\":\"06\",\"COUNTY\":\"111\",\"NAME\":\"Ventura\",\"LSAD\":\"County\",\"CENSUSAREA\":1843.133}},{\"type\":\"Polygon\",\"arcs\":[[-41,52,53,-28,54,55]],\"properties\":{\"GEO_ID\":\"0500000US06115\",\"STATE\":\"06\",\"COUNTY\":\"115\",\"NAME\":\"Yuba\",\"LSAD\":\"County\",\"CENSUSAREA\":631.839}},{\"type\":\"Polygon\",\"arcs\":[[56,57,58,59,60,61]],\"properties\":{\"GEO_ID\":\"0500000US06033\",\"STATE\":\"06\",\"COUNTY\":\"033\",\"NAME\":\"Lake\",\"LSAD\":\"County\",\"CENSUSAREA\":1256.464}},{\"type\":\"Polygon\",\"arcs\":[[62,63,64,65,66,67]],\"properties\":{\"GEO_ID\":\"0500000US06071\",\"STATE\":\"06\",\"COUNTY\":\"071\",\"NAME\":\"San Bernardino\",\"LSAD\":\"County\",\"CENSUSAREA\":20056.938}},{\"type\":\"Polygon\",\"arcs\":[[68,69,70,71,72]],\"properties\":{\"GEO_ID\":\"0500000US06087\",\"STATE\":\"06\",\"COUNTY\":\"087\",\"NAME\":\"Santa Cruz\",\"LSAD\":\"County\",\"CENSUSAREA\":445.17}},{\"type\":\"Polygon\",\"arcs\":[[73,74,75,76,77,78]],\"properties\":{\"GEO_ID\":\"0500000US06001\",\"STATE\":\"06\",\"COUNTY\":\"001\",\"NAME\":\"Alameda\",\"LSAD\":\"County\",\"CENSUSAREA\":739.017}},{\"type\":\"Polygon\",\"arcs\":[[79,80,81,82,83,84]],\"properties\":{\"GEO_ID\":\"0500000US06003\",\"STATE\":\"06\",\"COUNTY\":\"003\",\"NAME\":\"Alpine\",\"LSAD\":\"County\",\"CENSUSAREA\":738.332}},{\"type\":\"Polygon\",\"arcs\":[[85,86,87,-83,88]],\"properties\":{\"GEO_ID\":\"0500000US06005\",\"STATE\":\"06\",\"COUNTY\":\"005\",\"NAME\":\"Amador\",\"LSAD\":\"County\",\"CENSUSAREA\":594.583}},{\"type\":\"Polygon\",\"arcs\":[[89,-53,-40,90,91,92]],\"properties\":{\"GEO_ID\":\"0500000US06007\",\"STATE\":\"06\",\"COUNTY\":\"007\",\"NAME\":\"Butte\",\"LSAD\":\"County\",\"CENSUSAREA\":1636.464}},{\"type\":\"Polygon\",\"arcs\":[[-82,93,94,95,-89]],\"properties\":{\"GEO_ID\":\"0500000US06009\",\"STATE\":\"06\",\"COUNTY\":\"009\",\"NAME\":\"Calaveras\",\"LSAD\":\"County\",\"CENSUSAREA\":1020.012}},{\"type\":\"Polygon\",\"arcs\":[[-91,-39,96,-60,97]],\"properties\":{\"GEO_ID\":\"0500000US06011\",\"STATE\":\"06\",\"COUNTY\":\"011\",\"NAME\":\"Colusa\",\"LSAD\":\"County\",\"CENSUSAREA\":1150.731}},{\"type\":\"Polygon\",\"arcs\":[[-36,98,99,-74,100]],\"properties\":{\"GEO_ID\":\"0500000US06013\",\"STATE\":\"06\",\"COUNTY\":\"013\",\"NAME\":\"Contra Costa\",\"LSAD\":\"County\",\"CENSUSAREA\":715.937}},{\"type\":\"Polygon\",\"arcs\":[[101,102,103]],\"properties\":{\"GEO_ID\":\"0500000US06015\",\"STATE\":\"06\",\"COUNTY\":\"015\",\"NAME\":\"Del Norte\",\"LSAD\":\"County\",\"CENSUSAREA\":1006.373}},{\"type\":\"Polygon\",\"arcs\":[[-84,-88,104,105,106]],\"properties\":{\"GEO_ID\":\"0500000US06017\",\"STATE\":\"06\",\"COUNTY\":\"017\",\"NAME\":\"El Dorado\",\"LSAD\":\"County\",\"CENSUSAREA\":1707.883}},{\"type\":\"Polygon\",\"arcs\":[[107,108,109,110,111,112,113,114]],\"properties\":{\"GEO_ID\":\"0500000US06019\",\"STATE\":\"06\",\"COUNTY\":\"019\",\"NAME\":\"Fresno\",\"LSAD\":\"County\",\"CENSUSAREA\":5957.991}},{\"type\":\"Polygon\",\"arcs\":[[-98,-59,115,116,-92]],\"properties\":{\"GEO_ID\":\"0500000US06021\",\"STATE\":\"06\",\"COUNTY\":\"021\",\"NAME\":\"Glenn\",\"LSAD\":\"County\",\"CENSUSAREA\":1313.947}},{\"type\":\"Polygon\",\"arcs\":[[-103,117,-43,118,119]],\"properties\":{\"GEO_ID\":\"0500000US06023\",\"STATE\":\"06\",\"COUNTY\":\"023\",\"NAME\":\"Humboldt\",\"LSAD\":\"County\",\"CENSUSAREA\":3567.987}},{\"type\":\"Polygon\",\"arcs\":[[120,121,122]],\"properties\":{\"GEO_ID\":\"0500000US06025\",\"STATE\":\"06\",\"COUNTY\":\"025\",\"NAME\":\"Imperial\",\"LSAD\":\"County\",\"CENSUSAREA\":4176.603}},{\"type\":\"Polygon\",\"arcs\":[[-67,123,124,-114,125,126]],\"properties\":{\"GEO_ID\":\"0500000US06027\",\"STATE\":\"06\",\"COUNTY\":\"027\",\"NAME\":\"Inyo\",\"LSAD\":\"County\",\"CENSUSAREA\":10180.879}},{\"type\":\"Polygon\",\"arcs\":[[-124,-66,127,-50,-25,128,129,130]],\"properties\":{\"GEO_ID\":\"0500000US06029\",\"STATE\":\"06\",\"COUNTY\":\"029\",\"NAME\":\"Kern\",\"LSAD\":\"County\",\"CENSUSAREA\":8131.916}},{\"type\":\"Polygon\",\"arcs\":[[131,132,-108,133,-130]],\"properties\":{\"GEO_ID\":\"0500000US06031\",\"STATE\":\"06\",\"COUNTY\":\"031\",\"NAME\":\"Kings\",\"LSAD\":\"County\",\"CENSUSAREA\":1389.42}},{\"type\":\"MultiPolygon\",\"arcs\":[[[134]],[[135]],[[-51,-128,-65,136,137]]],\"properties\":{\"GEO_ID\":\"0500000US06037\",\"STATE\":\"06\",\"COUNTY\":\"037\",\"NAME\":\"Los Angeles\",\"LSAD\":\"County\",\"CENSUSAREA\":4057.884}},{\"type\":\"Polygon\",\"arcs\":[[138,139,140,141,-112]],\"properties\":{\"GEO_ID\":\"0500000US06039\",\"STATE\":\"06\",\"COUNTY\":\"039\",\"NAME\":\"Madera\",\"LSAD\":\"County\",\"CENSUSAREA\":2137.069}},{\"type\":\"MultiPolygon\",\"arcs\":[[[142,-10]],[[-12,143,-14,144,145,146]]],\"properties\":{\"GEO_ID\":\"0500000US06041\",\"STATE\":\"06\",\"COUNTY\":\"041\",\"NAME\":\"Marin\",\"LSAD\":\"County\",\"CENSUSAREA\":520.306}},{\"type\":\"Polygon\",\"arcs\":[[147,148,149,-140]],\"properties\":{\"GEO_ID\":\"0500000US06043\",\"STATE\":\"06\",\"COUNTY\":\"043\",\"NAME\":\"Mariposa\",\"LSAD\":\"County\",\"CENSUSAREA\":1448.816}},{\"type\":\"Polygon\",\"arcs\":[[-119,-47,150,-116,-58,151,152]],\"properties\":{\"GEO_ID\":\"0500000US06045\",\"STATE\":\"06\",\"COUNTY\":\"045\",\"NAME\":\"Mendocino\",\"LSAD\":\"County\",\"CENSUSAREA\":3506.343}},{\"type\":\"Polygon\",\"arcs\":[[-111,153,154,155,-148,-139]],\"properties\":{\"GEO_ID\":\"0500000US06047\",\"STATE\":\"06\",\"COUNTY\":\"047\",\"NAME\":\"Merced\",\"LSAD\":\"County\",\"CENSUSAREA\":1934.972}},{\"type\":\"Polygon\",\"arcs\":[[-126,-113,-142,156,-80,157]],\"properties\":{\"GEO_ID\":\"0500000US06051\",\"STATE\":\"06\",\"COUNTY\":\"051\",\"NAME\":\"Mono\",\"LSAD\":\"County\",\"CENSUSAREA\":3048.982}},{\"type\":\"Polygon\",\"arcs\":[[-72,158,-109,-133,159,160]],\"properties\":{\"GEO_ID\":\"0500000US06053\",\"STATE\":\"06\",\"COUNTY\":\"053\",\"NAME\":\"Monterey\",\"LSAD\":\"County\",\"CENSUSAREA\":3280.595}},{\"type\":\"Polygon\",\"arcs\":[[-62,161,-33,162]],\"properties\":{\"GEO_ID\":\"0500000US06055\",\"STATE\":\"06\",\"COUNTY\":\"055\",\"NAME\":\"Napa\",\"LSAD\":\"County\",\"CENSUSAREA\":748.362}},{\"type\":\"Polygon\",\"arcs\":[[163,-55,-27,164]],\"properties\":{\"GEO_ID\":\"0500000US06057\",\"STATE\":\"06\",\"COUNTY\":\"057\",\"NAME\":\"Nevada\",\"LSAD\":\"County\",\"CENSUSAREA\":957.772}},{\"type\":\"Polygon\",\"arcs\":[[-137,-64,165,166,167]],\"properties\":{\"GEO_ID\":\"0500000US06059\",\"STATE\":\"06\",\"COUNTY\":\"059\",\"NAME\":\"Orange\",\"LSAD\":\"County\",\"CENSUSAREA\":790.568}},{\"type\":\"Polygon\",\"arcs\":[[168,-106,169,-42,-56,-164]],\"properties\":{\"GEO_ID\":\"0500000US06061\",\"STATE\":\"06\",\"COUNTY\":\"061\",\"NAME\":\"Placer\",\"LSAD\":\"County\",\"CENSUSAREA\":1407.009}},{\"type\":\"Polygon\",\"arcs\":[[-29,-54,-90,170,171,-2]],\"properties\":{\"GEO_ID\":\"0500000US06063\",\"STATE\":\"06\",\"COUNTY\":\"063\",\"NAME\":\"Plumas\",\"LSAD\":\"County\",\"CENSUSAREA\":2553.043}},{\"type\":\"Polygon\",\"arcs\":[[-122,172,-166,-63,173]],\"properties\":{\"GEO_ID\":\"0500000US06065\",\"STATE\":\"06\",\"COUNTY\":\"065\",\"NAME\":\"Riverside\",\"LSAD\":\"County\",\"CENSUSAREA\":7206.48}},{\"type\":\"Polygon\",\"arcs\":[[-105,-87,174,-99,-35,175,-37,-170]],\"properties\":{\"GEO_ID\":\"0500000US06067\",\"STATE\":\"06\",\"COUNTY\":\"067\",\"NAME\":\"Sacramento\",\"LSAD\":\"County\",\"CENSUSAREA\":964.644}},{\"type\":\"Polygon\",\"arcs\":[[-159,-71,176,-154,-110]],\"properties\":{\"GEO_ID\":\"0500000US06069\",\"STATE\":\"06\",\"COUNTY\":\"069\",\"NAME\":\"San Benito\",\"LSAD\":\"County\",\"CENSUSAREA\":1388.71}},{\"type\":\"Polygon\",\"arcs\":[[-167,-173,-121,177]],\"properties\":{\"GEO_ID\":\"0500000US06073\",\"STATE\":\"06\",\"COUNTY\":\"073\",\"NAME\":\"San Diego\",\"LSAD\":\"County\",\"CENSUSAREA\":4206.63}},{\"type\":\"Polygon\",\"arcs\":[[-175,-86,-96,178,-75,-100]],\"properties\":{\"GEO_ID\":\"0500000US06077\",\"STATE\":\"06\",\"COUNTY\":\"077\",\"NAME\":\"San Joaquin\",\"LSAD\":\"County\",\"CENSUSAREA\":1391.322}},{\"type\":\"Polygon\",\"arcs\":[[-160,-132,-129,-24,179]],\"properties\":{\"GEO_ID\":\"0500000US06079\",\"STATE\":\"06\",\"COUNTY\":\"079\",\"NAME\":\"San Luis Obispo\",\"LSAD\":\"County\",\"CENSUSAREA\":3298.567}},{\"type\":\"Polygon\",\"arcs\":[[-78,180,-69,181,-17,182]],\"properties\":{\"GEO_ID\":\"0500000US06081\",\"STATE\":\"06\",\"COUNTY\":\"081\",\"NAME\":\"San Mateo\",\"LSAD\":\"County\",\"CENSUSAREA\":448.408}},{\"type\":\"Polygon\",\"arcs\":[[-181,-77,183,-155,-177,-70]],\"properties\":{\"GEO_ID\":\"0500000US06085\",\"STATE\":\"06\",\"COUNTY\":\"085\",\"NAME\":\"Santa Clara\",\"LSAD\":\"County\",\"CENSUSAREA\":1290.1}},{\"type\":\"Polygon\",\"arcs\":[[-45,184,-6,-3,-172,185]],\"properties\":{\"GEO_ID\":\"0500000US06089\",\"STATE\":\"06\",\"COUNTY\":\"089\",\"NAME\":\"Shasta\",\"LSAD\":\"County\",\"CENSUSAREA\":3775.402}},{\"type\":\"Polygon\",\"arcs\":[[-7,-185,-44,-118,-102,186]],\"properties\":{\"GEO_ID\":\"0500000US06093\",\"STATE\":\"06\",\"COUNTY\":\"093\",\"NAME\":\"Siskiyou\",\"LSAD\":\"County\",\"CENSUSAREA\":6277.887}},{\"type\":\"Polygon\",\"arcs\":[[-152,-57,-163,-32,187,-146,188]],\"properties\":{\"GEO_ID\":\"0500000US06097\",\"STATE\":\"06\",\"COUNTY\":\"097\",\"NAME\":\"Sonoma\",\"LSAD\":\"County\",\"CENSUSAREA\":1575.849}},{\"type\":\"Polygon\",\"arcs\":[[-76,-179,-95,189,-149,-156,-184]],\"properties\":{\"GEO_ID\":\"0500000US06099\",\"STATE\":\"06\",\"COUNTY\":\"099\",\"NAME\":\"Stanislaus\",\"LSAD\":\"County\",\"CENSUSAREA\":1494.827}},{\"type\":\"Polygon\",\"arcs\":[[-171,-93,-117,-151,-46,-186]],\"properties\":{\"GEO_ID\":\"0500000US06103\",\"STATE\":\"06\",\"COUNTY\":\"103\",\"NAME\":\"Tehama\",\"LSAD\":\"County\",\"CENSUSAREA\":2949.709}},{\"type\":\"Polygon\",\"arcs\":[[-134,-115,-125,-131]],\"properties\":{\"GEO_ID\":\"0500000US06107\",\"STATE\":\"06\",\"COUNTY\":\"107\",\"NAME\":\"Tulare\",\"LSAD\":\"County\",\"CENSUSAREA\":4824.215}},{\"type\":\"Polygon\",\"arcs\":[[-141,-150,-190,-94,-81,-157]],\"properties\":{\"GEO_ID\":\"0500000US06109\",\"STATE\":\"06\",\"COUNTY\":\"109\",\"NAME\":\"Tuolumne\",\"LSAD\":\"County\",\"CENSUSAREA\":2220.884}},{\"type\":\"Polygon\",\"arcs\":[[-162,-61,-97,-38,-176,-34]],\"properties\":{\"GEO_ID\":\"0500000US06113\",\"STATE\":\"06\",\"COUNTY\":\"113\",\"NAME\":\"Yolo\",\"LSAD\":\"County\",\"CENSUSAREA\":1014.689}}]}},\"arcs\":[[[-120.001319,39.722416],[-120.015804,39.722359],[-120.015734,39.708721],[-120.126036,39.708888],[-120.147149,39.707658]],[[-120.147149,39.707658],[-120.14658,39.736406],[-120.127763,39.736159],[-120.127635,39.750954],[-120.11911,39.751087],[-120.119584,39.765627],[-120.110627,39.765779],[-120.111068,39.780817],[-120.10781,39.794214],[-120.108321,39.828391],[-120.108099,39.881266],[-120.099339,39.881219],[-120.099556,39.910339],[-120.108883,39.910374],[-120.108761,39.93951],[-120.126574,39.939551],[-120.126711,39.947749],[-120.135768,39.947757],[-120.135735,39.95504],[-120.144991,39.955067],[-120.145015,39.962292],[-120.154379,39.962351],[-120.15433,39.968534],[-120.163654,39.968659],[-120.163406,39.98378],[-120.173274,39.983889],[-120.173003,39.998325],[-120.182454,39.998521],[-120.182484,40.01335],[-120.201264,40.013474],[-120.201383,40.042737],[-120.21089,40.042757],[-120.211333,40.056328],[-120.209315,40.056287],[-120.209641,40.086008],[-120.228663,40.085413],[-120.24689,40.085805],[-120.246788,40.107885],[-120.265633,40.107748],[-120.266561,40.115869],[-120.275153,40.114809],[-120.341385,40.115243],[-120.341463,40.122556],[-120.360611,40.122514],[-120.360401,40.129532],[-120.379399,40.12951],[-120.379117,40.140556],[-120.398307,40.14064],[-120.398256,40.147365],[-120.407954,40.147354],[-120.407609,40.162164],[-120.417254,40.162076],[-120.416918,40.169441],[-120.436371,40.169563],[-120.436468,40.176646],[-120.445892,40.176854],[-120.445285,40.191357],[-120.454152,40.191355],[-120.454331,40.205751],[-120.482848,40.205798],[-120.48246,40.220184],[-120.492062,40.220292],[-120.49172,40.234791],[-120.510665,40.234698],[-120.510817,40.248945],[-120.529734,40.249197],[-120.529699,40.256203],[-120.548663,40.256275],[-120.548724,40.263596],[-120.576729,40.263796],[-120.576825,40.28543],[-120.622796,40.28571],[-120.622661,40.293014],[-120.642505,40.293184],[-120.642331,40.300393],[-120.651651,40.300451],[-120.652158,40.307656],[-120.679262,40.30853],[-120.726417,40.308433],[-120.726496,40.315756],[-120.764403,40.31601],[-120.764346,40.308718],[-120.773728,40.308678],[-120.773805,40.301434],[-120.796421,40.301281],[-120.796,40.277726],[-120.81465,40.27783],[-120.815013,40.270726],[-120.83382,40.270728],[-120.834058,40.256161],[-120.843504,40.256019],[-120.843599,40.248892],[-120.853197,40.248855],[-120.853118,40.241803],[-120.871782,40.24164],[-120.871757,40.199438],[-120.890676,40.19941],[-120.890646,40.192116],[-120.928582,40.191931],[-120.928066,40.206451],[-120.947152,40.206499],[-120.946188,40.220808],[-121.003732,40.220975],[-121.003918,40.234941],[-121.041521,40.234795],[-121.041517,40.256474],[-121.061493,40.256417],[-121.06094,40.314699],[-121.061417,40.446536],[-121.19896,40.44645],[-121.327826,40.445367]],[[-121.327826,40.445367],[-121.32668,40.497574],[-121.32298,40.497589],[-121.32288,40.584916],[-121.32191,40.654957],[-121.321074,40.758516],[-121.321191,40.859922],[-121.320808,40.894418],[-121.319972,40.905886],[-121.332338,40.905394],[-121.331214,40.920689],[-121.33114,41.045499],[-121.331794,41.107882],[-121.331786,41.183886]],[[-121.331786,41.183886],[-121.210332,41.184418],[-120.971409,41.184257],[-120.882641,41.18401],[-120.78238,41.184031],[-120.666668,41.183843],[-120.626076,41.184039],[-120.620688,41.184469],[-120.309952,41.184115],[-120.133234,41.184139],[-119.999866,41.183974]],[[-119.999866,41.183974],[-119.999358,40.873101],[-119.998479,40.749899],[-119.997533,40.720992],[-119.995926,40.499901],[-119.996183,40.262461],[-119.997124,40.126363],[-119.997634,39.956505],[-119.999733,39.851406],[-120.001319,39.722416]],[[-121.331786,41.183886],[-121.446495,41.183484]],[[-121.446495,41.183484],[-121.446406,41.292232],[-121.446599,41.428983],[-121.448699,41.429383],[-121.448828,41.516718],[-121.449191,41.621435],[-121.449723,41.624877],[-121.448564,41.656889],[-121.448981,41.776392],[-121.456922,41.776302],[-121.457213,41.949945],[-121.447647,41.950317],[-121.44754,41.997169]],[[-121.44754,41.997169],[-121.376101,41.997026],[-121.340517,41.99622],[-121.309981,41.997612],[-121.251099,41.99757],[-121.247616,41.997054],[-121.126093,41.99601],[-121.094926,41.994658],[-121.035195,41.993323],[-120.879481,41.993781],[-120.812279,41.994183],[-120.692219,41.993677],[-120.647173,41.993084],[-120.501069,41.993785],[-120.286424,41.993058],[-120.181563,41.994588],[-120.001058,41.995139],[-119.999168,41.99454],[-119.999276,41.874891],[-119.998287,41.749892],[-119.998855,41.624893],[-119.99828,41.618765],[-119.999471,41.499894],[-119.999866,41.183974]],[[-123.013916,37.700355],[-123.012194,37.706749],[-123.004489,37.706262],[-122.997189,37.697909],[-123.000677,37.690203],[-123.005543,37.689392],[-123.011464,37.691907],[-123.013916,37.700355]],[[-122.418698,37.852717],[-122.421439,37.869969]],[[-122.421439,37.869969],[-122.41847,37.861764],[-122.418698,37.852717]],[[-122.47986,37.825641],[-122.476536,37.832812]],[[-122.476536,37.832812],[-122.47986,37.825641]],[[-122.522836,37.824717],[-122.516081,37.82521],[-122.505383,37.822128]],[[-122.505383,37.822128],[-122.522836,37.824717]],[[-122.358786,37.814293],[-122.362661,37.807577],[-122.372422,37.811301],[-122.37267,37.81651],[-122.3785,37.826505],[-122.377879,37.830648],[-122.369941,37.832137],[-122.363244,37.823951],[-122.358786,37.814293]],[[-122.391374,37.708331],[-122.502427,37.708133]],[[-122.502427,37.708133],[-122.506483,37.723731],[-122.511983,37.77113],[-122.514483,37.780829],[-122.50531,37.788312],[-122.492883,37.787929],[-122.485783,37.790629],[-122.478083,37.810828],[-122.470336,37.808671],[-122.463793,37.804653],[-122.425942,37.810979],[-122.407452,37.811441],[-122.398139,37.80563],[-122.385323,37.790724],[-122.37878,37.752203],[-122.36758,37.740214],[-122.375854,37.734979],[-122.370094,37.732331],[-122.365478,37.734621],[-122.356784,37.729505],[-122.361749,37.71501],[-122.370411,37.717572],[-122.377251,37.714557],[-122.378599,37.708634],[-122.391374,37.708331]],[[-119.789798,34.05726],[-119.770729,34.055051],[-119.763688,34.057155],[-119.755521,34.056716],[-119.739472,34.049299],[-119.726437,34.047908],[-119.712576,34.043265],[-119.704628,34.037681],[-119.686507,34.019805],[-119.637742,34.013178],[-119.619343,34.016468],[-119.612226,34.021256],[-119.604287,34.031561],[-119.609239,34.03735],[-119.59324,34.049625],[-119.57341,34.05011],[-119.5667,34.053452],[-119.529603,34.041155],[-119.52064,34.034262],[-119.532413,34.024949],[-119.542449,34.021082],[-119.54828,34.009819],[-119.547072,34.005469],[-119.554472,33.99782],[-119.560464,33.99553],[-119.575636,33.996009],[-119.5902,33.989712],[-119.619082,33.987228],[-119.621117,33.98899],[-119.64771,33.987786],[-119.662825,33.985889],[-119.69011,33.972225],[-119.706952,33.969178],[-119.714696,33.961439],[-119.721206,33.959583],[-119.742966,33.963877],[-119.750438,33.963759],[-119.758141,33.959212],[-119.795938,33.962929],[-119.842748,33.97034],[-119.873358,33.980375],[-119.877057,33.985757],[-119.883033,34.000802],[-119.884896,34.008814],[-119.876916,34.023527],[-119.876329,34.032087],[-119.892821,34.045529],[-119.916216,34.058351],[-119.923337,34.069361],[-119.919155,34.07728],[-119.912857,34.077508],[-119.89113,34.072856],[-119.857304,34.071298],[-119.825865,34.059794],[-119.818742,34.052997],[-119.807825,34.052127],[-119.789798,34.05726]],[[-120.248484,33.999329],[-120.247393,34.001911],[-120.238657,34.007592],[-120.230001,34.010136],[-120.221287,34.010367],[-120.208478,34.005655],[-120.19578,34.004284],[-120.167306,34.008219],[-120.151663,34.018126],[-120.147647,34.024831],[-120.135853,34.026087],[-120.115058,34.019866],[-120.090182,34.019806],[-120.073609,34.024477],[-120.062778,34.031161],[-120.061953,34.033976],[-120.055107,34.037729],[-120.043259,34.035806],[-120.044004,34.02482],[-120.047798,34.021227],[-120.050382,34.013331],[-120.046575,34.000002],[-120.041311,33.994507],[-120.025653,33.985553],[-120.011123,33.979894],[-120.003815,33.979547],[-119.984316,33.983948],[-119.978876,33.983081],[-119.979913,33.969623],[-119.976857,33.956693],[-119.971141,33.950401],[-119.97026,33.944359],[-119.973691,33.942481],[-120.00096,33.941554],[-120.017715,33.936366],[-120.046881,33.919597],[-120.049682,33.914563],[-120.077793,33.908886],[-120.098601,33.907853],[-120.105489,33.90428],[-120.109137,33.899129],[-120.121817,33.895712],[-120.168974,33.91909],[-120.179049,33.927994],[-120.18984,33.947703],[-120.198602,33.952211],[-120.200085,33.956904],[-120.209372,33.972376],[-120.224461,33.989059],[-120.248484,33.999329]],[[-120.46258,34.042627],[-120.440248,34.036918],[-120.415287,34.05496],[-120.403613,34.050442],[-120.390906,34.051994],[-120.374211,34.062658],[-120.368813,34.06778],[-120.368278,34.076465],[-120.362251,34.073056],[-120.354982,34.059256],[-120.36029,34.05582],[-120.358608,34.050235],[-120.346946,34.046576],[-120.331161,34.049097],[-120.319032,34.041979],[-120.313175,34.036576],[-120.302122,34.023574],[-120.304543,34.021171],[-120.317052,34.018837],[-120.347706,34.020114],[-120.35532,34.017914],[-120.35793,34.015029],[-120.375143,34.018775],[-120.409368,34.032198],[-120.415225,34.032245],[-120.427408,34.025425],[-120.454134,34.028081],[-120.459635,34.031537],[-120.465329,34.038448],[-120.46258,34.042627]],[[-119.048934,33.477592],[-119.048164,33.483692],[-119.038544,33.483345],[-119.029091,33.488674],[-119.027031,33.475956],[-119.032524,33.46513],[-119.050743,33.463242],[-119.048934,33.477592]],[[-119.478265,34.377197],[-119.510655,34.386295],[-119.536957,34.395495],[-119.559459,34.413395],[-119.616862,34.420995],[-119.638864,34.415696],[-119.648664,34.417396],[-119.671866,34.416096],[-119.688167,34.412497],[-119.684666,34.408297],[-119.691749,34.403154],[-119.709067,34.395397],[-119.729369,34.395897],[-119.74547,34.402898],[-119.785871,34.415997],[-119.794771,34.417597],[-119.835771,34.415796],[-119.853771,34.407996],[-119.873971,34.408795],[-119.925227,34.433931],[-119.956433,34.435288],[-119.971951,34.444641],[-120.008077,34.460447],[-120.038828,34.463434],[-120.050682,34.461651],[-120.088591,34.460208],[-120.097212,34.461809],[-120.118411,34.469927],[-120.141165,34.473405],[-120.183505,34.470372],[-120.225498,34.470587],[-120.238002,34.468098],[-120.25777,34.467451],[-120.283001,34.468354],[-120.295051,34.470623],[-120.301822,34.467077],[-120.341369,34.458789],[-120.441975,34.451512],[-120.451425,34.447094],[-120.471376,34.447846],[-120.47661,34.475131],[-120.480372,34.481059],[-120.490523,34.490075],[-120.511421,34.522953],[-120.524776,34.531291],[-120.581293,34.556959],[-120.608355,34.556656],[-120.612005,34.553564],[-120.622575,34.554017],[-120.637805,34.56622],[-120.645739,34.581035],[-120.640244,34.604406],[-120.625127,34.634489],[-120.60197,34.692095],[-120.60045,34.70464],[-120.601672,34.709721],[-120.614852,34.730709],[-120.62632,34.738072],[-120.637415,34.755895],[-120.62297,34.7933],[-120.616296,34.816308],[-120.609898,34.842751],[-120.610266,34.85818],[-120.616325,34.866739],[-120.639283,34.880413],[-120.642212,34.894145],[-120.647328,34.901133],[-120.662889,34.901183],[-120.670835,34.904115],[-120.648905,34.974393]],[[-120.648905,34.974393],[-120.634144,34.959562],[-120.628874,34.962877],[-120.616304,34.965949],[-120.613143,34.971272],[-120.602199,34.972749],[-120.5955,34.966488],[-120.585516,34.967221],[-120.582314,34.972261],[-120.575191,34.978291],[-120.566276,34.977472],[-120.55492,34.973881],[-120.53857,34.983754],[-120.496222,34.993155],[-120.438098,34.987755],[-120.390814,34.963109],[-120.361245,34.946466],[-120.35303,34.939287],[-120.340199,34.933776],[-120.328305,34.925821],[-120.318298,34.907038],[-120.310885,34.903785],[-120.301827,34.905571],[-120.298848,34.908787],[-120.300271,34.914697],[-120.293515,34.92481],[-120.29218,34.93031],[-120.294548,34.946594],[-120.296559,34.950395],[-120.303842,34.956115],[-120.301949,34.963381],[-120.308341,34.970336],[-120.315971,34.975709],[-120.314533,34.981501],[-120.319594,34.986111],[-120.325805,34.985571],[-120.333416,34.994756],[-120.334548,35.006315],[-120.323823,35.017314],[-120.309926,35.00922],[-120.290228,35.015435],[-120.278619,35.01156],[-120.277145,35.017576],[-120.27367,35.020805],[-120.266593,35.021257],[-120.260272,35.026535],[-120.261321,35.021368],[-120.257451,35.017589],[-120.252155,35.029022],[-120.243328,35.023307],[-120.233775,35.023681],[-120.231799,35.020515],[-120.224574,35.022735],[-120.215944,35.022617],[-120.21122,35.020455],[-120.21029,35.023767],[-120.203149,35.028736],[-120.188383,35.030378],[-120.186401,35.036552],[-120.180331,35.039278],[-120.18489,35.048449],[-120.18048,35.054954],[-120.17974,35.061812],[-120.172927,35.064486],[-120.172843,35.068641],[-120.167616,35.075297],[-120.15566,35.078066],[-120.155591,35.081537],[-120.149388,35.081469],[-120.149113,35.08436],[-120.143284,35.082086],[-120.140873,35.086802],[-120.145329,35.088731],[-120.141552,35.090963],[-120.142307,35.096048],[-120.138607,35.094156],[-120.135913,35.097852],[-120.126712,35.0921],[-120.124377,35.099695],[-120.119903,35.097921],[-120.115755,35.106675],[-120.11268,35.103513],[-120.107339,35.105249],[-120.107759,35.10893],[-120.102279,35.108445],[-120.101454,35.113463],[-120.09693,35.109595],[-120.092971,35.114171],[-120.079315,35.112744],[-120.0858,35.10917],[-120.080739,35.104895],[-120.072415,35.10471],[-120.067313,35.096762],[-120.05994,35.092972],[-120.048521,35.089901],[-120.044038,35.085993],[-120.039558,35.089152],[-120.032817,35.087824],[-120.029313,35.083571],[-120.024078,35.08404],[-120.023322,35.080311],[-120.014049,35.081447],[-120.013582,35.075578],[-120.005598,35.071793],[-120.002017,35.073205],[-119.992559,35.062931],[-119.988558,35.064929],[-119.980122,35.057573],[-119.965022,35.058825],[-119.960689,35.055712],[-119.95221,35.05734],[-119.94272,35.054439],[-119.931612,35.056343],[-119.928419,35.059794],[-119.917307,35.048977],[-119.909429,35.045953],[-119.910248,35.039566],[-119.901898,35.039004],[-119.901968,35.035793],[-119.889652,35.040629],[-119.878317,35.039712],[-119.875087,35.035689],[-119.865997,35.035083],[-119.863329,35.031425],[-119.854517,35.032149],[-119.84798,35.025418],[-119.84417,35.015476],[-119.84118,35.015015],[-119.830825,35.005781],[-119.82436,35.004951],[-119.815573,35.001108],[-119.809949,35.002097],[-119.805392,34.99821],[-119.801025,34.998859],[-119.798997,34.993249],[-119.789292,34.98867],[-119.780402,34.990729],[-119.761321,34.981121],[-119.755039,34.980007],[-119.745566,34.973676],[-119.72933,34.974649],[-119.717365,34.971776],[-119.708916,34.975337],[-119.700564,34.976674],[-119.693217,34.973706],[-119.678624,34.971775],[-119.673563,34.973575],[-119.664269,34.969876],[-119.654812,34.963385],[-119.644262,34.953575],[-119.634861,34.953875],[-119.624761,34.949175],[-119.616061,34.950575],[-119.60896,34.946875],[-119.59246,34.935076],[-119.586059,34.927275],[-119.578359,34.921875],[-119.561758,34.914075],[-119.535757,34.897576],[-119.501343,34.897873],[-119.490455,34.897475],[-119.490355,34.901174],[-119.472754,34.901174]],[[-119.472754,34.901174],[-119.442352,34.901274]],[[-119.442352,34.901274],[-119.442154,34.78647],[-119.441411,34.73327],[-119.442364,34.628796],[-119.442354,34.49095],[-119.442047,34.452794],[-119.440414,34.441842],[-119.443672,34.43667],[-119.444717,34.42951],[-119.453423,34.42861],[-119.454277,34.418166],[-119.445411,34.408881],[-119.445991,34.404067],[-119.454101,34.395568],[-119.463214,34.390549],[-119.472718,34.383556],[-119.473305,34.379295],[-119.478265,34.377197]],[[-120.003117,39.445044],[-120.145695,39.445169],[-120.44087,39.446006],[-120.505445,39.446117],[-120.507665,39.453403],[-120.51766,39.454995],[-120.534377,39.464653],[-120.534429,39.483765],[-120.53958,39.486749],[-120.541256,39.490889],[-120.54908,39.49447],[-120.550679,39.503629],[-120.556642,39.50681],[-120.55614,39.513658],[-120.560823,39.516207],[-120.568338,39.516036],[-120.577348,39.523192],[-120.583948,39.521506],[-120.588002,39.523563],[-120.597529,39.520712],[-120.622852,39.521339],[-120.624645,39.519547],[-120.63036,39.524898],[-120.634213,39.523503],[-120.65125,39.523592],[-120.653813,39.526554],[-120.659016,39.523794],[-120.673284,39.520382],[-120.678083,39.517591],[-120.686148,39.50726],[-120.700804,39.502583],[-120.706541,39.496029],[-120.70645,39.493221],[-120.717123,39.488805],[-120.713744,39.482788],[-120.725508,39.472905],[-120.737731,39.470063],[-120.743621,39.466285],[-120.742492,39.461276],[-120.752875,39.458315],[-120.75624,39.452474],[-120.761024,39.453941],[-120.765396,39.450889],[-120.775833,39.45076],[-120.780494,39.44657],[-120.784241,39.448038],[-120.791658,39.441287],[-120.797967,39.441172],[-120.800904,39.437484],[-120.805192,39.438673],[-120.810068,39.436206],[-120.816794,39.44081],[-120.817911,39.436457],[-120.826357,39.435039],[-120.83707,39.440419],[-120.843265,39.435115],[-120.854633,39.435856],[-120.864765,39.4302],[-120.886701,39.42829],[-120.893941,39.424132],[-120.912856,39.424838],[-120.914046,39.42017],[-120.929557,39.420812],[-120.931983,39.417125],[-120.943169,39.419751],[-120.950926,39.41886],[-120.957237,39.415751],[-120.971879,39.418958],[-120.978334,39.417872],[-120.985979,39.411463],[-120.992703,39.414392],[-121.006701,39.404871],[-121.014226,39.405753],[-121.015271,39.402616],[-121.007365,39.39969],[-121.018543,39.395066],[-121.022085,39.391558]],[[-121.022085,39.391558],[-121.032362,39.498786],[-121.0344,39.514436],[-121.044258,39.514096],[-121.048743,39.51702],[-121.055511,39.529957],[-121.057479,39.539991],[-121.051314,39.542072],[-121.04859,39.548018],[-121.043493,39.549144],[-121.032278,39.555627],[-121.031774,39.558235],[-121.024383,39.559049],[-121.013439,39.620238],[-121.009477,39.639459]],[[-121.009477,39.639459],[-121.004064,39.63811],[-120.986394,39.644684],[-120.983685,39.648844],[-120.978955,39.648717],[-120.969631,39.656163],[-120.963955,39.665046],[-120.949435,39.672548],[-120.952113,39.676424],[-120.944529,39.680921],[-120.93648,39.693242],[-120.93426,39.701618],[-120.934366,39.738792],[-120.925583,39.744345],[-120.922868,39.750884],[-120.916803,39.75323],[-120.913879,39.757222],[-120.905997,39.757348],[-120.903148,39.759776],[-120.895226,39.759849],[-120.890939,39.76452],[-120.88083,39.771049],[-120.875682,39.772213],[-120.873618,39.775875],[-120.85949,39.770463],[-120.85439,39.759912],[-120.844315,39.756134],[-120.843888,39.751329],[-120.837289,39.745566],[-120.828825,39.746839],[-120.826688,39.742094],[-120.819431,39.743765],[-120.81577,39.746945],[-120.813009,39.742331],[-120.814453,39.736757],[-120.811716,39.725396],[-120.808305,39.719922],[-120.804046,39.720944],[-120.794768,39.7184],[-120.791675,39.715124],[-120.792484,39.709794],[-120.782981,39.709843],[-120.782238,39.711677],[-120.771752,39.713517],[-120.77048,39.717757],[-120.759663,39.717622],[-120.749929,39.719635],[-120.74246,39.712543],[-120.734969,39.708611],[-120.716573,39.706343],[-120.712163,39.700753],[-120.707864,39.699233],[-120.701978,39.691201],[-120.695401,39.691865],[-120.68076,39.676833],[-120.671317,39.682445],[-120.66004,39.686197],[-120.65473,39.694115],[-120.654227,39.706629],[-120.465358,39.706461],[-120.446336,39.708571],[-120.359921,39.708489],[-120.28235,39.70785],[-120.249616,39.708033],[-120.147149,39.707658]],[[-120.001319,39.722416],[-120.00174,39.538852],[-120.003117,39.445044]],[[-122.266669,38.06007],[-122.273006,38.07438],[-122.282824,38.082889],[-122.301804,38.105142],[-122.314567,38.115287],[-122.366273,38.141467],[-122.39638,38.149976],[-122.403514,38.150624]],[[-122.403514,38.150624],[-122.406786,38.155632]],[[-122.406786,38.155632],[-122.349985,38.155518],[-122.213464,38.154894],[-122.19538,38.155017],[-122.198981,38.159317],[-122.194485,38.164715],[-122.19808,38.168417],[-122.20358,38.168717],[-122.20458,38.172817],[-122.20888,38.172717],[-122.21508,38.179717],[-122.21298,38.184317],[-122.215581,38.188417],[-122.20948,38.189917],[-122.211481,38.192117],[-122.20498,38.198516],[-122.205681,38.208216],[-122.19398,38.213614],[-122.196177,38.21892],[-122.193374,38.221215],[-122.19598,38.23041],[-122.205389,38.24462],[-122.209582,38.244816],[-122.211081,38.252215],[-122.204367,38.249302],[-122.19518,38.250716],[-122.193281,38.256415],[-122.196781,38.258415],[-122.212982,38.259115],[-122.216882,38.262315],[-122.212282,38.272814],[-122.206382,38.271614],[-122.197381,38.272714],[-122.188381,38.271614],[-122.190681,38.277514],[-122.203482,38.292914],[-122.199082,38.300113],[-122.202583,38.304113],[-122.201396,38.308013],[-122.205982,38.315713],[-122.179946,38.315913],[-122.133843,38.315612],[-122.064779,38.315912],[-122.068179,38.318412],[-122.062079,38.325111],[-122.061379,38.329611],[-122.069779,38.342811],[-122.069679,38.350811],[-122.07338,38.360911],[-122.07768,38.363711],[-122.088835,38.384151],[-122.109467,38.404497],[-122.114692,38.413908],[-122.117983,38.414109],[-122.124952,38.423921],[-122.126389,38.428918],[-122.123582,38.447608],[-122.120527,38.453926],[-122.113178,38.474816],[-122.104882,38.490807],[-122.107183,38.494507],[-122.106283,38.508307],[-122.103281,38.513348]],[[-122.103281,38.513348],[-122.096666,38.512903],[-122.090775,38.515996],[-122.086855,38.514477],[-122.068462,38.514107],[-122.057415,38.517441],[-122.041568,38.505713],[-122.035566,38.496122],[-122.018451,38.489165],[-122.011673,38.488991],[-121.995166,38.500549],[-121.98657,38.502987],[-121.984983,38.505916],[-121.978068,38.508277],[-121.967836,38.520098],[-121.947456,38.527096],[-121.940285,38.533384],[-121.925323,38.529705],[-121.908969,38.529576],[-121.893784,38.533429],[-121.888421,38.537819],[-121.861323,38.538495],[-121.84406,38.535238],[-121.832557,38.529757],[-121.825143,38.529296],[-121.812428,38.526048],[-121.794762,38.526937],[-121.785806,38.523074],[-121.779698,38.529912],[-121.770676,38.532229],[-121.764717,38.525917],[-121.756669,38.529633],[-121.745531,38.532403],[-121.738594,38.537704],[-121.719821,38.535219],[-121.712034,38.537962],[-121.700735,38.527427],[-121.694677,38.527054],[-121.695797,38.487615],[-121.693639,38.487604],[-121.693603,38.452193],[-121.694464,38.329621],[-121.693969,38.314454],[-121.690544,38.313731],[-121.593273,38.313089]],[[-121.593273,38.313089],[-121.598654,38.309892],[-121.599908,38.301515],[-121.60518,38.296084],[-121.605425,38.285801],[-121.60073,38.278375],[-121.603994,38.270695],[-121.600249,38.257817],[-121.601993,38.252426],[-121.602443,38.22041],[-121.611305,38.206299],[-121.612102,38.200068],[-121.615413,38.195696],[-121.622809,38.193275],[-121.631876,38.194369],[-121.64213,38.190024],[-121.645833,38.186508],[-121.662907,38.181869],[-121.68033,38.162812],[-121.685586,38.159705],[-121.687705,38.146829],[-121.692095,38.133126],[-121.696816,38.123762],[-121.706488,38.111858],[-121.708436,38.091482],[-121.713926,38.084542],[-121.73182,38.082634],[-121.743164,38.087229],[-121.766826,38.075951],[-121.796395,38.060847],[-121.801643,38.059503],[-121.810811,38.060767],[-121.827916,38.066223],[-121.842444,38.076735],[-121.861597,38.069887],[-121.862462,38.06603]],[[-121.862462,38.06603],[-121.869469,38.054519],[-121.874743,38.050676],[-121.889573,38.046657],[-121.901164,38.045361],[-121.915544,38.045216],[-121.92846,38.047054],[-121.946765,38.052882],[-121.962208,38.061365],[-121.97744,38.06684],[-121.983158,38.067297],[-122.015175,38.063481],[-122.028411,38.05919],[-122.050874,38.060201],[-122.061103,38.062137],[-122.067298,38.060077],[-122.07743,38.054005],[-122.098726,38.04746],[-122.120992,38.03799],[-122.123973,38.035717],[-122.139366,38.032177],[-122.148577,38.031721],[-122.164577,38.034721],[-122.174939,38.046431],[-122.183863,38.053997],[-122.201778,38.05812],[-122.245483,38.063922],[-122.266669,38.06007]],[[-121.484396,38.734598],[-121.521767,38.736401],[-121.559868,38.736302],[-121.567515,38.735789],[-121.602894,38.735838]],[[-121.602894,38.735838],[-121.593406,38.753985],[-121.592622,38.76286],[-121.599838,38.774876],[-121.60811,38.78086],[-121.624113,38.785174],[-121.631724,38.782375],[-121.628088,38.778945],[-121.636175,38.767085],[-121.64166,38.77329],[-121.64859,38.772824],[-121.639071,38.767729],[-121.654352,38.764382],[-121.658058,38.768836],[-121.664214,38.767802],[-121.659384,38.760319],[-121.659035,38.75433],[-121.66536,38.75536],[-121.668559,38.752976],[-121.667868,38.747648],[-121.673033,38.742847],[-121.677264,38.749436],[-121.670018,38.75931],[-121.67772,38.760669],[-121.680279,38.763448],[-121.685998,38.763371],[-121.692562,38.76771],[-121.686439,38.77536],[-121.688571,38.78213],[-121.693368,38.789816],[-121.690671,38.795627],[-121.696687,38.797361],[-121.701794,38.803005],[-121.71141,38.801197],[-121.723346,38.803759],[-121.724401,38.818386],[-121.723414,38.825617],[-121.730953,38.835253],[-121.725971,38.841254],[-121.728285,38.847369],[-121.72354,38.852292],[-121.728164,38.853408],[-121.730455,38.859086],[-121.744803,38.864155],[-121.748624,38.871318],[-121.759891,38.867771],[-121.75842,38.862355],[-121.765296,38.864187],[-121.770023,38.861537],[-121.77674,38.86134],[-121.784265,38.856685],[-121.785132,38.862597],[-121.79302,38.862972],[-121.795977,38.866659],[-121.801726,38.864282],[-121.803896,38.870023],[-121.814814,38.876582],[-121.816325,38.884955],[-121.809157,38.887739],[-121.803093,38.897419],[-121.803989,38.90172],[-121.79458,38.900536],[-121.792581,38.906362],[-121.797157,38.905466],[-121.80774,38.90693],[-121.809034,38.910205],[-121.804805,38.914521],[-121.830009,38.919059],[-121.835488,38.924481]],[[-121.835488,38.924481],[-121.837766,38.927353],[-121.830134,38.938425],[-121.836566,38.943816],[-121.836598,38.949128],[-121.840374,38.95452],[-121.832166,38.960216],[-121.834614,38.965208],[-121.832086,38.97116],[-121.821622,38.974503],[-121.81951,38.988279],[-121.802102,38.989767],[-121.795606,38.996678],[-121.805396,39.003239],[-121.820301,39.006494],[-121.825954,39.01065],[-121.826011,39.01409],[-121.820984,39.020279],[-121.824375,39.031781],[-121.830794,39.033652],[-121.830192,39.038637],[-121.838744,39.045091],[-121.840712,39.053365],[-121.838213,39.062953],[-121.847964,39.070817],[-121.851696,39.071509],[-121.859561,39.068459],[-121.869352,39.066917],[-121.87608,39.070077],[-121.889101,39.072373],[-121.894605,39.078976],[-121.889738,39.081165],[-121.894804,39.085922],[-121.894369,39.096126],[-121.898947,39.097058],[-121.905924,39.104195],[-121.903523,39.108058],[-121.905535,39.114766],[-121.913087,39.114316],[-121.910094,39.121168],[-121.912302,39.123876],[-121.922086,39.122632],[-121.924959,39.128197],[-121.933928,39.130041],[-121.937953,39.133001],[-121.939535,39.141317],[-121.936755,39.144212],[-121.920541,39.141338],[-121.917342,39.149029],[-121.920125,39.152992],[-121.934917,39.1619],[-121.93939,39.174211],[-121.945509,39.180959],[-121.93968,39.187839],[-121.935174,39.189348],[-121.937105,39.194071],[-121.928332,39.198729],[-121.933337,39.209267],[-121.932417,39.211571],[-121.941239,39.221581],[-121.940048,39.228674],[-121.948294,39.240845],[-121.945278,39.253101],[-121.94226,39.256097],[-121.941311,39.262358],[-121.936916,39.26795],[-121.929575,39.270608],[-121.927943,39.275242],[-121.920796,39.281631],[-121.922211,39.286989],[-121.916702,39.292107],[-121.91688,39.295725],[-121.908563,39.301427],[-121.908269,39.303878]],[[-121.908269,39.303878],[-121.79839,39.303629],[-121.67849,39.304947],[-121.63015,39.305668],[-121.632448,39.303043],[-121.62376,39.295621]],[[-121.62376,39.295621],[-121.625559,39.292478],[-121.631654,39.291533],[-121.627075,39.27946],[-121.622302,39.275667],[-121.623801,39.271904],[-121.629669,39.273735],[-121.632534,39.27098],[-121.621706,39.262959],[-121.627203,39.259365],[-121.635557,39.262077],[-121.636368,39.246076],[-121.63438,39.239811],[-121.628886,39.236885],[-121.628854,39.23053],[-121.624785,39.227684],[-121.614307,39.228745],[-121.618123,39.220646],[-121.613689,39.214525],[-121.620284,39.213487],[-121.621221,39.206066],[-121.629089,39.204678],[-121.624028,39.196351],[-121.615137,39.193296],[-121.613,39.190304],[-121.618361,39.183412],[-121.615724,39.178014],[-121.611571,39.176317],[-121.615383,39.167366],[-121.612549,39.163639],[-121.605507,39.148459],[-121.607575,39.140895],[-121.597676,39.127792],[-121.60463,39.112763],[-121.601347,39.104176],[-121.602678,39.100158],[-121.595631,39.099447],[-121.587785,39.101817],[-121.58591,39.089691],[-121.597743,39.075739],[-121.60332,39.065669],[-121.61025,39.056907],[-121.607345,39.036866],[-121.605634,39.032628],[-121.59441,39.022955],[-121.600036,39.012106],[-121.584073,39.009557],[-121.57933,39.007573],[-121.580622,39.003307],[-121.589399,38.990344],[-121.586548,38.979976],[-121.58737,38.973373],[-121.581447,38.96529],[-121.582592,38.955695],[-121.577961,38.946771],[-121.582183,38.93565],[-121.581147,38.925847],[-121.575459,38.918393],[-121.575546,38.924363],[-121.571297,38.938918],[-121.56147,38.953437],[-121.553518,38.953755],[-121.543306,38.972404],[-121.524653,38.971473],[-121.509029,38.982791],[-121.49369,38.984302],[-121.489646,38.99205],[-121.48205,38.9935],[-121.474408,38.992173],[-121.456315,38.99819],[-121.448604,38.997065],[-121.443826,38.993325],[-121.422068,38.996332],[-121.414885,38.996429]],[[-121.414885,38.996429],[-121.414399,38.926214],[-121.469356,38.925992],[-121.469998,38.846047],[-121.469624,38.794709],[-121.469753,38.751603],[-121.48444,38.751354],[-121.484396,38.734598]],[[-123.544458,40.001923],[-123.543886,40.238847],[-123.544508,40.341181],[-123.544268,40.499315],[-123.544639,40.594024],[-123.544394,40.719429],[-123.544059,40.739386],[-123.548096,40.746373],[-123.551806,40.748127],[-123.55117,40.757022],[-123.554164,40.76017],[-123.550123,40.763969],[-123.554507,40.766656],[-123.549865,40.775808],[-123.557224,40.779666],[-123.557612,40.787255],[-123.561047,40.790505],[-123.5648,40.787703],[-123.565626,40.796364],[-123.556367,40.793806],[-123.556215,40.808817],[-123.562831,40.810063],[-123.568687,40.820304],[-123.55985,40.829584],[-123.566243,40.834978],[-123.564119,40.842229],[-123.573162,40.843515],[-123.579107,40.858769],[-123.586877,40.858214],[-123.5806,40.867999],[-123.586204,40.869613],[-123.591461,40.867549],[-123.59571,40.875577],[-123.601709,40.879953],[-123.597325,40.883317],[-123.601028,40.888961],[-123.608594,40.895375],[-123.604725,40.90037],[-123.606087,40.90479],[-123.615827,40.914068],[-123.613423,40.921551],[-123.621171,40.925518],[-123.622387,40.931703],[-123.611362,40.929255],[-123.599261,40.931155],[-123.591561,40.927355],[-123.571662,40.937055],[-123.56766,40.936556],[-123.570361,40.944955],[-123.568361,40.948255],[-123.560163,40.950257],[-123.55526,40.945955],[-123.54426,40.941656],[-123.539859,40.937856],[-123.542259,40.933056],[-123.534624,40.930756],[-123.529659,40.934856],[-123.514858,40.924756],[-123.511758,40.920357],[-123.496657,40.916157],[-123.481357,40.915157],[-123.477958,40.928056],[-123.458651,40.941959],[-123.447956,40.943758],[-123.444357,40.954047],[-123.446657,40.958057],[-123.453558,40.960758],[-123.453258,40.964153],[-123.438756,40.971456],[-123.434356,40.983253],[-123.427258,40.988256],[-123.42775,41.0007],[-123.420059,41.009674],[-123.409906,41.010742],[-123.40604,41.012897],[-123.410312,41.020674],[-123.407218,41.030619],[-123.419282,41.034528],[-123.423341,41.042189],[-123.424713,41.052753],[-123.423272,41.058157],[-123.430723,41.063267],[-123.445599,41.061681],[-123.452525,41.068531],[-123.457942,41.068215],[-123.459598,41.073739],[-123.464006,41.076348],[-123.458574,41.08241],[-123.458824,41.08557],[-123.464498,41.092524],[-123.460079,41.093557],[-123.456451,41.090493],[-123.446328,41.088874],[-123.439806,41.092541],[-123.441224,41.0948],[-123.435834,41.102351],[-123.434289,41.111655],[-123.429251,41.118],[-123.42873,41.124854],[-123.430405,41.135503],[-123.429409,41.144774],[-123.431491,41.147727],[-123.428768,41.152062],[-123.432582,41.158653],[-123.432246,41.162539],[-123.421733,41.166541],[-123.417843,41.164988],[-123.410365,41.170706],[-123.408291,41.179944]],[[-123.408291,41.179944],[-123.403977,41.174526],[-123.397862,41.174082],[-123.393507,41.170716],[-123.394118,41.165541],[-123.391432,41.160123],[-123.384062,41.157739],[-123.381192,41.15129],[-123.372973,41.151941],[-123.37048,41.156284],[-123.362238,41.161557],[-123.353237,41.163054],[-123.341518,41.155814],[-123.333626,41.154654],[-123.329615,41.151664],[-123.324952,41.141547],[-123.31537,41.140268],[-123.310522,41.143222],[-123.303469,41.143789],[-123.295065,41.14065],[-123.283833,41.126554],[-123.283939,41.123453],[-123.273402,41.122891],[-123.273622,41.119006],[-123.269355,41.112715],[-123.263078,41.108642],[-123.261238,41.099383],[-123.257174,41.091947],[-123.246828,41.082955],[-123.245222,41.077987],[-123.23948,41.075763],[-123.225236,41.076125],[-123.21729,41.073015],[-123.208886,41.074666],[-123.203153,41.071763],[-123.193115,41.077388],[-123.177479,41.076552],[-123.16525,41.078131],[-123.153921,41.074905],[-123.148723,41.078447],[-123.132945,41.078646],[-123.118561,41.075831],[-123.109077,41.075429],[-123.105656,41.065504],[-123.0983,41.063015],[-123.095869,41.059169],[-123.080092,41.057563],[-123.076003,41.054783],[-123.064302,41.051962],[-123.05966,41.047237],[-123.055183,41.046706],[-123.052023,41.040271],[-123.045909,41.033197],[-123.04727,41.024459],[-123.043393,41.019326],[-123.043843,41.014072],[-123.037118,41.004176],[-123.0245,41.004111],[-123.007237,41.008521],[-122.997207,41.013324],[-122.989741,41.012428],[-122.980131,41.014314],[-122.964623,41.011979],[-122.952018,41.006393],[-122.945486,40.995178],[-122.940531,40.992298],[-122.934978,40.992433],[-122.924666,40.99567],[-122.917529,40.99399],[-122.914153,40.998115],[-122.915314,41.002467],[-122.91293,41.008641],[-122.90586,41.009051],[-122.901522,41.014646],[-122.902685,41.022749],[-122.897363,41.02918],[-122.906269,41.036539],[-122.912386,41.051045],[-122.921975,41.065865],[-122.923328,41.071952],[-122.942075,41.070075],[-122.966063,41.080905],[-122.97097,41.09016],[-122.969184,41.103762],[-122.974074,41.10576],[-122.973382,41.112074],[-122.959934,41.123992],[-122.965341,41.138307],[-122.958074,41.145664],[-122.952918,41.146974],[-122.95174,41.151045],[-122.957276,41.161214],[-122.954512,41.166939],[-122.960888,41.173867],[-122.961347,41.181525],[-122.951317,41.185578],[-122.9356,41.177261],[-122.929171,41.178691],[-122.924839,41.186665],[-122.91537,41.187184],[-122.908836,41.191531],[-122.906876,41.195924],[-122.894475,41.202675],[-122.885803,41.204933],[-122.880822,41.203522],[-122.870689,41.205088],[-122.862485,41.20205],[-122.842296,41.200739],[-122.836698,41.206727],[-122.825175,41.21003],[-122.816845,41.207595],[-122.811342,41.202451],[-122.802109,41.203048],[-122.795551,41.211361],[-122.788333,41.212582],[-122.78673,41.216996],[-122.781207,41.218173],[-122.777012,41.230841],[-122.76709,41.234162],[-122.763738,41.238083],[-122.753641,41.241874],[-122.744513,41.241608],[-122.740043,41.244256],[-122.732649,41.243794],[-122.725295,41.247466],[-122.724601,41.261075],[-122.720366,41.266938],[-122.711957,41.27479],[-122.704961,41.275037],[-122.686289,41.281253],[-122.682246,41.277985],[-122.677537,41.279968],[-122.677275,41.284986],[-122.663488,41.291644],[-122.653686,41.289237],[-122.651549,41.299596],[-122.64558,41.304734],[-122.64821,41.320224],[-122.64573,41.324449],[-122.63233,41.331375],[-122.627473,41.332026],[-122.617889,41.327525],[-122.607682,41.329187],[-122.601303,41.325901],[-122.590808,41.32591],[-122.587628,41.332209],[-122.581845,41.336465],[-122.581141,41.34144],[-122.587159,41.35068],[-122.585241,41.359008],[-122.572894,41.365696],[-122.572326,41.368025],[-122.561049,41.36596],[-122.55169,41.361702],[-122.542835,41.354083],[-122.541004,41.345889],[-122.535818,41.341523],[-122.529218,41.341385],[-122.519912,41.343776],[-122.50389,41.342985],[-122.504254,41.33471],[-122.488962,41.324662],[-122.478771,41.320085],[-122.491196,41.313439],[-122.50192,41.309113],[-122.498263,41.295748],[-122.502337,41.289868],[-122.510167,41.288664],[-122.51333,41.28368],[-122.513943,41.255215],[-122.508247,41.245288],[-122.517458,41.239783],[-122.518109,41.235921],[-122.512261,41.226452],[-122.522636,41.213525],[-122.515492,41.204992],[-122.497401,41.195569],[-122.495018,41.192438],[-122.498376,41.182675]],[[-122.498376,41.182675],[-122.497735,41.178572],[-122.490952,41.175567],[-122.477764,41.177164],[-122.468288,41.169232],[-122.454017,41.166293],[-122.44989,41.159156],[-122.446023,41.159241],[-122.450607,41.14694],[-122.448108,41.135905],[-122.448572,41.11824],[-122.453469,41.11349],[-122.451864,41.108235],[-122.457144,41.096611],[-122.468136,41.096837],[-122.476587,41.091987],[-122.480612,41.091597],[-122.493297,41.085987],[-122.50001,41.087626],[-122.506239,41.086045],[-122.513354,41.088227],[-122.528833,41.076751],[-122.535861,41.075869],[-122.539775,41.072605],[-122.536828,41.06417],[-122.525794,41.06304],[-122.522361,41.052285],[-122.527336,41.045725],[-122.528132,41.040615],[-122.527753,41.014395],[-122.535083,41.008102],[-122.537877,41.002384],[-122.548104,41.005224],[-122.55449,41.003622],[-122.555444,40.999485],[-122.560953,40.996609],[-122.564389,40.988187],[-122.569181,40.984988],[-122.581754,40.982957],[-122.587593,40.985372],[-122.589631,40.97956],[-122.598658,40.975592],[-122.601755,40.970557],[-122.603089,40.959387],[-122.607363,40.957748],[-122.603189,40.94062],[-122.606945,40.938412],[-122.60743,40.929723],[-122.612751,40.921245],[-122.609738,40.913943],[-122.603663,40.908882],[-122.600013,40.900343],[-122.604937,40.897201],[-122.605457,40.890643],[-122.609899,40.88455],[-122.61527,40.881068],[-122.625038,40.879693],[-122.626426,40.867094],[-122.63438,40.861289],[-122.634671,40.857056],[-122.638889,40.853409],[-122.639715,40.84504],[-122.6554,40.841548],[-122.657227,40.83538],[-122.666058,40.825875],[-122.655232,40.807573],[-122.657459,40.801945],[-122.661352,40.800482],[-122.661656,40.794313],[-122.658093,40.787504],[-122.665572,40.782076],[-122.669839,40.773567],[-122.688228,40.764439],[-122.692824,40.760725],[-122.699809,40.759262],[-122.700091,40.755862],[-122.706295,40.749556],[-122.717407,40.747182],[-122.719852,40.739372],[-122.706571,40.725331],[-122.709962,40.719314],[-122.712424,40.710007],[-122.71846,40.708319],[-122.722358,40.695473],[-122.729969,40.692177],[-122.737978,40.692813],[-122.741694,40.695301],[-122.752023,40.689882],[-122.751634,40.685635],[-122.742583,40.67881],[-122.741214,40.665397],[-122.733589,40.662426],[-122.733772,40.656956],[-122.727029,40.650468],[-122.731939,40.645323],[-122.736171,40.636279],[-122.732393,40.634426],[-122.715622,40.634045],[-122.709655,40.631199],[-122.711488,40.61801],[-122.71063,40.612549],[-122.706716,40.611152],[-122.705435,40.600484],[-122.701173,40.595815],[-122.700124,40.585743],[-122.692867,40.580473],[-122.693075,40.575338],[-122.69879,40.569293],[-122.714386,40.570951],[-122.722178,40.575326],[-122.732668,40.571051],[-122.741312,40.564118],[-122.743923,40.553798],[-122.75925,40.556537],[-122.767903,40.553345],[-122.779242,40.546461],[-122.785194,40.540916],[-122.785675,40.536539],[-122.782224,40.531871],[-122.79362,40.523434],[-122.793252,40.514518],[-122.80054,40.511238],[-122.819511,40.510961],[-122.828784,40.506998],[-122.845954,40.505181],[-122.852079,40.500955],[-122.848118,40.497357],[-122.846968,40.490776],[-122.857256,40.482339],[-122.87171,40.481571],[-122.883643,40.474773],[-122.889957,40.468572],[-122.889292,40.465737],[-122.895365,40.459703],[-122.894298,40.455584],[-122.901267,40.445574],[-122.905196,40.445295],[-122.917707,40.449768],[-122.931267,40.445557],[-122.930624,40.442022],[-122.937791,40.436923],[-122.938618,40.428858],[-122.955592,40.421192],[-122.961004,40.425989],[-122.966001,40.422816],[-122.982217,40.418279],[-122.990576,40.419435],[-122.998248,40.418208],[-122.997909,40.40648],[-122.999771,40.403564],[-122.996579,40.396381],[-123.006315,40.38968],[-123.012666,40.388079],[-123.018145,40.383313],[-123.01954,40.371694],[-123.023116,40.367571],[-123.031136,40.363607],[-123.037148,40.364439],[-123.043934,40.35442],[-123.04397,40.347013],[-123.051878,40.34685],[-123.056883,40.349246],[-123.065667,40.343907],[-123.064324,40.336853],[-123.068789,40.332233],[-123.062688,40.322046],[-123.064587,40.31987],[-123.061747,40.313442],[-123.068838,40.308255],[-123.064973,40.298722],[-123.065426,40.286971]],[[-123.065426,40.286971],[-123.061241,40.277764],[-123.051239,40.267933],[-123.037135,40.261434],[-123.031495,40.264823],[-123.01858,40.262783],[-123.012488,40.26014],[-123.00316,40.25308],[-122.989015,40.250145],[-122.97755,40.241285],[-122.978722,40.23458],[-122.975119,40.232568],[-122.980027,40.214708],[-122.978205,40.206453],[-122.974205,40.203886],[-122.971086,40.197178],[-122.974722,40.19146],[-122.970064,40.186306],[-122.980203,40.177897],[-122.983937,40.171984],[-122.986423,40.159401],[-122.98454,40.153411],[-122.989623,40.145496],[-122.97807,40.141105],[-122.968554,40.138948],[-122.973657,40.130025],[-122.969385,40.118456],[-122.970666,40.115692],[-122.966101,40.109967],[-122.961088,40.099996],[-122.963719,40.095676],[-122.961441,40.089754],[-122.966728,40.089007],[-122.969916,40.080889],[-122.973222,40.077553],[-122.968172,40.073818],[-122.9684,40.068806],[-122.961571,40.066883],[-122.952831,40.059723],[-122.948886,40.049745],[-122.954197,40.045434],[-122.953786,40.038018],[-122.94976,40.032101],[-122.951502,40.025649],[-122.956378,40.01994],[-122.955322,40.01586],[-122.949448,40.012127],[-122.951671,39.998271],[-122.943714,39.995259],[-122.934984,39.986189],[-122.937083,39.981867],[-122.934013,39.978131]],[[-122.934013,39.978131],[-123.332193,39.977305],[-123.544563,39.977015],[-123.544458,40.001923]],[[-119.428095,34.006622],[-119.437734,34.01],[-119.441226,34.014075],[-119.433912,34.015975],[-119.421376,34.015012],[-119.411317,34.008005],[-119.389983,34.006099],[-119.366591,34.016785],[-119.357462,34.015919],[-119.376396,34.010551],[-119.391551,34.002505],[-119.414528,34.004994],[-119.422972,34.004368],[-119.428095,34.006622]],[[-119.495547,33.269052],[-119.48278,33.263973],[-119.465717,33.259239],[-119.458466,33.254661],[-119.429559,33.228167],[-119.444269,33.21919],[-119.464725,33.215432],[-119.476029,33.21552],[-119.511659,33.223027],[-119.517514,33.226737],[-119.545872,33.233406],[-119.564971,33.24744],[-119.566014,33.252639],[-119.570642,33.257729],[-119.578942,33.278628],[-119.562042,33.271129],[-119.555242,33.273429],[-119.547642,33.280328],[-119.543842,33.280329],[-119.532941,33.284728],[-119.528141,33.284929],[-119.50504,33.272829],[-119.495547,33.269052]],[[-119.442352,34.901274],[-119.382154,34.900936],[-119.382451,34.879675],[-119.277123,34.879675],[-119.278346,34.857276],[-119.243645,34.857576],[-119.243645,34.814178],[-119.023688,34.812344],[-118.976721,34.812199],[-118.976723,34.79066],[-118.881364,34.790629]],[[-118.881364,34.790629],[-118.812361,34.648301],[-118.770257,34.56321],[-118.677616,34.374993],[-118.636789,34.291804],[-118.632546,34.263351],[-118.632495,34.240426],[-118.667713,34.240404],[-118.668152,34.168195],[-118.710884,34.168526],[-118.723374,34.167861],[-118.788889,34.168214],[-118.939859,34.075551],[-118.941074,34.073999],[-118.944887,34.04534]],[[-118.944887,34.04534],[-118.954722,34.048167],[-118.977751,34.059822],[-118.99698,34.065943],[-119.004644,34.066231],[-119.037494,34.083111],[-119.069959,34.09047],[-119.088536,34.09831],[-119.098216,34.099334],[-119.109784,34.094566],[-119.130169,34.100102],[-119.18864,34.139005],[-119.20314,34.144505],[-119.216441,34.146105],[-119.237142,34.175804],[-119.257043,34.213304],[-119.265927,34.234609],[-119.270144,34.252903],[-119.278643,34.2669],[-119.290937,34.274897],[-119.302131,34.272761],[-119.313034,34.275689],[-119.337475,34.290576],[-119.349187,34.304383],[-119.370356,34.319486],[-119.37578,34.321118],[-119.388249,34.317398],[-119.390449,34.318198],[-119.42777,34.353016],[-119.435888,34.355839],[-119.461036,34.374064],[-119.478265,34.377197]],[[-121.62376,39.295621],[-121.618723,39.301996],[-121.620677,39.302839],[-121.616688,39.312369],[-121.611177,39.31928],[-121.604196,39.31802],[-121.603284,39.312733],[-121.593281,39.307681],[-121.584316,39.311541],[-121.574185,39.310497],[-121.56314,39.305006],[-121.548379,39.309116],[-121.547109,39.312182],[-121.536413,39.31421],[-121.530545,39.318256],[-121.521234,39.319484],[-121.517142,39.317375],[-121.504117,39.317929],[-121.497206,39.314374],[-121.495843,39.318684],[-121.486673,39.317419],[-121.482628,39.320132],[-121.484557,39.324889],[-121.477778,39.328959],[-121.474964,39.333341],[-121.466291,39.332895],[-121.463588,39.330857],[-121.458489,39.335262],[-121.453146,39.334568],[-121.447631,39.330569],[-121.443344,39.331496],[-121.434813,39.337482],[-121.425492,39.335133],[-121.419204,39.33903],[-121.405968,39.340569],[-121.406756,39.344659],[-121.400513,39.349963],[-121.387855,39.355995],[-121.38209,39.363036],[-121.372421,39.3653],[-121.372565,39.372864],[-121.368239,39.376536],[-121.364105,39.384779],[-121.36008,39.400718],[-121.363493,39.403297],[-121.359054,39.409095],[-121.341807,39.422427],[-121.334071,39.425802],[-121.335293,39.430403],[-121.339715,39.430988],[-121.34525,39.439202],[-121.346612,39.445218],[-121.345139,39.452567],[-121.33842,39.454381],[-121.338264,39.465031],[-121.333438,39.46509],[-121.333427,39.468729],[-121.324141,39.468608],[-121.324067,39.475713],[-121.314787,39.475899],[-121.31498,39.486961],[-121.310164,39.486831],[-121.3102,39.497761],[-121.305425,39.497816],[-121.305122,39.519585],[-121.276789,39.520271],[-121.277077,39.512812],[-121.240242,39.513091],[-121.240483,39.526613],[-121.210022,39.52722],[-121.185173,39.526695],[-121.185399,39.519728],[-121.159296,39.519595],[-121.158978,39.526131],[-121.149907,39.526446],[-121.149898,39.555289],[-121.140885,39.55555],[-121.141213,39.562278],[-121.116451,39.563543],[-121.116314,39.567098],[-121.10697,39.567191],[-121.107465,39.585275],[-121.079543,39.585263],[-121.076695,39.597264]],[[-121.076695,39.597264],[-121.050922,39.613801],[-121.009477,39.639459]],[[-121.022085,39.391558],[-121.024838,39.389239],[-121.032158,39.395731],[-121.041531,39.38816],[-121.047529,39.389741],[-121.047503,39.394328],[-121.059988,39.394634],[-121.061561,39.391694],[-121.084391,39.394266],[-121.086147,39.387137],[-121.095532,39.387727],[-121.104549,39.380257],[-121.108711,39.381467],[-121.116202,39.378504],[-121.128007,39.379752],[-121.127779,39.372143],[-121.134129,39.371289],[-121.137071,39.363315],[-121.145135,39.355782],[-121.144909,39.349428],[-121.154766,39.348605],[-121.157683,39.339222],[-121.157533,39.332467],[-121.162519,39.332616],[-121.16502,39.338638],[-121.178977,39.33856],[-121.183448,39.335971],[-121.186456,39.330332],[-121.195619,39.329582],[-121.19827,39.323943],[-121.206005,39.317381],[-121.204977,39.307889],[-121.200146,39.302375],[-121.208033,39.29835],[-121.216194,39.291303],[-121.219853,39.283076],[-121.233788,39.282851],[-121.240146,39.283997],[-121.250113,39.278561],[-121.263363,39.274833],[-121.266911,39.271609],[-121.259182,39.256421],[-121.269301,39.252123],[-121.268787,39.24025],[-121.276076,39.231418],[-121.27953,39.230537],[-121.279749,39.109845],[-121.279533,39.034618]],[[-121.279533,39.034618],[-121.290213,39.03687],[-121.293332,39.043969],[-121.302675,39.048328],[-121.304496,39.052465],[-121.311552,39.051993],[-121.319832,39.048453],[-121.321631,39.043753],[-121.329117,39.043899],[-121.335749,39.038792],[-121.358383,39.030213],[-121.361185,39.032601],[-121.37238,39.02773],[-121.377072,39.021014],[-121.385089,39.017718],[-121.398857,39.007813],[-121.412684,39.003635],[-121.408753,38.99969],[-121.414885,38.996429]],[[-122.627396,38.667506],[-122.625464,38.674402],[-122.639497,38.689058],[-122.637049,38.69373],[-122.643785,38.698962],[-122.646569,38.706177],[-122.66219,38.70594],[-122.669402,38.70837],[-122.67233,38.706274],[-122.691835,38.710946],[-122.697259,38.718018],[-122.696683,38.72101],[-122.703756,38.73053],[-122.71038,38.732082],[-122.712332,38.742226],[-122.708316,38.748354],[-122.720085,38.753545],[-122.723884,38.763117],[-122.729543,38.770704],[-122.735885,38.774501],[-122.735339,38.777638],[-122.74822,38.787795],[-122.746198,38.799248],[-122.748742,38.80419],[-122.758839,38.807842],[-122.767613,38.813871],[-122.77248,38.82153],[-122.780193,38.826843],[-122.791393,38.830429],[-122.795989,38.838952],[-122.799796,38.836978],[-122.808674,38.836643],[-122.812874,38.843274],[-122.818314,38.844585],[-122.817651,38.849839],[-122.821592,38.85014]],[[-122.821592,38.85014],[-122.821388,38.85792],[-122.840099,38.857993],[-122.839994,38.866024],[-122.858487,38.865849],[-122.85776,38.873261],[-122.876495,38.87313],[-122.8757,38.880837],[-122.894633,38.880832],[-122.89389,38.895524],[-122.911355,38.895171],[-122.911386,38.901529],[-122.93369,38.90142],[-122.948865,38.90022],[-122.950047,38.909748],[-122.949067,38.925442],[-122.961888,38.925511],[-122.960186,38.932469],[-122.969919,38.932663],[-122.968286,38.946506],[-122.977712,38.946685],[-122.977429,38.9829],[-122.986683,38.983009],[-122.98664,38.997283],[-123.009254,38.997164],[-123.009265,38.993177],[-123.018579,38.992956],[-123.018626,38.996613],[-123.028035,38.996593],[-123.028011,39.006496],[-123.03731,39.006497],[-123.037511,39.013697],[-123.046811,39.013796],[-123.047011,39.020896],[-123.056212,39.021096],[-123.056111,39.049895],[-123.065212,39.049995],[-123.065114,39.064393],[-123.083812,39.064494],[-123.083712,39.071794],[-123.093013,39.071994],[-123.094207,39.080524],[-123.094212,39.095294],[-123.085012,39.095294],[-123.085212,39.110093],[-123.087592,39.110077],[-123.087512,39.138392],[-123.078112,39.13874],[-123.077812,39.173791],[-123.045811,39.173492],[-123.045411,39.18059],[-123.040911,39.180691],[-123.04011,39.19249],[-123.034811,39.192391],[-123.034111,39.19969],[-123.029711,39.199591],[-123.02881,39.206789],[-123.02431,39.207089],[-123.02411,39.213689],[-123.02111,39.213689],[-123.02081,39.220689],[-123.01251,39.220989],[-123.01271,39.236188],[-122.994839,39.235924],[-122.994484,39.256757],[-123.00361,39.257387],[-123.00451,39.278187],[-123.019612,39.277986],[-123.019711,39.321785],[-123.028712,39.321785],[-123.028712,39.336585],[-123.037712,39.336185],[-123.037914,39.363885],[-123.048613,39.364084],[-123.047513,39.378584],[-123.057113,39.378684],[-123.056314,39.407583],[-123.075114,39.407683],[-123.074315,39.421983],[-123.074915,39.436582],[-123.070115,39.436482],[-123.073115,39.452682],[-123.063015,39.452482],[-123.063181,39.503539],[-123.044394,39.503585],[-123.04445,39.5112],[-123.024953,39.511181],[-123.025236,39.518709],[-123.014783,39.519202],[-122.996364,39.517892],[-122.936697,39.516396],[-122.936696,39.530713],[-122.921617,39.52981],[-122.89031,39.529014],[-122.88579,39.565141],[-122.885352,39.580108]],[[-122.885352,39.580108],[-122.875034,39.58072],[-122.828434,39.579661],[-122.814099,39.5814],[-122.790913,39.579717],[-122.772475,39.579463],[-122.753938,39.581209],[-122.735639,39.580668],[-122.735766,39.544066],[-122.736548,39.50851],[-122.732433,39.494629],[-122.731711,39.482932],[-122.732601,39.450754],[-122.741748,39.43523],[-122.739345,39.407685],[-122.739062,39.383266]],[[-122.739062,39.383266],[-122.78509,39.382975],[-122.774199,39.374883],[-122.768086,39.373981],[-122.763175,39.377804],[-122.755588,39.375673],[-122.752244,39.370581],[-122.743482,39.36813],[-122.741719,39.358899],[-122.745835,39.356219],[-122.752097,39.346349],[-122.76531,39.342743],[-122.764833,39.335014],[-122.768242,39.331143],[-122.768297,39.325488],[-122.772524,39.323979],[-122.775252,39.312563],[-122.770492,39.310021],[-122.766129,39.301028],[-122.758226,39.293947],[-122.758114,39.28538],[-122.748201,39.279077],[-122.732766,39.271886],[-122.7297,39.273486],[-122.716482,39.262939],[-122.712454,39.25701],[-122.70584,39.254844],[-122.691361,39.247431],[-122.686852,39.241149],[-122.680927,39.238726],[-122.6817,39.234561],[-122.675838,39.230087],[-122.679729,39.22453],[-122.673817,39.2253],[-122.665362,39.217548],[-122.650138,39.213922],[-122.638075,39.219992],[-122.63516,39.223052],[-122.623013,39.223212],[-122.612332,39.21881],[-122.610584,39.216435],[-122.601864,39.214185],[-122.593527,39.214316],[-122.578978,39.210661],[-122.573442,39.204288],[-122.567215,39.203701],[-122.553288,39.206743],[-122.541418,39.206915],[-122.534993,39.211595],[-122.527238,39.209516],[-122.515331,39.209215],[-122.513788,39.196007],[-122.508405,39.190321],[-122.498538,39.191091],[-122.493635,39.18353],[-122.494012,39.178098],[-122.47729,39.17395],[-122.475383,39.170148],[-122.482574,39.162927],[-122.474541,39.144699],[-122.480246,39.139566],[-122.487972,39.141597],[-122.496835,39.140501],[-122.494787,39.135851],[-122.500909,39.121075],[-122.494205,39.115076],[-122.496461,39.107813],[-122.488849,39.098013],[-122.486242,39.082544],[-122.49052,39.077302],[-122.488676,39.0692],[-122.483879,39.066955],[-122.490552,39.064962],[-122.492232,39.059529],[-122.491278,39.052991],[-122.481666,39.052732],[-122.465763,39.048412],[-122.468135,39.044313],[-122.454854,39.034411],[-122.450188,39.032659],[-122.43729,39.021357],[-122.434336,39.022516],[-122.424342,39.020427],[-122.413416,39.020218],[-122.409983,39.017517],[-122.408707,39.007354],[-122.411909,39.005089],[-122.411917,38.998137],[-122.41931,38.989177],[-122.416766,38.978249],[-122.408254,38.973033],[-122.409214,38.963001],[-122.401983,38.956105],[-122.394031,38.955609],[-122.373023,38.939817],[-122.367583,38.939033],[-122.350111,38.928777],[-122.341791,38.92729],[-122.340172,38.924246]],[[-122.340172,38.924246],[-122.354729,38.925225],[-122.403941,38.925289],[-122.409856,38.918553],[-122.415824,38.907354],[-122.421952,38.903562],[-122.422048,38.90089],[-122.415552,38.897098],[-122.411072,38.889402],[-122.405264,38.883402],[-122.406096,38.880362],[-122.3964,38.874059],[-122.391088,38.867291],[-122.395056,38.864245]],[[-122.395056,38.864245],[-122.403289,38.856099],[-122.402217,38.853938],[-122.381988,38.8338],[-122.373488,38.817],[-122.379388,38.802101],[-122.397989,38.804001],[-122.412289,38.785801],[-122.410089,38.785501],[-122.408989,38.776301],[-122.402889,38.772902],[-122.415789,38.768002],[-122.46389,38.705203],[-122.592195,38.675804],[-122.627396,38.667506]],[[-114.435429,34.079727],[-114.481217,34.079809],[-114.837334,34.079609],[-114.846649,34.076881],[-114.852206,34.079687],[-114.92202,34.079685],[-115.19239,34.079422],[-115.192442,34.077761],[-115.316065,34.077843],[-115.316212,34.03411],[-115.373944,34.034745],[-115.666319,34.035305],[-115.750825,34.035222],[-115.873817,34.035306],[-115.984836,34.035147],[-115.984832,34.034434],[-116.046447,34.034297],[-116.194132,34.033614],[-116.195845,34.034328],[-116.300598,34.034401],[-116.300631,34.032544],[-116.457775,34.032881],[-116.512252,34.032878],[-116.615574,34.032551],[-116.615603,34.03331],[-116.754736,34.033998],[-116.827868,34.033837],[-116.929558,34.034113],[-116.929537,34.004914],[-116.987228,34.004712],[-117.008568,34.00432],[-117.034456,34.004881],[-117.0677,34.003707],[-117.142214,34.004288],[-117.225372,34.004314],[-117.225373,34.018715],[-117.266955,34.018566],[-117.296275,34.019414],[-117.375416,34.019399],[-117.377284,34.026718],[-117.375278,34.033875],[-117.41448,34.034313],[-117.49307,34.033439],[-117.558312,34.033451],[-117.558377,33.98842],[-117.593232,33.977596],[-117.610386,33.971614],[-117.610913,33.960084],[-117.610947,33.925114],[-117.655386,33.925114],[-117.654885,33.888815],[-117.676286,33.888815],[-117.668985,33.880915],[-117.673085,33.875615],[-117.673749,33.870831]],[[-117.673749,33.870831],[-117.680289,33.877412],[-117.748097,33.921432],[-117.783287,33.946411]],[[-117.783287,33.946411],[-117.793551,33.953822],[-117.793667,33.968135],[-117.802445,33.968308],[-117.802539,33.975551],[-117.785062,34.004809],[-117.767483,34.004611],[-117.76769,34.023506],[-117.735846,34.018554],[-117.730125,34.021371],[-117.727384,34.03654],[-117.716309,34.067661],[-117.70848,34.085254],[-117.686799,34.138122],[-117.681713,34.155827],[-117.678501,34.161993],[-117.646374,34.28917],[-117.659673,34.451605],[-117.660346,34.557848],[-117.667034,34.558008],[-117.667085,34.690155],[-117.667234,34.704529],[-117.667292,34.822526]],[[-117.667292,34.822526],[-117.632011,34.82227],[-117.632194,34.983241],[-117.63275,35.009758],[-117.632818,35.057382],[-117.63329,35.097558],[-117.63088,35.097604],[-117.631273,35.155922],[-117.630973,35.247365],[-117.631299,35.274179],[-117.631248,35.361727],[-117.632782,35.405407],[-117.631295,35.419566],[-117.633509,35.434438],[-117.633659,35.450997],[-117.630216,35.451041],[-117.630604,35.499947],[-117.629969,35.539886],[-117.630126,35.564071],[-117.634771,35.564109],[-117.63486,35.622503],[-117.63381,35.650972],[-117.616395,35.651755],[-117.616195,35.680856],[-117.652319,35.680782],[-117.651986,35.709934],[-117.634251,35.709927],[-117.634108,35.7467],[-117.633597,35.749953],[-117.632996,35.797251]],[[-117.632996,35.797251],[-117.368423,35.795169],[-117.269483,35.79506],[-117.125883,35.795658],[-117.117593,35.795245],[-117.041901,35.795382],[-116.714538,35.795364],[-116.281825,35.793438],[-116.210913,35.793297],[-116.109503,35.793448],[-116.05763,35.793973],[-115.735891,35.79362],[-115.735745,35.809097],[-115.648925,35.809128],[-115.64802,35.809629]],[[-115.64802,35.809629],[-115.500832,35.693382],[-115.412908,35.624981],[-115.406079,35.618613],[-115.271342,35.51266],[-115.160599,35.424313],[-115.145813,35.413182],[-115.125816,35.39694],[-115.043812,35.332012],[-114.942216,35.249994],[-114.925381,35.237039],[-114.633013,35.002085],[-114.62919,34.991887],[-114.629907,34.980791],[-114.634607,34.96906],[-114.634953,34.958918],[-114.629811,34.94481],[-114.629753,34.938684],[-114.633237,34.92123],[-114.630877,34.907263],[-114.635425,34.895192],[-114.636768,34.885705],[-114.635176,34.875003],[-114.630682,34.866352],[-114.619878,34.856873],[-114.604255,34.849573],[-114.592339,34.841153],[-114.586842,34.835672],[-114.581126,34.826115],[-114.576452,34.8153],[-114.57101,34.794294],[-114.558653,34.773852],[-114.552682,34.766871],[-114.540306,34.757109],[-114.529615,34.750822],[-114.516619,34.736745],[-114.495858,34.727956],[-114.481954,34.716036],[-114.47162,34.712966],[-114.46862,34.707573],[-114.465246,34.691202],[-114.456567,34.677956],[-114.451971,34.666795],[-114.451753,34.654321],[-114.444276,34.646542],[-114.440294,34.63824],[-114.441525,34.631529],[-114.438739,34.621455],[-114.424202,34.610453],[-114.424326,34.602338],[-114.43009,34.596874],[-114.429747,34.591734],[-114.422382,34.580711],[-114.405228,34.569637],[-114.389603,34.542982],[-114.380838,34.529724],[-114.378223,34.516521],[-114.378124,34.507288],[-114.382358,34.495757],[-114.383038,34.488903],[-114.381555,34.477883],[-114.387187,34.462021],[-114.386699,34.457911],[-114.373719,34.446938],[-114.363404,34.447773],[-114.342615,34.451442],[-114.335372,34.450038],[-114.330669,34.445295],[-114.32613,34.437251],[-114.319054,34.435831],[-114.301016,34.426807],[-114.292226,34.417606],[-114.291751,34.411104],[-114.286802,34.40534],[-114.280108,34.403147],[-114.264317,34.401329],[-114.252739,34.3901],[-114.245261,34.385659],[-114.234275,34.376662],[-114.226107,34.365916],[-114.213774,34.36246],[-114.199482,34.361373],[-114.191094,34.356125],[-114.176909,34.349306],[-114.168807,34.339513],[-114.157206,34.317862],[-114.138282,34.30323],[-114.139534,34.295844],[-114.13605,34.280833],[-114.137045,34.277018],[-114.134612,34.263518],[-114.139055,34.259538],[-114.147159,34.259564],[-114.161826,34.257038],[-114.166536,34.249647],[-114.173119,34.247226],[-114.17805,34.239969],[-114.190876,34.230858],[-114.215454,34.208956],[-114.223384,34.205136],[-114.225861,34.201774],[-114.224941,34.193896],[-114.229715,34.186928],[-114.240712,34.183232],[-114.254141,34.173831],[-114.268267,34.17021],[-114.275267,34.17215],[-114.287294,34.170529],[-114.292806,34.166725],[-114.312206,34.144776],[-114.324576,34.136759],[-114.336112,34.134035],[-114.348052,34.134458],[-114.356373,34.130429],[-114.360402,34.123577],[-114.366521,34.118575],[-114.379234,34.115988],[-114.390565,34.110084],[-114.401352,34.111652],[-114.411681,34.110031],[-114.415908,34.107636],[-114.426168,34.097042],[-114.428026,34.092787],[-114.434181,34.087379],[-114.435429,34.079727]],[[-122.292974,37.107318],[-122.289382,37.113472],[-122.311782,37.147545],[-122.317682,37.186945],[-122.288581,37.186745],[-122.268881,37.189843],[-122.24266,37.190035],[-122.242473,37.215133],[-122.172753,37.215194],[-122.152774,37.215444],[-122.151457,37.230023],[-122.152675,37.24724],[-122.152278,37.286055]],[[-122.152278,37.286055],[-122.14866,37.28082],[-122.150539,37.275883],[-122.14415,37.27021],[-122.13555,37.26541],[-122.12853,37.25927],[-122.12393,37.25972],[-122.11295,37.24958],[-122.10557,37.24074],[-122.10423,37.23427],[-122.093369,37.22924],[-122.08981,37.22327],[-122.078775,37.223204],[-122.07007,37.21661],[-122.06617,37.21044],[-122.055064,37.212683],[-122.047548,37.204936],[-122.040782,37.195171],[-122.03075,37.18999],[-122.031769,37.18043],[-122.02653,37.17611],[-122.026114,37.16678],[-122.015966,37.165658],[-122.012974,37.161483],[-122.00023,37.15883],[-121.997269,37.152082],[-121.991347,37.144739],[-121.97997,37.14085],[-121.97324,37.14188],[-121.96276,37.13294],[-121.953825,37.129035],[-121.94069,37.12595],[-121.932026,37.122001],[-121.92426,37.12128],[-121.910685,37.113295],[-121.90572,37.11317],[-121.89479,37.10966],[-121.88725,37.104934],[-121.884808,37.107825],[-121.870066,37.102247],[-121.860009,37.104171],[-121.86176,37.09934],[-121.849086,37.098997],[-121.84414,37.09473],[-121.82996,37.08807],[-121.82402,37.08757],[-121.81746,37.08264],[-121.81711,37.07782],[-121.812516,37.075155],[-121.809076,37.069301],[-121.80151,37.06749],[-121.79582,37.06356],[-121.78594,37.06193],[-121.78155,37.056991],[-121.77295,37.05262],[-121.76696,37.05328],[-121.760678,37.0476],[-121.7576,37.04963],[-121.73913,37.02718],[-121.72782,37.02275],[-121.731313,37.022417],[-121.736186,37.015342],[-121.727815,37.009862],[-121.726566,37.012054],[-121.718762,37.007557],[-121.729624,36.997872],[-121.730705,36.992946],[-121.738697,36.989991],[-121.734411,36.989308],[-121.717878,36.995561],[-121.705509,36.98936],[-121.705244,36.986245],[-121.695358,36.98515],[-121.698428,36.974984],[-121.693303,36.96823],[-121.687758,36.966951],[-121.678258,36.96785],[-121.66993,36.963641],[-121.664787,36.963714],[-121.663257,36.951851],[-121.654038,36.950584],[-121.653056,36.941751],[-121.645791,36.93233],[-121.641025,36.932224],[-121.642256,36.936351],[-121.637055,36.939053],[-121.624755,36.940451],[-121.607155,36.926051],[-121.590354,36.926151],[-121.590154,36.919252],[-121.581154,36.919252],[-121.581354,36.899152]],[[-121.581354,36.899152],[-121.594745,36.901077],[-121.607303,36.899456],[-121.619761,36.908911],[-121.629489,36.911681],[-121.638103,36.898327],[-121.644001,36.893996]],[[-121.644001,36.893996],[-121.646565,36.902832],[-121.650633,36.900246],[-121.653699,36.90378],[-121.653529,36.91137],[-121.657904,36.913814],[-121.6671,36.91229],[-121.680621,36.903285],[-121.6863,36.907851],[-121.697441,36.911607],[-121.702324,36.908175],[-121.706795,36.911196],[-121.698461,36.916738],[-121.699956,36.919683],[-121.709998,36.915304],[-121.715119,36.908794],[-121.726447,36.914272],[-121.728381,36.911415],[-121.736064,36.908511],[-121.745365,36.909293],[-121.757482,36.899981],[-121.765059,36.88827],[-121.7725,36.883767],[-121.777456,36.883212],[-121.784082,36.885903],[-121.793216,36.880017],[-121.80345,36.868012],[-121.800938,36.857387],[-121.810552,36.850648]],[[-121.810552,36.850648],[-121.827664,36.879353],[-121.862266,36.931552],[-121.880167,36.950151],[-121.894667,36.961851],[-121.906468,36.96895],[-121.930069,36.97815],[-121.93947,36.97805],[-121.95167,36.97145],[-121.972771,36.954151],[-121.983896,36.958727],[-122.012373,36.96455],[-122.023373,36.96215],[-122.027174,36.95115],[-122.050122,36.948523],[-122.066421,36.948271],[-122.105976,36.955951],[-122.140578,36.97495],[-122.155078,36.98085],[-122.186879,37.00345],[-122.20618,37.013949],[-122.252181,37.059448],[-122.260481,37.072548],[-122.284882,37.101747],[-122.292974,37.107318]],[[-122.315445,37.896778],[-122.296207,37.898925],[-122.28848,37.897925],[-122.27798,37.901626],[-122.27108,37.905824],[-122.257113,37.899856],[-122.253082,37.894116],[-122.249477,37.893086],[-122.248914,37.886867],[-122.241979,37.881924],[-122.238679,37.883325],[-122.223878,37.878326],[-122.216276,37.868822],[-122.221488,37.865026],[-122.21238,37.857234],[-122.208486,37.85169],[-122.204094,37.851387],[-122.195274,37.843587],[-122.196101,37.842005],[-122.184179,37.833922],[-122.187077,37.829526],[-122.185977,37.820726],[-122.176977,37.816227],[-122.166873,37.813424],[-122.157392,37.817952],[-122.148808,37.81376],[-122.14026,37.804562],[-122.045473,37.798126],[-122.030472,37.787727],[-122.014072,37.780227],[-121.997771,37.763227],[-122.010771,37.755127],[-122.011771,37.747428],[-122.001071,37.739028],[-121.993571,37.738128],[-121.989971,37.733628],[-121.97247,37.728528],[-121.96077,37.718629],[-121.910138,37.73046],[-121.749599,37.769536],[-121.670362,37.789427],[-121.623724,37.799291],[-121.55916,37.818927],[-121.556936,37.817218]],[[-121.556936,37.817218],[-121.556661,37.756107],[-121.556959,37.743051],[-121.556957,37.63613],[-121.557248,37.615637],[-121.556655,37.542732],[-121.550454,37.539332],[-121.545754,37.532532],[-121.539654,37.529831],[-121.522154,37.524832],[-121.504153,37.525932],[-121.498653,37.522632],[-121.502053,37.518532],[-121.497553,37.513232],[-121.496052,37.504932],[-121.493352,37.502432],[-121.485452,37.502532],[-121.469275,37.489093],[-121.471925,37.481783]],[[-121.471925,37.481783],[-121.472648,37.48217]],[[-121.472648,37.48217],[-121.472952,37.482333],[-121.69006,37.482834],[-121.741328,37.48394],[-121.830388,37.484236],[-121.865267,37.484637],[-121.875205,37.475215],[-121.881996,37.470708],[-121.885966,37.471375],[-121.890759,37.468038],[-121.909129,37.462995],[-121.925548,37.454389],[-121.932069,37.455277],[-121.934116,37.460331],[-121.947087,37.467424],[-121.946174,37.463946],[-121.951921,37.461461],[-121.959313,37.463515],[-121.974706,37.46074],[-121.980014,37.460892],[-121.997171,37.467139],[-122.03837,37.46416],[-122.047825,37.459007],[-122.051244,37.459007],[-122.081473,37.477838]],[[-122.081473,37.477838],[-122.109574,37.497637],[-122.116112,37.505386]],[[-122.116112,37.505386],[-122.111344,37.50758],[-122.111998,37.528851],[-122.128688,37.560594],[-122.137524,37.567467],[-122.147014,37.588411],[-122.145378,37.600846],[-122.152905,37.640771],[-122.163049,37.667933],[-122.170904,37.676114],[-122.179085,37.680041],[-122.203971,37.697769],[-122.213774,37.698695],[-122.221628,37.705567],[-122.246826,37.72193],[-122.257953,37.739601],[-122.257134,37.745001],[-122.243947,37.751779],[-122.271905,37.761508],[-122.275408,37.76735],[-122.293996,37.770416],[-122.318909,37.77904],[-122.33079,37.78383],[-122.331748,37.796052],[-122.335675,37.799652],[-122.333711,37.809797],[-122.323567,37.823214],[-122.317676,37.826814],[-122.306222,37.827469],[-122.302981,37.836497],[-122.315913,37.836812],[-122.314195,37.842311],[-122.303884,37.840249],[-122.302852,37.848154],[-122.308352,37.862934],[-122.316944,37.858809],[-122.325193,37.874276],[-122.318663,37.875307],[-122.313164,37.870151],[-122.310414,37.870495],[-122.311445,37.879775],[-122.326912,37.888712],[-122.326912,37.892492],[-122.311101,37.89043],[-122.315445,37.896778]],[[-119.585437,38.713212],[-119.579476,38.706653],[-119.586905,38.698497],[-119.586668,38.694913],[-119.591844,38.690126],[-119.591461,38.682174],[-119.596212,38.677879],[-119.599326,38.670233],[-119.609011,38.665911],[-119.614658,38.665879],[-119.613133,38.655772],[-119.616862,38.644627],[-119.614934,38.638152],[-119.618269,38.631849],[-119.616645,38.62591],[-119.621072,38.614423],[-119.619066,38.603529],[-119.612534,38.600482],[-119.608864,38.594718],[-119.599815,38.593348],[-119.594652,38.587651],[-119.59602,38.581851],[-119.589307,38.573563],[-119.59052,38.568678],[-119.587192,38.566903],[-119.587367,38.558354],[-119.584298,38.552018],[-119.579394,38.548701],[-119.57411,38.540824],[-119.568055,38.537707],[-119.566871,38.52527],[-119.56154,38.526008],[-119.558774,38.518096],[-119.556217,38.516621],[-119.559214,38.505491],[-119.556616,38.501702],[-119.542817,38.499258],[-119.545374,38.490032],[-119.542452,38.480649],[-119.546867,38.473521],[-119.555863,38.470242],[-119.558983,38.460437],[-119.556426,38.447465],[-119.563802,38.437609],[-119.570009,38.43486],[-119.566056,38.42775],[-119.565065,38.421802],[-119.561857,38.420843],[-119.561995,38.410734],[-119.567546,38.405115],[-119.582628,38.399347],[-119.583689,38.396943],[-119.592409,38.398877],[-119.601212,38.405354],[-119.611508,38.398972],[-119.61581,38.398917],[-119.622093,38.393875],[-119.618801,38.382739],[-119.60662,38.367182],[-119.614448,38.365593],[-119.635575,38.353908],[-119.628295,38.349733],[-119.632068,38.344202],[-119.631853,38.334741],[-119.63544,38.328673],[-119.639205,38.32688]],[[-119.639205,38.32688],[-119.669524,38.348288],[-119.700029,38.365215],[-119.693622,38.378899],[-119.694293,38.385134],[-119.700647,38.412669],[-119.712893,38.418452],[-119.753481,38.416759],[-119.770553,38.406663],[-119.779889,38.407714],[-119.784485,38.404875],[-119.801737,38.401321],[-119.814691,38.387516],[-119.837551,38.382411],[-119.854978,38.372479],[-119.869667,38.367597],[-119.882498,38.359302],[-119.884749,38.356185],[-120.018572,38.43235],[-120.019951,38.433521]],[[-120.019951,38.433521],[-120.053578,38.455554],[-120.072566,38.447081],[-120.072484,38.509869]],[[-120.072484,38.509869],[-120.072392,38.702767]],[[-120.072392,38.702767],[-119.964948,38.775986],[-119.947927,38.781642],[-119.947655,38.785158],[-119.939585,38.794371],[-119.943942,38.796717],[-119.942516,38.802634],[-119.936066,38.807279],[-119.931746,38.814138],[-119.921307,38.821737],[-119.92271,38.829955],[-119.908493,38.834346],[-119.908541,38.84613],[-119.906779,38.854664],[-119.900761,38.857408],[-119.891909,38.857344],[-119.880303,38.864776],[-119.87775,38.868311],[-119.87936,38.87531],[-119.88876,38.878977],[-119.882814,38.880989],[-119.879543,38.886536],[-119.884488,38.894206],[-119.879864,38.899419],[-119.883264,38.904518],[-119.887643,38.918295],[-119.891551,38.918142],[-119.905399,38.928337],[-119.904315,38.933324]],[[-119.904315,38.933324],[-119.585437,38.713212]],[[-120.995497,38.225405],[-121.006399,38.250605],[-121.027084,38.300252]],[[-121.027084,38.300252],[-121.027262,38.489252],[-121.027507,38.508292]],[[-121.027507,38.508292],[-121.019309,38.508948],[-121.009509,38.514595],[-121.005307,38.519592],[-120.999941,38.518103],[-120.995008,38.513691],[-120.9901,38.516153],[-120.974374,38.515998],[-120.970281,38.520811],[-120.964569,38.520284],[-120.957595,38.522768],[-120.952526,38.521031],[-120.946218,38.523463],[-120.943563,38.527524],[-120.938962,38.527875],[-120.936416,38.519414],[-120.927449,38.515078],[-120.922068,38.519387],[-120.910985,38.520496],[-120.905403,38.524311],[-120.902366,38.531227],[-120.891238,38.528289],[-120.889432,38.524691],[-120.883627,38.525912],[-120.88066,38.530864],[-120.883723,38.535168],[-120.873304,38.541732],[-120.870815,38.536185],[-120.863003,38.535974],[-120.862409,38.543329],[-120.857018,38.542598],[-120.856415,38.548051],[-120.840906,38.556036],[-120.836585,38.551468],[-120.832923,38.555862],[-120.825437,38.55586],[-120.823283,38.559687],[-120.817219,38.558074],[-120.814736,38.561836],[-120.809896,38.56127],[-120.810456,38.55775],[-120.80184,38.559095],[-120.800882,38.556283],[-120.794665,38.557617],[-120.79233,38.554612],[-120.783143,38.550904],[-120.779078,38.554378],[-120.768373,38.552749],[-120.759959,38.554931],[-120.754752,38.551161],[-120.748873,38.553398],[-120.747251,38.548446],[-120.738962,38.548306],[-120.735695,38.545587],[-120.731036,38.547996],[-120.722875,38.547032],[-120.718321,38.541763],[-120.690676,38.528017],[-120.683089,38.526394],[-120.677438,38.518132],[-120.659183,38.51557],[-120.650757,38.510033],[-120.63899,38.507766],[-120.628428,38.503204],[-120.62208,38.50439],[-120.606157,38.502349],[-120.592126,38.504596],[-120.580239,38.503448],[-120.575135,38.504417],[-120.55378,38.511863],[-120.54319,38.509769],[-120.510596,38.511467],[-120.490186,38.51794],[-120.485204,38.521393],[-120.473714,38.521645],[-120.459157,38.523888],[-120.450036,38.528492],[-120.438981,38.528895],[-120.433695,38.526702],[-120.424637,38.530342],[-120.413149,38.53115],[-120.405086,38.536076],[-120.388967,38.540575],[-120.383226,38.538931],[-120.380839,38.542854],[-120.373345,38.545034],[-120.363063,38.544566],[-120.355535,38.548031],[-120.338669,38.546938],[-120.331298,38.547694],[-120.328356,38.545155],[-120.318831,38.544881],[-120.301721,38.549109],[-120.299189,38.556117],[-120.289586,38.55614],[-120.274522,38.559452],[-120.266761,38.567584],[-120.266352,38.573465],[-120.26256,38.578633],[-120.251026,38.584383],[-120.239231,38.585957],[-120.233849,38.588316],[-120.231756,38.592236],[-120.232624,38.600044],[-120.223662,38.604281],[-120.227248,38.609794],[-120.220714,38.621376],[-120.214917,38.623299],[-120.212787,38.629371],[-120.204748,38.627734],[-120.202875,38.624706],[-120.197676,38.625804],[-120.197104,38.629198],[-120.178644,38.633766],[-120.170189,38.632432],[-120.158102,38.633233],[-120.145072,38.639676],[-120.140494,38.638168],[-120.131718,38.649064],[-120.135104,38.654526],[-120.128513,38.665061],[-120.123094,38.666704],[-120.116701,38.679778],[-120.123369,38.686934],[-120.121762,38.696083],[-120.110852,38.705714],[-120.103005,38.705963],[-120.098369,38.703957],[-120.098322,38.709029],[-120.077639,38.708887],[-120.077693,38.702126],[-120.072392,38.702767]],[[-120.072484,38.509869],[-120.08941,38.5064],[-120.092221,38.507503],[-120.100299,38.503997],[-120.107996,38.50384],[-120.112733,38.498018],[-120.125191,38.495844],[-120.142101,38.498113],[-120.146708,38.495319],[-120.164319,38.494235],[-120.169224,38.496294],[-120.180054,38.495558],[-120.205702,38.501039],[-120.217417,38.497706],[-120.22603,38.490742],[-120.235546,38.489885],[-120.240871,38.485351],[-120.254637,38.48771],[-120.261393,38.485869],[-120.269132,38.477773],[-120.283785,38.475447],[-120.294785,38.477161],[-120.304564,38.472126],[-120.319114,38.471026],[-120.33104,38.465192],[-120.338139,38.467437],[-120.353649,38.465483],[-120.362101,38.46667],[-120.369996,38.465186],[-120.379282,38.461065],[-120.384198,38.461865],[-120.386409,38.465961],[-120.412429,38.468666],[-120.414664,38.473075],[-120.423215,38.473322],[-120.43159,38.467178],[-120.443988,38.46147],[-120.447733,38.453543],[-120.461404,38.446171],[-120.467137,38.448844],[-120.485954,38.445649],[-120.493959,38.447228],[-120.498102,38.444431],[-120.505602,38.443699],[-120.50464,38.439378],[-120.52358,38.422653],[-120.53013,38.418884],[-120.537225,38.418432],[-120.540156,38.423056],[-120.550341,38.420284],[-120.560014,38.41506],[-120.567821,38.414997],[-120.572271,38.412502],[-120.570581,38.407359],[-120.57556,38.401388],[-120.590092,38.399254],[-120.601357,38.399724],[-120.609139,38.396716],[-120.610457,38.391631],[-120.614991,38.389201],[-120.614739,38.380612],[-120.616848,38.37908],[-120.614098,38.372483],[-120.610438,38.370013],[-120.618779,38.365439],[-120.619217,38.358164],[-120.627572,38.356137],[-120.631801,38.345566],[-120.631783,38.339947],[-120.638507,38.340835],[-120.646613,38.334586],[-120.6565,38.330912],[-120.666923,38.331494],[-120.67646,38.328562],[-120.683569,38.324667],[-120.685846,38.320309],[-120.692396,38.31794],[-120.713583,38.3149],[-120.731866,38.307702],[-120.738286,38.307768],[-120.751694,38.295942],[-120.754442,38.288469],[-120.767291,38.290316],[-120.779002,38.287619],[-120.790542,38.288593],[-120.799273,38.285637],[-120.803365,38.288867],[-120.808321,38.287694],[-120.810546,38.281605],[-120.816852,38.28392],[-120.822044,38.275451],[-120.832042,38.269148],[-120.846799,38.264271],[-120.855667,38.248296],[-120.869971,38.244402],[-120.87542,38.239772],[-120.88006,38.24061],[-120.880767,38.23361],[-120.888774,38.227569],[-120.892864,38.221574],[-120.903074,38.222557],[-120.912736,38.229466],[-120.925528,38.227632],[-120.937155,38.220762],[-120.953404,38.226315],[-120.963347,38.219902],[-120.972104,38.217951],[-120.981072,38.221788],[-120.985737,38.221414],[-120.995497,38.225405]],[[-121.436886,40.151905],[-121.404509,40.151648],[-121.404855,40.115545],[-121.385934,40.1159],[-121.386105,40.10865],[-121.376489,40.108626],[-121.376792,40.086034],[-121.366818,40.086054],[-121.367142,40.071888],[-121.376844,40.071747],[-121.377076,40.057089],[-121.381996,40.056991],[-121.382266,40.051827],[-121.400353,40.052095],[-121.400338,40.030523],[-121.409642,40.030624],[-121.409562,40.015728],[-121.41948,40.015766],[-121.419817,39.987549],[-121.410263,39.987303],[-121.410327,39.958478],[-121.419844,39.958625],[-121.420573,39.929606],[-121.411086,39.929433],[-121.411001,39.915091],[-121.430012,39.914833],[-121.429957,39.900313],[-121.411,39.900425],[-121.411936,39.871421],[-121.399018,39.871287],[-121.398529,39.862884],[-121.38015,39.862816],[-121.380183,39.855421],[-121.361206,39.855473],[-121.360516,39.84074],[-121.351079,39.84035],[-121.350821,39.825704],[-121.332293,39.825696],[-121.332333,39.811053],[-121.318471,39.810906],[-121.316938,39.796702],[-121.307709,39.796616],[-121.307808,39.789365],[-121.294126,39.78925],[-121.294224,39.785502],[-121.289468,39.785439],[-121.289505,39.781657],[-121.284946,39.781576],[-121.285852,39.767624],[-121.268272,39.768799],[-121.268025,39.754244],[-121.251074,39.754041],[-121.248256,39.740041],[-121.229706,39.740213],[-121.229446,39.725665],[-121.210878,39.725651],[-121.210618,39.711923],[-121.208941,39.711879],[-121.208687,39.700358],[-121.190532,39.699891],[-121.190284,39.685353],[-121.171188,39.685564],[-121.171143,39.671088],[-121.163015,39.670987],[-121.162864,39.663824],[-121.155144,39.663913],[-121.155077,39.656785],[-121.136412,39.65681],[-121.136715,39.628169],[-121.116633,39.628048],[-121.116331,39.621018],[-121.097538,39.620903],[-121.097703,39.613698],[-121.088947,39.613545],[-121.088921,39.603306],[-121.079345,39.60335],[-121.076695,39.597264]],[[-121.908269,39.303878],[-121.908697,39.30799],[-121.905433,39.322752],[-121.900193,39.335362],[-121.895891,39.33772],[-121.899698,39.354014],[-121.898608,39.357905],[-121.893892,39.35834],[-121.887703,39.37198],[-121.884047,39.373857],[-121.890013,39.383864]],[[-121.890013,39.383864],[-121.890271,39.390585],[-121.88346,39.406765],[-121.884316,39.410175],[-121.880953,39.416423],[-121.878032,39.427659],[-121.875199,39.427911],[-121.874579,39.434135],[-121.87694,39.438346],[-121.8708,39.449559],[-121.874754,39.460338],[-121.869351,39.466196],[-121.871211,39.46718],[-121.87301,39.482261],[-121.87171,39.490771],[-121.877133,39.501782],[-121.877341,39.509549],[-121.871114,39.518447],[-121.8615,39.524985],[-121.85681,39.532206],[-121.856532,39.536904],[-121.945194,39.536057],[-121.974031,39.52885],[-121.97682,39.53287],[-121.98567,39.531017],[-121.994021,39.533926],[-121.999152,39.544839],[-122.003051,39.557665],[-122.001723,39.561023],[-121.991729,39.562635],[-121.991053,39.565892],[-122.001425,39.569002],[-122.00334,39.57326],[-121.995062,39.582295],[-121.996858,39.587621],[-121.995767,39.603164],[-121.992323,39.60818],[-121.982222,39.611369],[-121.979555,39.614791],[-121.983546,39.623283],[-121.988333,39.62421],[-121.992132,39.629159],[-121.990829,39.636539],[-121.986391,39.644874],[-121.975987,39.648639],[-121.968188,39.648348],[-121.966623,39.652444],[-121.969193,39.656984],[-121.97765,39.66424],[-121.984822,39.660509],[-121.990771,39.660411],[-121.996495,39.663864],[-121.997348,39.668483],[-121.994343,39.671458],[-121.985145,39.670172],[-121.974794,39.675487],[-121.960198,39.677877],[-121.956919,39.687525],[-121.945892,39.690322],[-121.941583,39.698113],[-121.950951,39.715004],[-121.950765,39.71934],[-121.94681,39.724934],[-121.946937,39.730653],[-121.952407,39.73182],[-121.957239,39.719088],[-121.962524,39.717741],[-121.967845,39.721981],[-121.964996,39.728391],[-121.961232,39.730752],[-121.960472,39.736396],[-121.963796,39.741398],[-121.969222,39.739595],[-121.9693,39.733839],[-121.972413,39.731582],[-121.983846,39.735413],[-121.989226,39.743617],[-121.998114,39.752403],[-122.008738,39.759233],[-122.016604,39.761423],[-122.02456,39.767942],[-122.032635,39.779386],[-122.026468,39.786331],[-122.023828,39.797674],[-122.026498,39.800137],[-122.036597,39.797978],[-122.040126,39.792748],[-122.046471,39.797648]],[[-122.046471,39.797648],[-122.049954,39.803322],[-122.054275,39.804148],[-122.06393,39.810634],[-122.064571,39.8146],[-122.059111,39.819112],[-122.057308,39.828709],[-122.06322,39.832173],[-122.069431,39.84053],[-122.066943,39.844619],[-122.059209,39.849494],[-122.056486,39.854073],[-122.055693,39.863973],[-122.048911,39.869677],[-122.040789,39.879899],[-122.044865,39.883771],[-121.884518,39.883208],[-121.873712,39.883994],[-121.804041,39.884344],[-121.806104,39.888217],[-121.777103,39.888519],[-121.766505,39.897596],[-121.75314,39.90429],[-121.750634,39.906805],[-121.74915,39.926897],[-121.746251,39.938532],[-121.735828,39.953516],[-121.728711,39.957291],[-121.724966,39.96763],[-121.714904,39.97143],[-121.706004,39.978105],[-121.701938,39.984364],[-121.646032,39.982527],[-121.645849,39.997058],[-121.63544,39.996822],[-121.636174,40.02581],[-121.62607,40.0256],[-121.626086,40.039496],[-121.617809,40.039416],[-121.617289,40.047061],[-121.608729,40.046746],[-121.608641,40.055083],[-121.598558,40.055086],[-121.595647,40.057714],[-121.595802,40.093458],[-121.586141,40.093295],[-121.586407,40.100522],[-121.510559,40.100515],[-121.510551,40.107979],[-121.490866,40.108044],[-121.490858,40.115286],[-121.48097,40.115087],[-121.480954,40.122366],[-121.452898,40.122125],[-121.452727,40.129735],[-121.442869,40.129647],[-121.442836,40.1487],[-121.436886,40.151905]],[[-120.019951,38.433521],[-120.029923,38.424682],[-120.040563,38.425927],[-120.049032,38.419369],[-120.067903,38.415493],[-120.069737,38.413481],[-120.080846,38.410103],[-120.087914,38.403381],[-120.108203,38.402061],[-120.121633,38.399479],[-120.128842,38.395751],[-120.134916,38.396529],[-120.153081,38.386944],[-120.158543,38.385295],[-120.161216,38.380903],[-120.166766,38.379758],[-120.176177,38.374014],[-120.180939,38.368088],[-120.184797,38.358822],[-120.189877,38.35596],[-120.205161,38.329646],[-120.211079,38.324564],[-120.222659,38.319821],[-120.228749,38.314394],[-120.231556,38.307461],[-120.237268,38.301554],[-120.237089,38.298466],[-120.251872,38.287022],[-120.256054,38.286135],[-120.260479,38.278064],[-120.271009,38.270281],[-120.273992,38.264374],[-120.272432,38.259775],[-120.275914,38.258817],[-120.286142,38.249761],[-120.290357,38.243885],[-120.29124,38.234003],[-120.301977,38.229436],[-120.307579,38.224431],[-120.317253,38.207256],[-120.326367,38.195938],[-120.330309,38.195162],[-120.335534,38.184962],[-120.339651,38.183636],[-120.340527,38.171947],[-120.350497,38.169823],[-120.353572,38.163784],[-120.360324,38.160354],[-120.357544,38.153879],[-120.368815,38.152234],[-120.376203,38.142649],[-120.371054,38.139663],[-120.378666,38.134826],[-120.378783,38.129769],[-120.384026,38.125652],[-120.387209,38.11602],[-120.395867,38.109889],[-120.40837,38.103905],[-120.410514,38.099934],[-120.410596,38.087877],[-120.415322,38.081106],[-120.418987,38.080485],[-120.424371,38.0732],[-120.430819,38.073389],[-120.431043,38.061264],[-120.442529,38.058741],[-120.443445,38.051655],[-120.453941,38.041347],[-120.462133,38.022375],[-120.46884,38.019648],[-120.469678,38.016448],[-120.463232,38.012775],[-120.46503,38.009591],[-120.47378,38.012441],[-120.483679,38.012106],[-120.486887,38.009467],[-120.492774,38.011129],[-120.499822,38.007937],[-120.499817,37.995437],[-120.504516,37.991144],[-120.509195,37.991508],[-120.514006,37.996632],[-120.509692,37.99816],[-120.511091,38.002585],[-120.516178,38.004133],[-120.521653,37.99516],[-120.534339,37.991556],[-120.528116,37.982239],[-120.541149,37.978475],[-120.540937,37.974332],[-120.53007,37.976367],[-120.524767,37.968238],[-120.517597,37.965308],[-120.513353,37.957945],[-120.516745,37.951973],[-120.535242,37.944404],[-120.539443,37.937387],[-120.537616,37.926862],[-120.542643,37.920178],[-120.551108,37.921676],[-120.555155,37.916831],[-120.56244,37.913794],[-120.564364,37.903049],[-120.572982,37.894135],[-120.581286,37.896019],[-120.587525,37.895223],[-120.596681,37.888144],[-120.596298,37.883359],[-120.609031,37.872715],[-120.622714,37.86747],[-120.633786,37.860608],[-120.637967,37.852377],[-120.637635,37.848232],[-120.643692,37.844055],[-120.643442,37.840477],[-120.64865,37.837561],[-120.652673,37.831422]],[[-120.652673,37.831422],[-120.659938,37.838228],[-120.719379,37.890304],[-120.728675,37.897671],[-120.744624,37.912582],[-120.752695,37.923334],[-120.783996,37.950961],[-120.788998,37.954773],[-120.832781,37.99384],[-120.85251,38.009344],[-120.876047,38.028894],[-120.918681,38.070756],[-120.926449,38.077421]],[[-120.926449,38.077421],[-120.93885,38.088321],[-120.975206,38.177886],[-120.995497,38.225405]],[[-121.835488,38.924481],[-121.91512,38.925349],[-122.061124,38.925861],[-122.093042,38.925651],[-122.207772,38.925401],[-122.247341,38.923897],[-122.340172,38.924246]],[[-122.739062,39.383266],[-122.704182,39.382946],[-122.674376,39.384677],[-122.548908,39.385053],[-122.507523,39.384063],[-122.417767,39.383975],[-122.262988,39.384628],[-122.192334,39.385257],[-122.136006,39.385494],[-122.136161,39.414499],[-122.009019,39.413568],[-122.006369,39.405265],[-122.00374,39.403482],[-122.003911,39.396898],[-122.007408,39.392291],[-122.009735,39.383864],[-121.890013,39.383864]],[[-121.862462,38.06603],[-121.853639,38.064776],[-121.846802,38.059955],[-121.84204,38.052565],[-121.837936,38.038944],[-121.832122,38.031101],[-121.815673,38.021038],[-121.80127,38.021622],[-121.788773,38.018421],[-121.777485,38.018917],[-121.765127,38.023195],[-121.744481,38.025087],[-121.732565,38.02902],[-121.725925,38.03364],[-121.707562,38.040852],[-121.699765,38.04522],[-121.691665,38.05352],[-121.683365,38.059419],[-121.679765,38.065119],[-121.680249,38.076648],[-121.681865,38.082019],[-121.679265,38.089319],[-121.673065,38.093518],[-121.661865,38.095618],[-121.638088,38.086131],[-121.632595,38.088611],[-121.628353,38.097918],[-121.619756,38.099447],[-121.604923,38.099878],[-121.585283,38.096366],[-121.580022,38.094414]],[[-121.580022,38.094414],[-121.57776,38.089466],[-121.576749,38.078193],[-121.572923,38.074239],[-121.582203,38.068423],[-121.583879,38.059897],[-121.582305,38.051436],[-121.585078,38.040267],[-121.583578,38.034381],[-121.577948,38.033817],[-121.580786,38.038789],[-121.574151,38.042794],[-121.570819,38.038003],[-121.571809,38.031376],[-121.564226,38.029699],[-121.563304,38.023913],[-121.558321,38.015732],[-121.566434,38.018071],[-121.572789,38.01691],[-121.566965,38.013528],[-121.56815,38.011383],[-121.577879,38.01082],[-121.578711,38.004255],[-121.569096,38.002789],[-121.57056,37.999025],[-121.578945,37.99855],[-121.576084,37.994855],[-121.581025,37.989525],[-121.58236,37.983461],[-121.573583,37.980309],[-121.579943,37.976113],[-121.574823,37.973025],[-121.573713,37.966434],[-121.565138,37.959849],[-121.565586,37.957785],[-121.574501,37.956939],[-121.573589,37.953756],[-121.563331,37.954084],[-121.568515,37.949171],[-121.563406,37.944273],[-121.561455,37.935885],[-121.557274,37.932247],[-121.558899,37.927926],[-121.556419,37.923302],[-121.565114,37.919173],[-121.563212,37.912217],[-121.564769,37.909009],[-121.572626,37.904665],[-121.565904,37.897672],[-121.567679,37.892431],[-121.575532,37.88898],[-121.57387,37.883395],[-121.579425,37.8723],[-121.573389,37.865751],[-121.579503,37.861072],[-121.57865,37.858041],[-121.571794,37.860483],[-121.565903,37.857863],[-121.56261,37.853354],[-121.561813,37.857135],[-121.555255,37.858007],[-121.552836,37.861182],[-121.547496,37.855226],[-121.541117,37.857745],[-121.540035,37.848842],[-121.534247,37.849891],[-121.540272,37.841494],[-121.537917,37.838694],[-121.542413,37.833398],[-121.549459,37.833569],[-121.553311,37.818825],[-121.556936,37.817218]],[[-122.315445,37.896778],[-122.323131,37.894555],[-122.326568,37.896617],[-122.32373,37.905845],[-122.33453,37.908791],[-122.35711,37.908791],[-122.362346,37.904209],[-122.378709,37.905191],[-122.389181,37.9101],[-122.39049,37.922535],[-122.395071,37.927117],[-122.401289,37.928426],[-122.413725,37.937262],[-122.430087,37.963115],[-122.42976,37.965405],[-122.415361,37.963115],[-122.408383,37.957544],[-122.399832,37.956009],[-122.367582,37.978168],[-122.361905,37.989991],[-122.366928,37.998458],[-122.368891,38.007948],[-122.367909,38.01253],[-122.363655,38.014166],[-122.359493,38.009941],[-122.340093,38.003694],[-122.331912,38.00533],[-122.321112,38.012857],[-122.315549,38.013511],[-122.300823,38.010893],[-122.283478,38.022674],[-122.262861,38.0446],[-122.262861,38.051473],[-122.266669,38.06007]],[[-123.517906,42.000883],[-123.519854,41.995164],[-123.534261,41.990933],[-123.540955,41.984891],[-123.537819,41.982404],[-123.535754,41.97412],[-123.536933,41.969102],[-123.533827,41.965407],[-123.533251,41.955169],[-123.538813,41.949503],[-123.548845,41.933328],[-123.554389,41.930052],[-123.553739,41.914123],[-123.559492,41.905968],[-123.565442,41.903141],[-123.59363,41.90589],[-123.599452,41.897805],[-123.597377,41.894173],[-123.604805,41.888095],[-123.605626,41.881121],[-123.613869,41.880885],[-123.62172,41.884738],[-123.624463,41.888431],[-123.635645,41.887518],[-123.642191,41.889742],[-123.645825,41.883095],[-123.652197,41.878696],[-123.646689,41.877029],[-123.651395,41.872909],[-123.652276,41.865537],[-123.649476,41.86032],[-123.661534,41.856473],[-123.662463,41.852417],[-123.671339,41.844985],[-123.67078,41.835432],[-123.682913,41.837136],[-123.695006,41.834137],[-123.703768,41.829117],[-123.703042,41.819749],[-123.695079,41.816348],[-123.689957,41.80316],[-123.684878,41.799939],[-123.68072,41.800831],[-123.67211,41.79599],[-123.676262,41.789489],[-123.673881,41.786317],[-123.684106,41.784527],[-123.68834,41.781221],[-123.683421,41.76963],[-123.682148,41.752673],[-123.678655,41.74627],[-123.678304,41.738543],[-123.672416,41.733749],[-123.666108,41.732156],[-123.659871,41.720199],[-123.660205,41.714055],[-123.669168,41.706479],[-123.670117,41.699343],[-123.662843,41.693468],[-123.669727,41.689917],[-123.675068,41.682112],[-123.680011,41.680186],[-123.689583,41.669434],[-123.68702,41.648214],[-123.679926,41.637018],[-123.680444,41.633957],[-123.69664,41.633863],[-123.696556,41.628236],[-123.706124,41.620944],[-123.711031,41.615019],[-123.711427,41.608918],[-123.716106,41.606547],[-123.719089,41.595258],[-123.715675,41.591312],[-123.706535,41.595691],[-123.698748,41.595597],[-123.697587,41.590944],[-123.686958,41.594811],[-123.682203,41.594561],[-123.681345,41.586741],[-123.688238,41.584791],[-123.688578,41.580386],[-123.681527,41.571964],[-123.687588,41.566985],[-123.688647,41.561805],[-123.693889,41.556993],[-123.692566,41.553049],[-123.682949,41.543205],[-123.670034,41.544086],[-123.668762,41.542139],[-123.658362,41.539103],[-123.652796,41.539391],[-123.648046,41.535024],[-123.646807,41.528888],[-123.642741,41.522504],[-123.646298,41.514559],[-123.640944,41.507677],[-123.63879,41.496516],[-123.63444,41.485398],[-123.637771,41.482382],[-123.630567,41.477123],[-123.632408,41.47346],[-123.621447,41.463905],[-123.61179,41.462127],[-123.615922,41.452961],[-123.612395,41.448954],[-123.618174,41.44297],[-123.622009,41.432635],[-123.633035,41.428308],[-123.637792,41.428096],[-123.64856,41.420823],[-123.642015,41.415658],[-123.638913,41.407366],[-123.641648,41.400188],[-123.656005,41.395307],[-123.655755,41.387907],[-123.661363,41.38209]],[[-123.661363,41.38209],[-123.746072,41.381686],[-123.770239,41.380776],[-123.770551,41.464193],[-123.885691,41.463851],[-123.885695,41.465844],[-123.99535,41.465306],[-124.01324,41.464926],[-124.065521,41.464739]],[[-124.065521,41.464739],[-124.066057,41.470258],[-124.075917,41.501757],[-124.081427,41.511228],[-124.081988,41.547762],[-124.092404,41.553615],[-124.101123,41.569192],[-124.101403,41.578524],[-124.097385,41.585251],[-124.1051,41.594315],[-124.100961,41.602499],[-124.114413,41.616768],[-124.116037,41.628849],[-124.120225,41.640354],[-124.135552,41.657307],[-124.139354,41.671652],[-124.138373,41.678881],[-124.143479,41.709284],[-124.147412,41.717955],[-124.154246,41.728801],[-124.164716,41.740126],[-124.17739,41.745756],[-124.19104,41.736079],[-124.194953,41.736778],[-124.203843,41.747035],[-124.23972,41.7708],[-124.248704,41.771459],[-124.255994,41.783014],[-124.245027,41.7923],[-124.230678,41.818681],[-124.219592,41.846432],[-124.208439,41.888192],[-124.203402,41.940964],[-124.204948,41.983441],[-124.211605,41.99846],[-124.126194,41.996992],[-124.086661,41.996869],[-124.001188,41.996146],[-123.834208,41.996116],[-123.813992,41.995096],[-123.789295,41.996111],[-123.728156,41.997007],[-123.656998,41.995137],[-123.624554,41.999837],[-123.55256,42.000246],[-123.517906,42.000883]],[[-121.027507,38.508292],[-121.04137,38.540745],[-121.070467,38.607592],[-121.0793,38.632857],[-121.085428,38.647831],[-121.118617,38.717118],[-121.123964,38.710274],[-121.132924,38.70546],[-121.141009,38.71198]],[[-121.141009,38.71198],[-121.134507,38.712032],[-121.133195,38.716515],[-121.133295,38.731455],[-121.12835,38.733578],[-121.117479,38.757793],[-121.119259,38.765794],[-121.117217,38.770488],[-121.111668,38.773795],[-121.102999,38.785548],[-121.102238,38.796204],[-121.097757,38.807328],[-121.100844,38.815392],[-121.093435,38.813847],[-121.084482,38.816442],[-121.083055,38.823054],[-121.088721,38.827101],[-121.085791,38.83445],[-121.081931,38.835179],[-121.073575,38.842604],[-121.058408,38.847129],[-121.057579,38.85127],[-121.061806,38.859916],[-121.054431,38.865147],[-121.053263,38.868347],[-121.056928,38.877307],[-121.061984,38.881499],[-121.058592,38.884315],[-121.044191,38.890618],[-121.053407,38.899502],[-121.043958,38.906981],[-121.040511,38.915538],[-121.033783,38.912816],[-121.018928,38.918239],[-121.01235,38.916646],[-121.005126,38.920206],[-121.001052,38.917835],[-120.991156,38.923628],[-120.991968,38.927225],[-120.977266,38.92925],[-120.970423,38.933088],[-120.965994,38.932581],[-120.958052,38.939005],[-120.95158,38.938846],[-120.9434,38.935671],[-120.938301,38.935826],[-120.938202,38.95664],[-120.940281,38.962339],[-120.935291,38.963962],[-120.926304,38.96182],[-120.913874,38.955207],[-120.899989,38.953348],[-120.890502,38.959562],[-120.858903,38.952256],[-120.857716,38.956641],[-120.852221,38.959945],[-120.855532,38.96682],[-120.849386,38.976809],[-120.840627,38.975446],[-120.838837,38.971786],[-120.834163,38.971866],[-120.83262,38.978018],[-120.829383,38.980385],[-120.829711,38.987343],[-120.824724,38.992747],[-120.81549,38.994778],[-120.812295,39.000133],[-120.801916,39.001103],[-120.798103,38.996051],[-120.786791,38.999622],[-120.78025,39.00419],[-120.763857,39.009583],[-120.767107,39.005005],[-120.757622,39.007661],[-120.752091,39.005531],[-120.74608,39.010256],[-120.748491,39.005219],[-120.741641,39.001431],[-120.735577,39.000681],[-120.730174,39.003958],[-120.723171,38.999327],[-120.722341,38.993473],[-120.716286,38.986671],[-120.704866,38.981345],[-120.692138,38.985878],[-120.688911,38.989671],[-120.684939,38.989372],[-120.685153,38.98362],[-120.68089,38.977886],[-120.683367,38.97465],[-120.683455,38.967282],[-120.674696,38.962679],[-120.672748,38.958593],[-120.664471,38.95713],[-120.655245,38.953105],[-120.651042,38.948869],[-120.642458,38.944404],[-120.635381,38.943403],[-120.631091,38.946291],[-120.622289,38.943112],[-120.612809,38.943091],[-120.606943,38.935246],[-120.594381,38.936104],[-120.593459,38.932127],[-120.58731,38.93144],[-120.587033,38.924282],[-120.58054,38.920225],[-120.578858,38.916592],[-120.564258,38.913644],[-120.556321,38.915164],[-120.55215,38.92059],[-120.546095,38.920697],[-120.54537,38.926668],[-120.534493,38.926015],[-120.527345,38.931583],[-120.522848,38.930333],[-120.512346,38.931191],[-120.504841,38.935219],[-120.5029,38.940807],[-120.491808,38.944686],[-120.491193,38.950654],[-120.487686,38.952193],[-120.486122,38.958837],[-120.479695,38.959789],[-120.470781,38.965649],[-120.468504,38.971393],[-120.464574,38.973892],[-120.459638,38.984999],[-120.4515,38.987937],[-120.453829,38.994866],[-120.44968,39.00525],[-120.445381,39.010066],[-120.445213,39.017595],[-120.441983,39.023283],[-120.43524,39.028397],[-120.412248,39.026465],[-120.328122,39.022433],[-120.309722,39.023433],[-120.259369,39.02346],[-120.259073,39.024743],[-120.24041,39.023668],[-120.240157,39.030889],[-120.184098,39.031014],[-120.18356,39.038372],[-120.165028,39.038485],[-120.164964,39.045787],[-120.152976,39.045807],[-120.153021,39.060329],[-120.143598,39.060198],[-120.143663,39.067285],[-120.002461,39.067489]],[[-120.002461,39.067489],[-120.001014,38.999574],[-119.904315,38.933324]],[[-119.573194,36.488835],[-119.582025,36.482029],[-119.66629,36.41896],[-119.672833,36.427311],[-119.671493,36.431074],[-119.681318,36.429648],[-119.686941,36.425819],[-119.698554,36.424681],[-119.705046,36.427173],[-119.711706,36.419644],[-119.721435,36.417939],[-119.731957,36.419928],[-119.733529,36.416765],[-119.739332,36.417828],[-119.747117,36.416387],[-119.752391,36.40904],[-119.753114,36.401894],[-119.887145,36.402027],[-119.959227,36.400975],[-119.959996,36.379132],[-119.958902,36.299129],[-119.959079,36.182286],[-120.000969,36.14951],[-120.098157,36.074646],[-120.16594,36.022912],[-120.198507,35.997751],[-120.315068,35.907186]],[[-120.315068,35.907186],[-120.324267,35.908838],[-120.32599,35.913125],[-120.329914,35.91351],[-120.336369,35.923108],[-120.335067,35.928414],[-120.335963,35.937203],[-120.345829,35.944852],[-120.349644,35.944063],[-120.356626,35.948412],[-120.35753,35.955549],[-120.362492,35.959409],[-120.360402,35.964418],[-120.388868,35.969259],[-120.394005,35.967873],[-120.408543,35.975962],[-120.422786,35.973749],[-120.433053,35.968933],[-120.43609,35.970741],[-120.439662,35.979577],[-120.449087,35.985112],[-120.4497,35.988432],[-120.461074,35.993703],[-120.468609,35.994347],[-120.477391,36.000824],[-120.48045,36.005928],[-120.478698,36.010183],[-120.486216,36.011178],[-120.488082,36.014637],[-120.502257,36.022215],[-120.510445,36.021999],[-120.513194,36.025676],[-120.519411,36.027188],[-120.520009,36.020885],[-120.529796,36.024281],[-120.527202,36.035838],[-120.535549,36.035095],[-120.540409,36.036664],[-120.545408,36.046123],[-120.551779,36.049521],[-120.559207,36.05002],[-120.566649,36.052932],[-120.57648,36.060713],[-120.581324,36.062877],[-120.592218,36.0716],[-120.596088,36.078219],[-120.593173,36.08853],[-120.589796,36.089605],[-120.600607,36.101587],[-120.608019,36.102697],[-120.612362,36.099053],[-120.612265,36.095224],[-120.62381,36.097963],[-120.625998,36.097079],[-120.633602,36.103325],[-120.641895,36.101272],[-120.648784,36.10799],[-120.645423,36.116199],[-120.653203,36.118815],[-120.652548,36.124961],[-120.655726,36.131781],[-120.664845,36.140346],[-120.664705,36.147273],[-120.667985,36.160574],[-120.671945,36.164287],[-120.664248,36.165651],[-120.663057,36.171158],[-120.654621,36.167721],[-120.649049,36.169327],[-120.652355,36.172856],[-120.648852,36.179423],[-120.644636,36.179362],[-120.638147,36.197539],[-120.632754,36.198717],[-120.62691,36.203227],[-120.629391,36.207417],[-120.638819,36.214976],[-120.641329,36.220081],[-120.649265,36.223952],[-120.651408,36.230247],[-120.656408,36.233521],[-120.666916,36.235997],[-120.671972,36.242682],[-120.679741,36.246665],[-120.68177,36.251382],[-120.672955,36.257679],[-120.678582,36.267319]],[[-120.678582,36.267319],[-120.674246,36.272734],[-120.676212,36.275477],[-120.672622,36.280489],[-120.682885,36.286796],[-120.68045,36.290681],[-120.682723,36.294441],[-120.675564,36.3029],[-120.670084,36.305773],[-120.666391,36.311446],[-120.658806,36.316235],[-120.64578,36.317268],[-120.64267,36.319014],[-120.630009,36.316908],[-120.612032,36.321624],[-120.612142,36.324478],[-120.605412,36.324326],[-120.596562,36.328488],[-120.597422,36.415154],[-120.597155,36.488235],[-120.603706,36.488242],[-120.749436,36.605294],[-120.751011,36.606164],[-120.872952,36.703329],[-120.918731,36.740381]],[[-120.918731,36.740381],[-120.70701,36.911843],[-120.65595,36.952832],[-120.590566,36.952641],[-120.590483,36.981642],[-120.585995,36.985318],[-120.585359,36.991176],[-120.590926,36.992708],[-120.593564,36.997881],[-120.598564,36.99863],[-120.541696,37.044505]],[[-120.541696,37.044505],[-120.537124,37.039836],[-120.537815,37.034285],[-120.545536,37.027582],[-120.53782,37.02385],[-120.537659,37.019912],[-120.530713,37.020184],[-120.529768,37.012549],[-120.523264,37.014068],[-120.520181,37.011279],[-120.513791,37.010962],[-120.508965,37.007623],[-120.508544,37.000775],[-120.504029,37.000968],[-120.501183,36.996745],[-120.499519,36.981966],[-120.494765,36.975794],[-120.484139,36.972399],[-120.48872,36.967752],[-120.487829,36.964475],[-120.480744,36.959244],[-120.477724,36.953231],[-120.479038,36.94882],[-120.475166,36.939252],[-120.468011,36.937472],[-120.462256,36.927547],[-120.457226,36.923874],[-120.462206,36.917172],[-120.453393,36.914668],[-120.450341,36.911172],[-120.455996,36.905384],[-120.463362,36.905646],[-120.460924,36.902674],[-120.466752,36.892193],[-120.464319,36.886612],[-120.456542,36.883838],[-120.45356,36.880201],[-120.457744,36.878281],[-120.457384,36.873033],[-120.450693,36.871498],[-120.450971,36.867501],[-120.456113,36.863277],[-120.448977,36.860329],[-120.446125,36.856151],[-120.43853,36.854489],[-120.43995,36.849894],[-120.434436,36.850915],[-120.42627,36.839902],[-120.422187,36.840139],[-120.417095,36.835626],[-120.410444,36.840005],[-120.40071,36.82241],[-120.38903,36.824441],[-120.379098,36.817166],[-120.375596,36.808342],[-120.369612,36.810355],[-120.368284,36.806652],[-120.37413,36.80027],[-120.369823,36.795967],[-120.37293,36.788944],[-120.369052,36.784805],[-120.358092,36.787185],[-120.346523,36.784559],[-120.344825,36.787835],[-120.351076,36.796506],[-120.346623,36.797655],[-120.342987,36.79093],[-120.334194,36.790988],[-120.335563,36.78417],[-120.332246,36.783211],[-120.324216,36.786304],[-120.321722,36.777697],[-120.314538,36.77917],[-120.313824,36.781855],[-120.300357,36.777633],[-120.300159,36.774156],[-120.305294,36.773615],[-120.304078,36.769638],[-120.297692,36.772284],[-120.292119,36.770816],[-120.294166,36.766816],[-120.290594,36.763047],[-120.287949,36.764823],[-120.288259,36.772596],[-120.281221,36.772149],[-120.280883,36.766742],[-120.272678,36.77406],[-120.270324,36.771622],[-120.260551,36.772264],[-120.254798,36.770038],[-120.249211,36.775126],[-120.245685,36.771331],[-120.234005,36.768298],[-120.229179,36.769687],[-120.233502,36.778668],[-120.230713,36.782636],[-120.222712,36.782755],[-120.21749,36.788666],[-120.202218,36.790005],[-120.20181,36.782948],[-120.18883,36.776408],[-120.181526,36.78328],[-120.181966,36.788073],[-120.174455,36.796079],[-120.172724,36.802871],[-120.168689,36.803461],[-120.160034,36.797992],[-120.155336,36.798816],[-120.136572,36.809296],[-120.127521,36.812037],[-120.114329,36.81404],[-120.104262,36.813351],[-120.09774,36.815512],[-120.091644,36.821187],[-120.079458,36.825345],[-120.072699,36.819218],[-120.0661,36.81927],[-120.057776,36.82286],[-120.050858,36.821857],[-120.042292,36.815497],[-120.027775,36.814505],[-120.022647,36.817831],[-120.020174,36.824954],[-120.013334,36.828228],[-119.998055,36.827493],[-119.99075,36.830565],[-119.989929,36.838233],[-119.984035,36.840892],[-119.979717,36.839732],[-119.977025,36.835048],[-119.967666,36.832305],[-119.9605,36.836058],[-119.943507,36.83403],[-119.934547,36.838023],[-119.932593,36.844464],[-119.927777,36.848458],[-119.919523,36.845072],[-119.909098,36.846199],[-119.902895,36.851804],[-119.890304,36.851534],[-119.884889,36.858549],[-119.876484,36.854847],[-119.866335,36.847998],[-119.861411,36.85546],[-119.85499,36.851175],[-119.851058,36.852879],[-119.847464,36.860394],[-119.841549,36.861175],[-119.8368,36.853724],[-119.823421,36.848333],[-119.814034,36.850104],[-119.809639,36.862569],[-119.802176,36.866689],[-119.796521,36.875418],[-119.78819,36.876607],[-119.78529,36.885753],[-119.789655,36.895349],[-119.775588,36.909275],[-119.772737,36.918599],[-119.758513,36.920339],[-119.750391,36.9278],[-119.752532,36.935223],[-119.745652,36.938998],[-119.742119,36.943537],[-119.733767,36.946441],[-119.735973,36.952535],[-119.742854,36.953981],[-119.7405,36.970212],[-119.731634,36.979412],[-119.713182,36.991638],[-119.700744,37.003328],[-119.698075,37.008748],[-119.690779,37.011987],[-119.677362,37.009108],[-119.670918,37.00926],[-119.658611,37.01333],[-119.657114,37.018903],[-119.659377,37.038938],[-119.651604,37.042961],[-119.639349,37.043287],[-119.629033,37.034619],[-119.63618,37.023696],[-119.632172,37.020983],[-119.621116,37.026605],[-119.610361,37.045668],[-119.613373,37.050778],[-119.60967,37.064692],[-119.604908,37.071016],[-119.594547,37.070187],[-119.589431,37.066636],[-119.568416,37.063569],[-119.562979,37.064095],[-119.560628,37.070036],[-119.56321,37.073752],[-119.559002,37.088058],[-119.55425,37.092008],[-119.542292,37.095417],[-119.539418,37.098976],[-119.538075,37.106789],[-119.548754,37.116756],[-119.556196,37.115477],[-119.567234,37.115946],[-119.568973,37.118342],[-119.563401,37.128284],[-119.563784,37.13832],[-119.560839,37.142901],[-119.552157,37.145219],[-119.547893,37.143611],[-119.538786,37.134391],[-119.533125,37.13297],[-119.527619,37.128692],[-119.523541,37.129302],[-119.517472,37.146772],[-119.506733,37.150554],[-119.4901,37.13858],[-119.489121,37.134595],[-119.493214,37.124436],[-119.491315,37.119712],[-119.481243,37.109485],[-119.471217,37.110519],[-119.466232,37.119734],[-119.468647,37.128383],[-119.461662,37.145166],[-119.44272,37.144051],[-119.434875,37.146954],[-119.43306,37.161516],[-119.425805,37.164297],[-119.418183,37.164062],[-119.408655,37.161218],[-119.399787,37.149835],[-119.386521,37.14953],[-119.384975,37.153313],[-119.375029,37.157875],[-119.37521,37.164076],[-119.364991,37.165744],[-119.360678,37.169613],[-119.360565,37.180539],[-119.354111,37.185705],[-119.343107,37.189074],[-119.337197,37.200458],[-119.330573,37.205791],[-119.330739,37.215213],[-119.337575,37.219896],[-119.334005,37.223455],[-119.331516,37.239815],[-119.323235,37.245006],[-119.322235,37.253794],[-119.324586,37.265466],[-119.327441,37.270838],[-119.332027,37.273588],[-119.330855,37.283024],[-119.327055,37.292687],[-119.330878,37.30216],[-119.334042,37.30393],[-119.335266,37.311761],[-119.324521,37.320712],[-119.318563,37.321156],[-119.315576,37.325802],[-119.324546,37.332511],[-119.324413,37.33706],[-119.312226,37.339706],[-119.315371,37.345814],[-119.312186,37.352725],[-119.286334,37.375202],[-119.022363,37.585737]],[[-119.022363,37.585737],[-119.006362,37.576137],[-119.002262,37.571137],[-118.990561,37.567137],[-118.984861,37.567337],[-118.978561,37.561237],[-118.97696,37.556837],[-118.972461,37.559437],[-118.964061,37.558137],[-118.959761,37.563137],[-118.952661,37.565836],[-118.942661,37.562136],[-118.93896,37.554436],[-118.92966,37.548936],[-118.917158,37.550336],[-118.909759,37.539336],[-118.901159,37.531236],[-118.901859,37.526036],[-118.892559,37.526136],[-118.883658,37.520136],[-118.881658,37.510336],[-118.867458,37.507135],[-118.860758,37.501535],[-118.858494,37.494323],[-118.859717,37.491143],[-118.857223,37.479472],[-118.850474,37.475796],[-118.841901,37.480895],[-118.836021,37.482517],[-118.832795,37.480194],[-118.815526,37.487807],[-118.810284,37.486045],[-118.804274,37.488939],[-118.795839,37.488372],[-118.786046,37.478681],[-118.785053,37.473884],[-118.777891,37.469365],[-118.775014,37.463052]],[[-118.775014,37.463052],[-118.768489,37.456658],[-118.763287,37.456537],[-118.761886,37.448755],[-118.758922,37.44452],[-118.759581,37.435573],[-118.765095,37.42973],[-118.767506,37.42364],[-118.773039,37.424635],[-118.779757,37.421678],[-118.783558,37.413312],[-118.781811,37.408513],[-118.790031,37.394032],[-118.782646,37.382708],[-118.779547,37.38159],[-118.777513,37.375214],[-118.773329,37.374933],[-118.769735,37.368773],[-118.768611,37.359834],[-118.778235,37.35833],[-118.784206,37.352352],[-118.786736,37.34338],[-118.778764,37.334267],[-118.774354,37.334802],[-118.757855,37.32884],[-118.747233,37.32217],[-118.740026,37.315237],[-118.732965,37.317891],[-118.728754,37.323002],[-118.716016,37.328208],[-118.709648,37.321912],[-118.706227,37.314071],[-118.694883,37.301781],[-118.690245,37.294308],[-118.68522,37.290468],[-118.6821,37.280473],[-118.676493,37.275488],[-118.675541,37.271214],[-118.665167,37.261009],[-118.675347,37.248831],[-118.677995,37.248877],[-118.684611,37.242819],[-118.682249,37.233983],[-118.686424,37.227575],[-118.680788,37.222925],[-118.679102,37.214452],[-118.675568,37.213777],[-118.681349,37.204438],[-118.679723,37.201568],[-118.666755,37.190031],[-118.667138,37.182449],[-118.66424,37.178145],[-118.666912,37.17279],[-118.672282,37.168487],[-118.666501,37.161388],[-118.667187,37.15464],[-118.656704,37.14721],[-118.654593,37.141826],[-118.646527,37.140782],[-118.639905,37.137245],[-118.613672,37.143001],[-118.600117,37.136596],[-118.592661,37.138147],[-118.586051,37.124934],[-118.583087,37.122398],[-118.576307,37.123723],[-118.568569,37.122298],[-118.56841,37.115295],[-118.551008,37.113878],[-118.546195,37.115407],[-118.537956,37.113577],[-118.527136,37.104734],[-118.523756,37.099564],[-118.51186,37.092811],[-118.503103,37.095221],[-118.491733,37.086354],[-118.48658,37.077414],[-118.471143,37.072661],[-118.467332,37.066745],[-118.453111,37.067331],[-118.448956,37.069139],[-118.441286,37.063855],[-118.43605,37.057264],[-118.438233,37.05589],[-118.43497,37.049739],[-118.441729,37.045013],[-118.439764,37.040308],[-118.42276,37.025805],[-118.42311,37.016938],[-118.42798,37.011974],[-118.421111,37.007563],[-118.412248,36.998357],[-118.418933,36.994835],[-118.420133,36.989435],[-118.417133,36.985435],[-118.409133,36.980535],[-118.409533,36.975235],[-118.404433,36.972035],[-118.403333,36.959535],[-118.404733,36.957535],[-118.396632,36.957335],[-118.388432,36.945534],[-118.383032,36.934634],[-118.381532,36.925934],[-118.371032,36.908634],[-118.367432,36.907034],[-118.369832,36.900434],[-118.365031,36.890634],[-118.360831,36.887734],[-118.367131,36.881434],[-118.369863,36.870078],[-118.36616,36.8689],[-118.3664,36.863596],[-118.362647,36.861474],[-118.362169,36.844002],[-118.371494,36.836083],[-118.375931,36.834495],[-118.389758,36.834466],[-118.393686,36.8309],[-118.390122,36.819872],[-118.384681,36.815342],[-118.383877,36.810195],[-118.379585,36.808917],[-118.374225,36.800517],[-118.37279,36.794895],[-118.37683,36.785534],[-118.38023,36.782234],[-118.37603,36.778534],[-118.37643,36.772134],[-118.37203,36.767034],[-118.37473,36.764134],[-118.37173,36.761234],[-118.36933,36.750334],[-118.36213,36.747734],[-118.360586,36.744773]],[[-118.360586,36.744773],[-118.408182,36.744625],[-118.555487,36.744746],[-118.555031,36.739138],[-118.750915,36.739443],[-118.751033,36.739693],[-118.982441,36.741646],[-118.984779,36.657147],[-119.072072,36.65824],[-119.088295,36.657514],[-119.144136,36.658736],[-119.174791,36.658878],[-119.214393,36.659838],[-119.247889,36.661102],[-119.304625,36.660606],[-119.305102,36.573725],[-119.412931,36.57522],[-119.466322,36.575238],[-119.489911,36.556724],[-119.500966,36.54683],[-119.528571,36.525121],[-119.573194,36.488835]],[[-122.885352,39.580108],[-122.884497,39.610761],[-122.890413,39.622916],[-122.892676,39.708898],[-122.912876,39.708723],[-122.912516,39.748165],[-122.938413,39.748112],[-122.93743,39.754575],[-122.937654,39.798156]],[[-122.937654,39.798156],[-122.911748,39.798446],[-122.911794,39.799485],[-122.893347,39.799112],[-122.478638,39.799523],[-122.378663,39.79901],[-122.375089,39.799235],[-122.251099,39.799289],[-122.244147,39.798619],[-122.183495,39.797888],[-122.178272,39.797499],[-122.046471,39.797648]],[[-123.661363,41.38209],[-123.621355,41.382083],[-123.504292,41.382547],[-123.493634,41.377464],[-123.489411,41.37767],[-123.474085,41.366193],[-123.48251,41.35365],[-123.478462,41.34076],[-123.477958,41.328132],[-123.474001,41.326374],[-123.472265,41.321397],[-123.46344,41.31773],[-123.459592,41.310239],[-123.460335,41.303304],[-123.456883,41.300288],[-123.455475,41.292819],[-123.463241,41.286338],[-123.461649,41.282281],[-123.446812,41.276041],[-123.443821,41.273233],[-123.445071,41.268246],[-123.442051,41.260013],[-123.442776,41.249475],[-123.451489,41.242224],[-123.455356,41.236873],[-123.450899,41.231243],[-123.437619,41.226582],[-123.434238,41.22228],[-123.436582,41.217946],[-123.428399,41.204283],[-123.421711,41.198207],[-123.417095,41.197002],[-123.410706,41.181755],[-123.408291,41.179944]],[[-123.544458,40.001923],[-123.746256,40.001822],[-123.751136,40.002124],[-123.935473,40.001349],[-124.023938,40.001284]],[[-124.023938,40.001284],[-124.035904,40.013319],[-124.056408,40.024305],[-124.065069,40.024785],[-124.068908,40.021307],[-124.079983,40.029773],[-124.080709,40.06611],[-124.087086,40.078442],[-124.110549,40.103765],[-124.139952,40.11635],[-124.170767,40.124207],[-124.187874,40.130542],[-124.214895,40.160902],[-124.231095,40.171581],[-124.258405,40.184277],[-124.296497,40.208816],[-124.320912,40.226617],[-124.327691,40.23737],[-124.34307,40.243979],[-124.352715,40.250453],[-124.363414,40.260974],[-124.363634,40.276212],[-124.347853,40.314634],[-124.353124,40.331425],[-124.356595,40.335016],[-124.362796,40.350046],[-124.365357,40.374855],[-124.373599,40.392923],[-124.379082,40.398828],[-124.391496,40.407047],[-124.402623,40.422105],[-124.409591,40.438076],[-124.408601,40.443201],[-124.396642,40.462119],[-124.38494,40.48982],[-124.383224,40.499852],[-124.387023,40.504954],[-124.382816,40.519],[-124.379096,40.522865],[-124.363545,40.548698],[-124.329404,40.61643],[-124.315141,40.639526],[-124.312558,40.641333],[-124.289119,40.67963],[-124.248406,40.735166],[-124.228244,40.76939],[-124.201921,40.805111],[-124.176715,40.843618],[-124.158322,40.876069],[-124.137066,40.925732],[-124.118147,40.989263],[-124.112166,41.028168],[-124.125448,41.048504],[-124.138217,41.054342],[-124.151266,41.051101],[-124.153622,41.05355],[-124.154513,41.087159],[-124.160556,41.099011],[-124.159065,41.121957],[-124.165414,41.129822],[-124.163988,41.138675],[-124.158539,41.143021],[-124.149674,41.140845],[-124.1438,41.144686],[-124.122677,41.189726],[-124.106986,41.229678],[-124.106389,41.240682],[-124.092284,41.287695],[-124.079015,41.347135],[-124.072294,41.374844],[-124.063076,41.439579],[-124.065521,41.464739]],[[-116.106181,32.618641],[-116.105797,32.645405],[-116.105648,32.726494],[-116.103149,32.7265],[-116.103681,32.787115],[-116.103486,32.833918],[-116.102558,32.857759],[-116.103199,32.875055],[-116.10296,32.991391],[-116.103252,33.07467],[-116.08109,33.074833],[-116.080942,33.132189],[-116.081986,33.235047],[-116.085148,33.339216],[-116.085165,33.425932]],[[-116.085165,33.425932],[-115.998415,33.42654],[-115.874692,33.426481],[-115.77844,33.426981],[-115.729702,33.426973],[-115.682916,33.427397],[-115.568468,33.426885],[-115.467506,33.426992],[-115.467505,33.428402],[-115.342774,33.428068],[-115.251002,33.428217],[-115.101662,33.428274],[-115.063197,33.428103],[-115.057733,33.428629],[-114.929784,33.429904],[-114.830833,33.430094],[-114.830869,33.433708],[-114.766502,33.433741],[-114.627125,33.433554]],[[-114.627125,33.433554],[-114.62964,33.428138],[-114.643302,33.416745],[-114.64954,33.413633],[-114.658382,33.413036],[-114.673901,33.418299],[-114.687953,33.417944],[-114.695655,33.415127],[-114.701732,33.408388],[-114.710878,33.407254],[-114.720065,33.407891],[-114.725282,33.405048],[-114.722872,33.398779],[-114.713602,33.388257],[-114.708408,33.384147],[-114.707348,33.376628],[-114.699053,33.361148],[-114.698035,33.352442],[-114.700938,33.337014],[-114.705241,33.327767],[-114.710792,33.320607],[-114.723623,33.31211],[-114.731223,33.302434],[-114.723259,33.288079],[-114.717875,33.285157],[-114.694449,33.279786],[-114.684363,33.276025],[-114.677032,33.27017],[-114.672401,33.26047],[-114.674491,33.255597],[-114.688205,33.247966],[-114.689421,33.24525],[-114.682731,33.234918],[-114.674479,33.225504],[-114.673715,33.219245],[-114.678749,33.203448],[-114.67519,33.188179],[-114.675831,33.18152],[-114.680248,33.169717],[-114.678729,33.162948],[-114.687074,33.142196],[-114.696829,33.131209],[-114.703682,33.113769],[-114.707896,33.097432],[-114.706488,33.08816],[-114.68902,33.084036],[-114.68912,33.076122],[-114.686991,33.070969],[-114.674296,33.057171],[-114.675104,33.047532],[-114.670803,33.037984],[-114.662317,33.032671],[-114.657827,33.033825],[-114.649001,33.046763],[-114.64598,33.048903],[-114.639553,33.045291],[-114.628293,33.031052],[-114.618788,33.027202],[-114.601014,33.02541],[-114.589778,33.026228],[-114.584765,33.028231],[-114.578287,33.035375],[-114.571653,33.036624],[-114.553189,33.033974],[-114.538459,33.033422],[-114.52013,33.029984],[-114.511343,33.023455],[-114.50613,33.01701],[-114.499797,33.003905],[-114.495712,32.980076],[-114.492938,32.971781],[-114.490129,32.969885],[-114.481315,32.972064],[-114.476156,32.975168],[-114.469039,32.972295],[-114.46773,32.956323],[-114.470833,32.949333],[-114.478456,32.940555],[-114.48092,32.935252],[-114.47664,32.923628],[-114.464448,32.913129],[-114.463127,32.901884],[-114.465546,32.874809],[-114.468971,32.845155],[-114.494116,32.823288],[-114.510217,32.816417],[-114.515389,32.811439],[-114.522031,32.801675],[-114.528849,32.796307],[-114.531669,32.791185],[-114.532432,32.776923],[-114.528443,32.767276],[-114.526856,32.757094],[-114.539093,32.756949],[-114.539224,32.749812],[-114.564447,32.749554],[-114.564508,32.742298],[-114.581736,32.742321],[-114.581784,32.734946],[-114.612697,32.734516],[-114.615585,32.728446],[-114.65826,32.733799],[-114.667493,32.734226],[-114.688779,32.737675],[-114.701918,32.745548],[-114.714522,32.73039],[-114.719633,32.718763],[-115.000802,32.699676],[-115.465164,32.6671],[-116.04662,32.623353],[-116.106181,32.618641]],[[-117.632996,35.797251],[-117.849832,35.798051],[-117.924459,35.798149],[-117.92312,35.786812],[-117.938386,35.786765],[-118.000908,35.789488],[-118.008043,35.789161]],[[-118.008043,35.789161],[-118.009376,35.795311],[-118.007377,35.798841],[-118.01048,35.804386],[-118.007479,35.810002],[-118.007727,35.817083],[-118.000461,35.82028],[-117.998887,35.823762],[-118.006195,35.829037],[-118.002913,35.84129],[-118.005435,35.843274],[-118.004784,35.851265],[-118.00654,35.85484],[-118.005489,35.862699],[-117.998258,35.868782],[-117.993657,35.869611],[-117.989548,35.865661],[-117.980761,35.867515],[-117.982871,35.874947],[-117.988802,35.879769],[-117.989012,35.884116],[-117.984692,35.887721],[-117.982473,35.895796],[-117.987074,35.899247],[-117.985497,35.905813],[-117.989015,35.907898],[-117.990046,35.915919],[-117.983287,35.926563],[-117.985382,35.934144],[-117.991944,35.943771],[-117.998596,35.946272],[-118.006882,35.946483],[-118.011072,35.954601],[-118.016791,35.954551],[-118.01824,35.960977],[-118.012433,35.969724],[-118.014567,35.972891],[-118.010095,35.977617],[-118.004025,35.977826],[-118.003577,35.983718],[-118.006235,35.989757],[-118.010672,35.991744],[-118.012077,35.998305],[-118.019011,36.003344],[-118.033611,36.008944],[-118.037612,36.029743],[-118.041412,36.029844],[-118.039512,36.034243],[-118.046312,36.042943],[-118.042712,36.048543],[-118.051713,36.059543],[-118.051213,36.073443],[-118.049813,36.076742],[-118.052813,36.085642],[-118.057613,36.091642],[-118.063113,36.089242],[-118.067313,36.093442],[-118.066214,36.103942],[-118.068014,36.109842],[-118.064914,36.110342],[-118.068314,36.125541],[-118.071614,36.129241],[-118.073614,36.139041],[-118.071514,36.143341],[-118.060414,36.149741],[-118.059314,36.158741],[-118.062614,36.16204],[-118.059514,36.16544],[-118.062015,36.17424],[-118.070015,36.17864],[-118.073715,36.18944],[-118.085915,36.19754],[-118.090715,36.19734],[-118.094616,36.204939],[-118.101916,36.208839],[-118.106916,36.216039],[-118.109216,36.225539],[-118.105116,36.233139],[-118.112216,36.240039],[-118.114416,36.247838],[-118.119366,36.255561],[-118.117385,36.271165],[-118.121969,36.277699],[-118.127147,36.279656],[-118.12502,36.286744],[-118.127008,36.300223],[-118.121117,36.301138],[-118.121617,36.306837],[-118.114577,36.306984],[-118.110417,36.309837],[-118.114164,36.319261],[-118.107553,36.325607],[-118.097691,36.331099],[-118.101817,36.339337],[-118.100317,36.346137],[-118.105418,36.348237],[-118.120818,36.350237],[-118.131118,36.370736],[-118.141018,36.371636],[-118.144118,36.377036],[-118.153118,36.379536],[-118.156118,36.387336],[-118.162919,36.389436],[-118.160019,36.393836],[-118.146219,36.398636],[-118.140319,36.403536],[-118.137419,36.415336],[-118.141219,36.420936],[-118.154219,36.427136],[-118.156519,36.432436],[-118.174819,36.426736],[-118.194219,36.427236],[-118.203719,36.431236],[-118.209819,36.430336],[-118.21442,36.434336],[-118.20962,36.442136],[-118.21442,36.448736],[-118.21592,36.456736],[-118.22252,36.462735],[-118.23022,36.464535],[-118.24002,36.477335],[-118.24992,36.482435],[-118.24892,36.486535],[-118.23502,36.493735],[-118.241371,36.499935],[-118.238121,36.505835],[-118.239421,36.509235],[-118.238821,36.523635],[-118.246721,36.521435],[-118.250922,36.525635],[-118.248622,36.532735],[-118.252022,36.542135],[-118.258422,36.543335],[-118.265323,36.551535],[-118.274923,36.550535],[-118.279423,36.555135],[-118.290523,36.558535],[-118.292424,36.569035],[-118.289824,36.573235],[-118.294124,36.576335],[-118.288024,36.583734],[-118.289024,36.590734],[-118.278024,36.592334],[-118.274624,36.597334],[-118.281625,36.604534],[-118.290825,36.603734],[-118.297025,36.607334],[-118.301025,36.612534],[-118.301925,36.618134],[-118.310325,36.622234],[-118.311026,36.624934],[-118.321326,36.627434],[-118.320326,36.637234],[-118.325226,36.647134],[-118.337579,36.654801],[-118.335627,36.661634],[-118.329353,36.666566],[-118.333427,36.671434],[-118.347527,36.672334],[-118.347527,36.676034],[-118.353328,36.683934],[-118.364228,36.687935],[-118.366253,36.69171],[-118.358828,36.695634],[-118.351728,36.694834],[-118.346728,36.696534],[-118.341328,36.702134],[-118.335028,36.705134],[-118.336929,36.719934],[-118.339629,36.729034],[-118.342429,36.730434],[-118.350929,36.740734],[-118.360586,36.744773]],[[-118.775014,37.463052],[-118.663155,37.463038],[-118.589972,37.46326],[-118.515593,37.462676],[-118.456037,37.463024],[-118.405109,37.462833],[-118.129109,37.462913],[-117.916861,37.465238],[-117.903893,37.464816],[-117.832726,37.464929]],[[-117.832726,37.464929],[-117.712358,37.374931],[-117.68061,37.353399],[-117.581418,37.278936],[-117.540885,37.249931],[-117.500909,37.220282],[-117.500117,37.22038],[-117.375905,37.126843],[-117.266046,37.04491],[-117.244917,37.030244],[-117.131975,36.945777],[-117.066728,36.896354],[-117.000895,36.847694],[-116.541983,36.499952],[-116.500882,36.468223],[-116.488233,36.459097],[-116.38034,36.374955],[-116.375875,36.372562],[-116.250869,36.276979],[-116.097216,36.158346],[-116.093601,36.155805],[-115.892975,35.999967],[-115.852908,35.96966],[-115.750844,35.889287],[-115.669005,35.826515],[-115.64802,35.809629]],[[-117.667292,34.822526],[-117.774368,34.823301],[-118.023406,34.822163],[-118.175871,34.820466],[-118.220048,34.820138],[-118.290456,34.820103],[-118.431609,34.818736],[-118.489589,34.81785],[-118.55904,34.818341],[-118.563118,34.818025],[-118.627244,34.818169],[-118.766882,34.81799],[-118.820837,34.817475],[-118.854253,34.817772],[-118.854576,34.803027],[-118.877289,34.803212],[-118.88253,34.807662],[-118.884642,34.813323],[-118.881729,34.817802],[-118.894474,34.817972],[-118.887362,34.801898],[-118.881364,34.790629]],[[-119.472754,34.901174],[-119.472515,34.995652],[-119.472719,35.076885],[-119.490709,35.077208],[-119.490632,35.091805],[-119.560975,35.087673],[-119.553641,35.179975],[-119.571259,35.180292],[-119.667056,35.174809],[-119.666663,35.262527],[-119.809449,35.263584],[-119.809346,35.350865],[-119.880172,35.351211],[-119.880045,35.439133],[-119.997392,35.439495],[-119.997382,35.468702],[-120.015659,35.469039],[-120.014602,35.483652],[-120.033314,35.483648],[-120.033241,35.498642],[-120.05105,35.498627],[-120.051237,35.512695],[-120.068905,35.512779],[-120.068657,35.52632],[-120.086674,35.526554],[-120.085922,35.614524],[-120.125898,35.614228],[-120.193918,35.614359],[-120.193892,35.726513],[-120.194146,35.789204]],[[-120.194146,35.789204],[-119.983358,35.789378],[-119.948098,35.78954],[-119.888473,35.78895],[-119.869059,35.789225],[-119.754772,35.790003],[-119.750971,35.790216],[-119.646519,35.790424],[-119.625958,35.789494],[-119.574017,35.789824],[-119.538116,35.789567]],[[-119.538116,35.789567],[-119.474521,35.790013],[-119.471933,35.789714],[-119.393047,35.790142],[-119.376068,35.78974],[-119.355614,35.790278],[-119.071208,35.790771],[-118.803729,35.790347],[-118.629975,35.78958],[-118.622449,35.789831],[-118.504002,35.789825],[-118.469424,35.792634],[-118.407663,35.791328],[-118.375916,35.790224],[-118.366921,35.790609],[-118.318618,35.79031],[-118.195464,35.790689],[-118.067719,35.791537],[-118.008043,35.789161]],[[-120.194146,35.789204],[-120.213979,35.789276]],[[-120.213979,35.789276],[-120.216551,35.803642],[-120.219516,35.807098],[-120.218086,35.814297],[-120.220667,35.819542],[-120.238915,35.825751],[-120.244534,35.823988],[-120.249836,35.829936],[-120.255088,35.84258],[-120.259302,35.845053],[-120.256267,35.855133],[-120.250978,35.857285],[-120.245988,35.864135],[-120.240246,35.865928],[-120.245214,35.873119],[-120.243275,35.877669],[-120.262692,35.89609],[-120.267858,35.898426],[-120.27576,35.905881],[-120.287401,35.90552],[-120.295157,35.907543],[-120.315068,35.907186]],[[-119.573194,36.488835],[-119.527194,36.488886],[-119.528286,36.487545],[-119.528792,36.401465],[-119.474892,36.400953],[-119.475454,36.351179],[-119.475234,36.313373],[-119.474367,36.297889],[-119.474607,36.269025],[-119.511594,36.269138],[-119.529358,36.26985],[-119.529141,36.137914],[-119.53638,36.137893],[-119.536108,36.00725],[-119.536241,35.963409],[-119.537379,35.963347],[-119.537694,35.934784],[-119.538116,35.789567]],[[-118.524531,32.895488],[-118.535823,32.90628],[-118.551134,32.945155],[-118.560887,32.957891],[-118.573522,32.969183],[-118.586928,33.008281],[-118.596037,33.015357],[-118.606559,33.01469],[-118.605534,33.030999],[-118.594033,33.035951],[-118.57516,33.033961],[-118.564445,33.024914],[-118.564527,33.018637],[-118.559171,33.006291],[-118.540069,32.980933],[-118.529228,32.970921],[-118.496811,32.933847],[-118.485288,32.923545],[-118.460623,32.90951],[-118.446771,32.895424],[-118.369984,32.839273],[-118.353504,32.821962],[-118.356541,32.817311],[-118.36053,32.819921],[-118.379968,32.824545],[-118.394565,32.823978],[-118.401268,32.820338],[-118.425634,32.800595],[-118.428372,32.806872],[-118.44492,32.820593],[-118.476074,32.841754],[-118.487908,32.84459],[-118.496298,32.851572],[-118.506902,32.868503],[-118.507193,32.876264],[-118.524641,32.893175],[-118.524531,32.895488]],[[-118.315346,33.342032],[-118.310213,33.335795],[-118.303174,33.320264],[-118.305084,33.310323],[-118.316787,33.301137],[-118.325244,33.299075],[-118.343249,33.305234],[-118.360332,33.31533],[-118.374768,33.320065],[-118.402941,33.320901],[-118.440047,33.318638],[-118.456309,33.32182],[-118.465368,33.326056],[-118.481886,33.344123],[-118.48877,33.356649],[-118.482609,33.369914],[-118.478465,33.38632],[-118.484949,33.412131],[-118.48875,33.419826],[-118.503952,33.424234],[-118.515914,33.422417],[-118.516267,33.425075],[-118.52323,33.430733],[-118.53738,33.434608],[-118.558715,33.433419],[-118.563442,33.434381],[-118.570927,33.439351],[-118.575901,33.448261],[-118.593969,33.467198],[-118.601185,33.469853],[-118.60403,33.47654],[-118.598783,33.477939],[-118.585936,33.473819],[-118.54453,33.474119],[-118.530702,33.468071],[-118.500212,33.449592],[-118.499669,33.447879],[-118.48557,33.446213],[-118.477646,33.448392],[-118.445812,33.428907],[-118.423576,33.427258],[-118.382037,33.409883],[-118.370323,33.409285],[-118.368301,33.40711],[-118.365094,33.388374],[-118.32446,33.348782],[-118.315346,33.342032]],[[-117.783287,33.946411],[-117.848651,33.946864],[-117.870152,33.945832],[-117.976498,33.94605],[-117.976593,33.90281],[-117.985481,33.902769],[-117.98535,33.895603],[-117.993996,33.895412],[-117.994057,33.888111],[-118.002694,33.888112],[-118.002594,33.880909],[-118.011398,33.880913],[-118.011398,33.873314],[-118.028679,33.873219],[-118.028581,33.866246],[-118.037598,33.866013],[-118.041748,33.858723],[-118.046188,33.858768],[-118.046082,33.853611],[-118.054723,33.849821],[-118.058918,33.846121],[-118.058988,33.835207],[-118.063499,33.831516],[-118.063162,33.81961],[-118.073143,33.81459],[-118.084377,33.803433],[-118.086397,33.796716],[-118.098999,33.776817],[-118.09371,33.768333],[-118.092037,33.759563],[-118.093755,33.757509],[-118.114082,33.746528],[-118.116703,33.743549]],[[-118.116703,33.743549],[-118.132698,33.753217],[-118.1569,33.760317],[-118.1755,33.763617],[-118.180831,33.763072],[-118.187701,33.749218],[-118.1837,33.736118],[-118.181367,33.717367],[-118.207476,33.716905],[-118.258687,33.703741],[-118.277208,33.707091],[-118.297104,33.708319],[-118.317205,33.712818],[-118.354705,33.732317],[-118.360505,33.736817],[-118.385006,33.741417],[-118.396606,33.735917],[-118.411211,33.741985],[-118.428407,33.774715],[-118.423407,33.782015],[-118.405007,33.800215],[-118.394307,33.804315],[-118.391507,33.815415],[-118.392107,33.840915],[-118.412694,33.883885],[-118.44241,33.940312],[-118.460611,33.969111],[-118.484212,33.99771],[-118.502813,34.015509],[-118.519514,34.027509],[-118.543115,34.038508],[-118.569235,34.04164],[-118.603572,34.039048],[-118.609652,34.036424],[-118.668358,34.038887],[-118.67543,34.037479],[-118.679366,34.033255],[-118.706215,34.029383],[-118.732391,34.032743],[-118.744952,34.032103],[-118.783433,34.021543],[-118.787094,34.019545],[-118.805114,34.001239],[-118.84038,34.027527],[-118.854653,34.034215],[-118.896159,34.039207],[-118.928048,34.045847],[-118.938081,34.043383],[-118.944887,34.04534]],[[-120.541696,37.044505],[-120.476692,37.09639],[-120.469779,37.094336],[-120.465508,37.097777],[-120.456084,37.100343],[-120.452858,37.098873],[-120.444226,37.103142],[-120.427787,37.106252],[-120.420654,37.109828],[-120.406777,37.110854],[-120.404103,37.115704],[-120.388827,37.120984],[-120.384886,37.124589],[-120.37899,37.124347],[-120.372231,37.121133],[-120.363315,37.119712],[-120.357535,37.122475],[-120.341204,37.124596],[-120.328332,37.131089],[-120.324544,37.136382],[-120.31362,37.138815],[-120.310891,37.141138],[-120.303643,37.141317],[-120.29846,37.147427],[-120.290554,37.152382],[-120.274108,37.152144],[-120.247906,37.157965],[-120.245169,37.156987],[-120.232277,37.159922],[-120.227286,37.1634],[-120.219503,37.162155],[-120.213663,37.164321],[-120.202133,37.162683],[-120.194794,37.163151],[-120.187594,37.160252],[-120.176489,37.162265],[-120.170226,37.165982],[-120.164576,37.162698],[-120.152954,37.166021],[-120.142563,37.164065],[-120.132811,37.167359],[-120.120096,37.165532],[-120.103327,37.16774],[-120.094743,37.172554],[-120.085173,37.173394],[-120.076685,37.176484],[-120.064678,37.177816],[-120.052055,37.183108]],[[-120.052055,37.183108],[-119.876342,37.325332],[-119.761809,37.417114],[-119.747102,37.417748],[-119.651191,37.417832],[-119.651003,37.461353],[-119.615495,37.461522],[-119.615148,37.494681],[-119.58422,37.494696],[-119.583585,37.560335],[-119.451199,37.665689],[-119.308995,37.777986]],[[-119.308995,37.777986],[-119.308283,37.775728],[-119.293382,37.767929],[-119.294082,37.759729],[-119.289082,37.755029],[-119.290682,37.749329],[-119.288381,37.74503],[-119.268979,37.73923]],[[-119.268979,37.73923],[-119.264079,37.732931],[-119.261179,37.732731],[-119.260078,37.726631],[-119.255178,37.725331],[-119.250978,37.73016],[-119.239264,37.727467],[-119.230327,37.720567],[-119.229992,37.717406],[-119.2161,37.714518],[-119.207328,37.72406],[-119.198486,37.736657],[-119.191536,37.737815],[-119.177103,37.734776],[-119.170115,37.738287],[-119.164075,37.736123],[-119.157333,37.736529],[-119.149593,37.732895],[-119.140774,37.733251],[-119.138032,37.736126],[-119.132653,37.733929],[-119.123735,37.733343],[-119.109694,37.724735],[-119.106766,37.719269],[-119.092811,37.703531],[-119.087839,37.702376],[-119.080711,37.695526],[-119.065166,37.684556],[-119.062029,37.67654],[-119.062441,37.671096],[-119.059638,37.665047],[-119.0614,37.657834],[-119.054331,37.651184],[-119.052,37.643996],[-119.042494,37.635231],[-119.032565,37.630535],[-119.031075,37.626719],[-119.031966,37.613836],[-119.034365,37.603536],[-119.026964,37.595737],[-119.022363,37.585737]],[[-122.418698,37.852717],[-122.434403,37.852434],[-122.443302,37.855448],[-122.446316,37.861046],[-122.438565,37.868367],[-122.430958,37.872242],[-122.421439,37.869969]],[[-122.47986,37.825641],[-122.483483,37.826728],[-122.505383,37.822128]],[[-122.522836,37.824717],[-122.529452,37.81489],[-122.537285,37.830328],[-122.548986,37.836227],[-122.561487,37.851827],[-122.584289,37.859227],[-122.60129,37.875126],[-122.627113,37.88608],[-122.639977,37.897349],[-122.656519,37.904519],[-122.682171,37.90645],[-122.693569,37.901171],[-122.70264,37.89382],[-122.727297,37.904626],[-122.732898,37.920225],[-122.736898,37.925825],[-122.754606,37.935527],[-122.766138,37.938004],[-122.783244,37.951334],[-122.791739,37.969422],[-122.797405,37.976657],[-122.821383,37.996735],[-122.856573,38.016717],[-122.882114,38.025273],[-122.939711,38.031908],[-122.956811,38.02872],[-122.972378,38.020247],[-122.981776,38.009119],[-122.982386,38.004274],[-122.97439,37.992429],[-123.024066,37.994878],[-123.020562,37.999544],[-123.011533,38.003438],[-122.99242,38.041758],[-122.960889,38.112962],[-122.952086,38.138562],[-122.949074,38.15406],[-122.949626,38.164041],[-122.953629,38.17567],[-122.965408,38.187113],[-122.96637,38.198514],[-122.968112,38.202428],[-122.991953,38.233185],[-122.993235,38.239686],[-122.987149,38.237538],[-122.968569,38.242879],[-122.967203,38.250691],[-122.977082,38.267902],[-122.986319,38.273164],[-122.994603,38.283096],[-122.997106,38.289458],[-123.002911,38.295708]],[[-123.002911,38.295708],[-122.993579,38.300079],[-122.994958,38.306012],[-122.974868,38.311471],[-122.969049,38.310798],[-122.966124,38.31697],[-122.96129,38.31654],[-122.948767,38.311657],[-122.943601,38.312563],[-122.936696,38.310453],[-122.925636,38.312736],[-122.921588,38.308554],[-122.916601,38.31321],[-122.920959,38.316805],[-122.916074,38.320257],[-122.906661,38.319935],[-122.910882,38.316865],[-122.909237,38.314268],[-122.901726,38.316943],[-122.874406,38.298088],[-122.811971,38.256129],[-122.7399,38.207018],[-122.723499,38.207147],[-122.714338,38.201222],[-122.701393,38.196099],[-122.689308,38.194836],[-122.680454,38.189616],[-122.667158,38.189697],[-122.659439,38.186976],[-122.648986,38.181077],[-122.628128,38.178915],[-122.625408,38.182394],[-122.61547,38.182408],[-122.612504,38.180591],[-122.603505,38.180852],[-122.600917,38.185263],[-122.592815,38.188783],[-122.591145,38.185992],[-122.582198,38.188017],[-122.578201,38.183583],[-122.570693,38.183518],[-122.570732,38.187142],[-122.565093,38.182217],[-122.568384,38.176836],[-122.564463,38.175081],[-122.563193,38.169318],[-122.553292,38.169977],[-122.55196,38.16815],[-122.558435,38.161974],[-122.549615,38.15729],[-122.545376,38.158733],[-122.534828,38.149202],[-122.522223,38.142405],[-122.514014,38.133783],[-122.507926,38.118098],[-122.50282,38.113002],[-122.490727,38.109755]],[[-122.490727,38.109755],[-122.489974,38.096961],[-122.486702,38.090088],[-122.483757,38.071762],[-122.492265,38.056381],[-122.499465,38.032165],[-122.497828,38.019402],[-122.494556,38.015148],[-122.481466,38.007621],[-122.462812,38.003367],[-122.452995,37.996167],[-122.448413,37.988313],[-122.448413,37.984713],[-122.456595,37.978823],[-122.462485,37.981441],[-122.471975,37.981768],[-122.490302,37.964751],[-122.487684,37.948716],[-122.480484,37.945443],[-122.479175,37.941516],[-122.48572,37.937589],[-122.499465,37.939225],[-122.503064,37.936607],[-122.503064,37.928753],[-122.493574,37.921881],[-122.486375,37.921881],[-122.478193,37.918608],[-122.471975,37.910427],[-122.472303,37.902573],[-122.458558,37.894064],[-122.448413,37.89341],[-122.43925,37.88392],[-122.438268,37.880974],[-122.45005,37.871157],[-122.462158,37.868866],[-122.474266,37.874429],[-122.480811,37.873448],[-122.483102,37.863957],[-122.476536,37.832812]],[[-120.052055,37.183108],[-120.056289,37.186615],[-120.062214,37.197984],[-120.080851,37.21293],[-120.085878,37.218743],[-120.093189,37.222617],[-120.105605,37.225026],[-120.112919,37.228563],[-120.126005,37.232272],[-120.143826,37.239192],[-120.171509,37.256688],[-120.177636,37.261526],[-120.183757,37.270492],[-120.186637,37.28028],[-120.182724,37.291405],[-120.187709,37.301072],[-120.203531,37.313321],[-120.209028,37.324934],[-120.216505,37.337336],[-120.245372,37.376444],[-120.247011,37.380216],[-120.254696,37.385406],[-120.26601,37.400607],[-120.275816,37.418836],[-120.283398,37.424363],[-120.284428,37.431685],[-120.278004,37.436499],[-120.274965,37.443634],[-120.278149,37.449183],[-120.279579,37.457947],[-120.29503,37.480012],[-120.300223,37.48429],[-120.299172,37.488845],[-120.311493,37.497228],[-120.316564,37.505592],[-120.316462,37.514337],[-120.319197,37.521335],[-120.38767,37.633364]],[[-120.38767,37.633364],[-120.387613,37.633704]],[[-120.387613,37.633704],[-120.375144,37.652208],[-120.379877,37.657056],[-120.384346,37.658],[-120.395345,37.672256],[-120.392504,37.675355],[-120.391931,37.683559],[-120.386636,37.684842],[-120.379704,37.680986],[-120.369795,37.679631],[-120.366731,37.680898],[-120.362464,37.672819],[-120.355417,37.6755],[-120.347989,37.671232],[-120.343258,37.663126],[-120.335261,37.658959],[-120.332545,37.653321],[-120.325943,37.648966],[-120.309838,37.655977],[-120.312313,37.662947],[-120.306407,37.665759],[-120.310447,37.673125],[-120.330215,37.698073],[-120.333157,37.706559],[-120.338093,37.70911],[-120.339805,37.717094],[-120.345437,37.724787],[-120.342803,37.726983],[-120.335571,37.726481],[-120.3325,37.729368],[-120.326116,37.726066],[-120.320841,37.726158],[-120.315468,37.733762],[-120.307505,37.735614],[-120.295868,37.733394],[-120.286494,37.729449],[-120.283804,37.733638],[-120.28664,37.740273],[-120.282617,37.745277],[-120.276083,37.738968],[-120.257895,37.735154],[-120.26168,37.740642],[-120.253332,37.750735],[-120.248244,37.749601],[-120.239687,37.75349],[-120.240906,37.758495],[-120.238232,37.765264],[-120.230658,37.763789],[-120.227015,37.760371],[-120.224308,37.763527],[-120.216879,37.762849],[-120.21616,37.765249],[-120.209561,37.763174],[-120.201384,37.763152],[-120.198102,37.769394],[-120.189081,37.767852],[-120.183529,37.774946],[-120.188687,37.780222],[-120.183566,37.782892],[-120.180496,37.788997],[-120.182597,37.795245],[-120.178371,37.794662],[-120.17431,37.799342],[-120.169474,37.79195],[-120.161812,37.787406],[-120.153835,37.788364],[-120.142376,37.783267],[-120.127226,37.781566],[-120.123926,37.785702],[-120.119384,37.785864],[-120.119758,37.789662],[-120.106197,37.799031],[-120.10074,37.800665],[-120.098748,37.807728],[-120.093663,37.808216],[-120.089075,37.812259],[-120.090863,37.815806],[-120.089431,37.822827],[-120.079977,37.828715],[-120.065153,37.822896],[-120.061546,37.826035],[-120.057506,37.823879],[-120.055319,37.812989],[-120.04889,37.811199],[-120.046355,37.813301],[-120.034774,37.808604],[-120.026967,37.811946],[-120.014435,37.804491],[-120.001016,37.798726],[-119.998416,37.796226],[-119.964915,37.782826],[-119.955015,37.773226],[-119.947615,37.770426],[-119.944814,37.764926],[-119.938414,37.763026],[-119.929314,37.764826],[-119.915213,37.762626],[-119.907013,37.757926],[-119.892512,37.762226],[-119.884912,37.760726],[-119.872912,37.766626],[-119.875712,37.772226],[-119.864311,37.772025],[-119.860611,37.764426],[-119.852378,37.758203],[-119.84061,37.765025],[-119.842211,37.769125],[-119.837909,37.770226],[-119.82791,37.768225],[-119.82731,37.764425],[-119.82071,37.759825],[-119.812909,37.758325],[-119.809409,37.755025],[-119.803808,37.759599],[-119.786108,37.765825],[-119.781108,37.763425],[-119.772006,37.766728],[-119.769006,37.771129],[-119.751007,37.773324],[-119.746007,37.782924],[-119.738807,37.784524],[-119.733906,37.787924],[-119.722706,37.787624],[-119.716806,37.791724],[-119.709805,37.793524],[-119.697905,37.789624],[-119.691404,37.799524],[-119.667203,37.801224],[-119.659903,37.809424],[-119.653903,37.810423],[-119.650903,37.820823],[-119.653503,37.828823],[-119.657703,37.834123],[-119.646203,37.846823],[-119.638102,37.849123],[-119.628602,37.847223],[-119.622955,37.848466],[-119.619107,37.853196],[-119.609606,37.853369],[-119.591951,37.866115],[-119.5845,37.876222],[-119.587301,37.878722],[-119.586401,37.890122],[-119.581601,37.893722],[-119.5741,37.895622],[-119.5659,37.901722],[-119.5586,37.903122],[-119.5567,37.900922],[-119.533999,37.902922],[-119.533599,37.897122],[-119.529798,37.891122],[-119.523798,37.886722],[-119.515297,37.884422],[-119.506597,37.874522],[-119.504697,37.869622],[-119.492296,37.863123],[-119.484095,37.864423],[-119.476895,37.859623],[-119.474295,37.855623],[-119.469595,37.863523],[-119.462794,37.868423],[-119.451494,37.871023],[-119.441993,37.867523],[-119.442692,37.859824],[-119.434192,37.865124],[-119.426792,37.866724],[-119.421991,37.857724],[-119.415491,37.854624],[-119.407291,37.854924],[-119.405091,37.848225],[-119.40469,37.837225],[-119.40059,37.834725],[-119.392589,37.837925],[-119.383722,37.836473],[-119.379287,37.840951],[-119.37391,37.839845],[-119.372602,37.832883],[-119.352287,37.826326],[-119.351187,37.823826],[-119.354987,37.811826],[-119.348987,37.810826],[-119.346686,37.806327],[-119.339386,37.805527],[-119.331885,37.799227],[-119.326985,37.799427],[-119.321785,37.794027],[-119.312284,37.794128],[-119.310484,37.785628],[-119.307284,37.782828],[-119.308995,37.777986]],[[-122.934013,39.978131],[-122.926897,39.971275],[-122.924934,39.9594],[-122.92738,39.956327],[-122.926821,39.945071],[-122.913157,39.93581],[-122.912599,39.931484],[-122.920623,39.92893],[-122.920524,39.916487],[-122.928296,39.912542],[-122.949997,39.90781],[-122.947732,39.894192],[-122.949584,39.889752],[-122.949647,39.879901],[-122.953306,39.872653],[-122.950601,39.86913],[-122.955846,39.858531],[-122.95399,39.854685],[-122.960088,39.845245],[-122.956427,39.839211],[-122.946706,39.833469],[-122.947484,39.827649],[-122.943602,39.801652],[-122.937654,39.798156]],[[-122.821592,38.85014],[-122.994217,38.851325],[-123.006918,38.851247],[-123.026122,38.852837],[-123.080997,38.852438],[-123.08123,38.838406],[-123.118025,38.839551],[-123.136636,38.839448],[-123.136253,38.809136],[-123.142279,38.808875],[-123.214604,38.808871],[-123.271759,38.808399],[-123.28168,38.807503],[-123.368394,38.80664],[-123.368236,38.777066],[-123.431075,38.776619],[-123.497042,38.778604],[-123.499582,38.774093],[-123.507041,38.773532],[-123.509462,38.767856],[-123.515861,38.768158],[-123.520961,38.758575],[-123.533535,38.768408]],[[-123.533535,38.768408],[-123.541837,38.776764],[-123.571987,38.798189],[-123.579856,38.802835],[-123.58638,38.802857],[-123.600221,38.814115],[-123.605317,38.822765],[-123.638637,38.843865],[-123.647387,38.845472],[-123.652212,38.854582],[-123.654696,38.865638],[-123.659846,38.872529],[-123.688099,38.893594],[-123.71054,38.91323],[-123.725367,38.917438],[-123.72763,38.9295],[-123.726315,38.936367],[-123.738886,38.95412],[-123.729053,38.956667],[-123.721347,38.963879],[-123.711149,38.977316],[-123.6969,39.004401],[-123.69074,39.021293],[-123.690095,39.031157],[-123.693969,39.057363],[-123.713392,39.108422],[-123.721505,39.125327],[-123.735936,39.139644],[-123.737913,39.143442],[-123.742221,39.164885],[-123.76101,39.191595],[-123.765891,39.193657],[-123.774998,39.212083],[-123.777368,39.237214],[-123.787893,39.264327],[-123.798991,39.271355],[-123.803848,39.278771],[-123.801757,39.28353],[-123.803081,39.291747],[-123.811387,39.312825],[-123.808772,39.324368],[-123.817369,39.3388],[-123.822085,39.343857],[-123.826306,39.36871],[-123.822325,39.379987],[-123.821887,39.406809],[-123.81469,39.446538],[-123.795639,39.492215],[-123.78417,39.509419],[-123.778521,39.521478],[-123.766475,39.552803],[-123.76721,39.559852],[-123.787417,39.604552],[-123.78354,39.609517],[-123.782322,39.621486],[-123.78636,39.659932],[-123.792659,39.684122],[-123.808208,39.710715],[-123.824744,39.718128],[-123.829545,39.723071],[-123.835092,39.738768],[-123.838089,39.752409],[-123.83715,39.776232],[-123.839797,39.795637],[-123.851714,39.832041],[-123.853764,39.8341],[-123.881458,39.845422],[-123.907664,39.863028],[-123.915142,39.875313],[-123.915853,39.881114],[-123.930047,39.909697],[-123.954952,39.922373],[-123.962655,39.937635],[-123.980031,39.962458],[-123.99586,39.973045],[-124.023938,40.001284]],[[-120.918731,36.740381],[-120.933682,36.751895],[-120.993141,36.775824],[-121.000979,36.779444],[-121.051424,36.799799],[-121.090742,36.81613],[-121.10178,36.82014],[-121.141523,36.836656],[-121.143029,36.846302],[-121.152913,36.861912],[-121.152626,36.865351],[-121.164395,36.870265],[-121.169495,36.885322],[-121.174088,36.885711],[-121.184297,36.896385],[-121.183885,36.908096],[-121.188796,36.913238],[-121.198274,36.914338],[-121.208361,36.911529],[-121.216585,36.913558],[-121.221378,36.910301],[-121.224185,36.919921],[-121.230151,36.921241],[-121.234683,36.926894],[-121.230579,36.93849],[-121.225497,36.94483],[-121.218783,36.947767],[-121.211794,36.957113],[-121.215406,36.961248]],[[-121.215406,36.961248],[-121.224833,36.967433],[-121.232128,36.968892],[-121.245887,36.983036],[-121.245137,36.992922],[-121.241517,36.997381],[-121.233137,36.999346],[-121.237826,37.009961],[-121.233337,37.011746],[-121.245989,37.025575],[-121.248647,37.03368],[-121.241104,37.031714],[-121.236138,37.036945],[-121.224507,37.039743],[-121.225808,37.052071],[-121.223387,37.057507],[-121.213061,37.055098],[-121.208198,37.061289],[-121.209637,37.068243],[-121.215799,37.069223],[-121.222925,37.073814],[-121.224638,37.078943],[-121.235493,37.086234],[-121.241977,37.085128],[-121.245384,37.089501],[-121.243019,37.092711],[-121.230439,37.096942],[-121.230526,37.10477],[-121.217339,37.123042],[-121.221754,37.125904],[-121.222683,37.130828],[-121.226804,37.134774]],[[-121.226804,37.134774],[-121.222507,37.138378],[-121.089126,37.245827],[-121.067402,37.262166],[-121.062305,37.267037],[-121.016116,37.303788],[-121.001098,37.316857],[-120.972671,37.338697],[-120.964223,37.345782],[-120.976123,37.349575],[-120.980123,37.366822],[-120.973923,37.368069],[-120.977262,37.374123],[-120.9731,37.377595],[-120.98324,37.376436],[-120.98224,37.385637],[-120.993641,37.388037],[-120.98439,37.399366],[-120.940616,37.416676],[-120.936731,37.419496],[-120.88582,37.440382],[-120.870414,37.445495],[-120.854292,37.452342],[-120.841047,37.456438],[-120.81557,37.466963],[-120.786397,37.47776],[-120.62736,37.539743],[-120.599068,37.551052],[-120.514608,37.584179],[-120.38767,37.633364]],[[-119.268979,37.73923],[-119.261179,37.74103],[-119.254678,37.746631],[-119.254981,37.756329],[-119.250554,37.757291],[-119.24308,37.76913],[-119.23658,37.77363],[-119.23078,37.77443],[-119.22708,37.778429],[-119.22128,37.77913],[-119.21698,37.787729],[-119.21278,37.791729],[-119.20438,37.793229],[-119.20128,37.804329],[-119.204981,37.811529],[-119.216881,37.818328],[-119.213281,37.825028],[-119.203981,37.829828],[-119.20688,37.839927],[-119.196182,37.844028],[-119.201782,37.847528],[-119.210482,37.845628],[-119.216282,37.847728],[-119.213382,37.854827],[-119.214083,37.871527],[-119.206383,37.883327],[-119.200783,37.883227],[-119.201383,37.888026],[-119.206483,37.889226],[-119.210683,37.893926],[-119.210783,37.899426],[-119.219883,37.898626],[-119.226684,37.906626],[-119.237284,37.911326],[-119.250685,37.910326],[-119.263885,37.912225],[-119.265586,37.913825],[-119.263986,37.926525],[-119.280587,37.933825],[-119.287887,37.933024],[-119.295888,37.942724],[-119.308189,37.946724],[-119.313889,37.954323],[-119.31529,37.965323],[-119.32259,37.971023],[-119.31429,37.982623],[-119.318391,37.986423],[-119.309897,38.001163],[-119.307034,38.012322],[-119.308152,38.019492],[-119.30459,38.023891],[-119.309706,38.033921],[-119.313952,38.034535],[-119.310624,38.040248],[-119.31119,38.044756],[-119.322645,38.049865],[-119.324213,38.060937],[-119.327927,38.065703],[-119.334109,38.065244],[-119.33671,38.070393],[-119.349845,38.085566],[-119.357127,38.082977],[-119.365065,38.090201],[-119.371055,38.088595],[-119.374557,38.093524],[-119.380222,38.092546],[-119.382849,38.097703],[-119.387301,38.097846],[-119.397024,38.106821],[-119.402507,38.105551],[-119.41089,38.107686],[-119.423957,38.107438],[-119.428813,38.11556],[-119.440226,38.10487],[-119.440468,38.095678],[-119.445875,38.093059],[-119.44833,38.099157],[-119.454378,38.096068],[-119.463692,38.098335],[-119.4645,38.103589],[-119.457448,38.11055],[-119.462083,38.109108],[-119.471872,38.116089],[-119.469456,38.128283],[-119.488519,38.132175],[-119.489127,38.143439],[-119.496967,38.149297],[-119.495799,38.154984],[-119.501832,38.159264],[-119.507783,38.152637],[-119.50581,38.148435],[-119.50649,38.137113],[-119.515527,38.137354],[-119.525519,38.140797],[-119.531162,38.144486],[-119.547406,38.143977],[-119.545501,38.153056],[-119.557931,38.154719],[-119.564261,38.154063],[-119.566015,38.156963],[-119.576496,38.157661],[-119.581348,38.172503],[-119.578595,38.176853],[-119.586561,38.184839],[-119.591421,38.185089],[-119.598421,38.181697],[-119.609932,38.19043],[-119.617707,38.190501],[-119.627936,38.194898],[-119.632671,38.198858],[-119.630927,38.20394],[-119.626354,38.204665],[-119.627101,38.213199],[-119.623504,38.220396],[-119.624422,38.228673],[-119.614775,38.232717],[-119.609276,38.23237],[-119.604182,38.234961],[-119.604895,38.239198],[-119.614017,38.242804],[-119.621901,38.25279],[-119.613201,38.261416],[-119.62681,38.268062],[-119.637763,38.278386],[-119.642056,38.278178],[-119.651509,38.286462],[-119.643617,38.291661],[-119.644352,38.299602],[-119.642189,38.306986],[-119.644776,38.32164],[-119.639205,38.32688]],[[-119.585437,38.713212],[-119.494183,38.649852],[-119.450623,38.619965],[-119.375994,38.566793],[-119.370117,38.563281],[-119.333423,38.538328],[-119.279262,38.499914],[-119.250988,38.48078],[-119.234966,38.468997],[-119.125982,38.39317],[-119.097161,38.372853],[-119.082358,38.361267],[-119.030078,38.325181],[-119.000975,38.303675],[-118.949673,38.26894],[-118.922518,38.249919],[-118.859087,38.204808],[-118.771867,38.141871],[-118.746598,38.124926],[-118.714312,38.102185],[-118.62159,38.034389],[-118.571958,37.99993],[-118.500958,37.949019],[-118.250947,37.768616],[-118.052189,37.62493],[-118.039849,37.615245],[-117.975776,37.569293],[-117.904625,37.515836],[-117.875927,37.497267],[-117.832726,37.464929]],[[-121.644001,36.893996],[-121.641284,36.879826],[-121.642565,36.8737],[-121.622089,36.846203],[-121.5971,36.836849],[-121.574738,36.818052],[-121.548121,36.794479],[-121.505748,36.758909],[-121.481523,36.765447],[-121.474368,36.756672],[-121.476571,36.752342],[-121.471382,36.745449],[-121.466579,36.745556],[-121.46003,36.740942],[-121.458894,36.733829],[-121.452646,36.729209],[-121.45134,36.724793],[-121.461592,36.717638],[-121.483368,36.715499],[-121.484508,36.713062],[-121.469391,36.69077],[-121.469023,36.685434],[-121.460956,36.686687],[-121.456836,36.681964],[-121.44953,36.678761],[-121.444333,36.673148],[-121.431571,36.678728],[-121.425391,36.675159],[-121.415535,36.673058],[-121.409394,36.661505],[-121.408346,36.656659],[-121.401946,36.655424],[-121.386107,36.654904],[-121.378334,36.652861],[-121.366527,36.656558],[-121.357489,36.65081],[-121.350092,36.648357],[-121.341586,36.638009],[-121.342089,36.631354],[-121.335247,36.623476],[-121.318373,36.610026],[-121.318711,36.604854],[-121.323781,36.602367],[-121.324225,36.588436],[-121.32735,36.585886],[-121.32347,36.577869],[-121.33392,36.574404],[-121.331248,36.570504],[-121.33171,36.561946],[-121.328879,36.56146],[-121.328697,36.55474],[-121.313967,36.549968],[-121.305145,36.540744],[-121.30156,36.539243],[-121.295362,36.527129],[-121.307189,36.516812],[-121.306762,36.512174],[-121.310726,36.508749],[-121.311788,36.502736],[-121.309017,36.499568],[-121.299839,36.50564],[-121.284963,36.505697],[-121.281993,36.502706],[-121.26946,36.502043],[-121.257882,36.504535],[-121.254882,36.503511],[-121.244091,36.506911],[-121.239295,36.504782],[-121.236865,36.497623],[-121.23101,36.492035],[-121.23249,36.489409],[-121.228108,36.484599],[-121.230472,36.478557],[-121.226126,36.472497],[-121.216825,36.474035],[-121.209823,36.464804],[-121.19767,36.455065],[-121.197919,36.451716],[-121.193465,36.445751],[-121.11695,36.38519],[-121.040797,36.323969],[-121.040302,36.271058],[-121.036311,36.27518],[-121.029533,36.275624],[-121.025625,36.271404],[-121.02862,36.269797],[-121.027362,36.26008],[-121.018919,36.259643],[-121.015511,36.267905],[-121.010902,36.26522],[-121.010458,36.268847],[-121.004545,36.267071],[-121.00017,36.270807],[-120.992835,36.269904],[-120.987086,36.275741],[-120.988067,36.285226],[-120.982813,36.291169],[-120.974459,36.290518],[-120.964501,36.282653],[-120.959133,36.280732],[-120.953996,36.274634],[-120.939157,36.283463],[-120.941213,36.2866],[-120.934574,36.289332],[-120.936479,36.294152],[-120.933104,36.299768],[-120.925705,36.302135],[-120.923823,36.309935],[-120.919778,36.310984],[-120.911715,36.308263],[-120.910426,36.305576],[-120.899019,36.300755],[-120.88998,36.29055],[-120.879057,36.295385],[-120.86508,36.292578],[-120.856288,36.284688],[-120.851416,36.28587],[-120.849616,36.281685],[-120.84072,36.27704],[-120.837038,36.262934],[-120.829311,36.257161],[-120.823871,36.257222],[-120.818945,36.253273],[-120.811194,36.251807],[-120.81237,36.246184],[-120.805473,36.240168],[-120.80091,36.239711],[-120.798931,36.235476],[-120.789058,36.234672],[-120.788998,36.230535],[-120.78306,36.228962],[-120.774779,36.219906],[-120.772331,36.220175],[-120.76663,36.209724],[-120.761483,36.20358],[-120.755652,36.202842],[-120.748601,36.198816],[-120.732223,36.203605],[-120.720427,36.199556],[-120.718426,36.196848],[-120.712774,36.198569],[-120.706121,36.20373],[-120.706411,36.227692],[-120.717696,36.260012],[-120.724303,36.266904],[-120.724813,36.27032],[-120.732006,36.275366],[-120.733847,36.284196],[-120.738289,36.288251],[-120.743114,36.298059],[-120.75834,36.308604],[-120.752936,36.307796],[-120.746654,36.310234],[-120.741031,36.30584],[-120.725569,36.297295],[-120.722584,36.292656],[-120.707805,36.28583],[-120.702144,36.286239],[-120.687227,36.271446],[-120.681651,36.271539],[-120.678582,36.267319]],[[-120.213979,35.789276],[-120.250979,35.788977],[-120.336993,35.789739],[-120.515083,35.790269],[-120.585265,35.790853],[-120.691613,35.79089],[-120.833825,35.791928],[-120.876014,35.791969],[-121.001022,35.792904],[-121.003108,35.792639],[-121.114454,35.79331],[-121.125937,35.793941],[-121.175695,35.794102],[-121.346363,35.795183]],[[-121.346363,35.795183],[-121.356737,35.804187],[-121.388053,35.823483],[-121.406823,35.844623],[-121.413146,35.855316],[-121.426955,35.860103],[-121.439584,35.86695],[-121.462264,35.885618],[-121.461227,35.896906],[-121.463452,35.904416],[-121.472435,35.91989],[-121.4862,35.970348],[-121.503112,36.000299],[-121.51159,36.006598],[-121.531876,36.014368],[-121.553716,36.019798],[-121.569612,36.021539],[-121.574602,36.025156],[-121.590395,36.050363],[-121.589183,36.053775],[-121.592853,36.065062],[-121.606845,36.072065],[-121.618672,36.087767],[-121.622009,36.099695],[-121.629634,36.114452],[-121.680145,36.165818],[-121.717176,36.195146],[-121.779851,36.227407],[-121.797059,36.234211],[-121.806979,36.232907],[-121.813734,36.234235],[-121.826425,36.24186],[-121.835785,36.250748],[-121.83935,36.260478],[-121.851967,36.277831],[-121.874797,36.289064],[-121.888491,36.30281],[-121.89676,36.304938],[-121.899642,36.302674],[-121.902729,36.306379],[-121.894714,36.317806],[-121.892917,36.340428],[-121.905446,36.358269],[-121.902669,36.363901],[-121.901813,36.381879],[-121.903195,36.393603],[-121.905657,36.398206],[-121.914378,36.404344],[-121.917463,36.414809],[-121.91474,36.42589],[-121.9255,36.453918],[-121.937205,36.472488],[-121.9416,36.485602],[-121.939216,36.496896],[-121.938763,36.506423],[-121.943678,36.511802],[-121.953884,36.517757],[-121.954915,36.523084],[-121.944666,36.521861],[-121.928769,36.523147],[-121.925937,36.525173],[-121.932508,36.559935],[-121.942533,36.566435],[-121.949659,36.567602],[-121.95146,36.564009],[-121.957335,36.564482],[-121.972594,36.57337],[-121.978592,36.580488],[-121.970427,36.582754],[-121.964059,36.590571],[-121.959695,36.608959],[-121.941666,36.618059],[-121.938551,36.633908],[-121.93643,36.636746],[-121.929666,36.636959],[-121.923866,36.634559],[-121.890164,36.609259],[-121.889064,36.601759],[-121.871364,36.604559],[-121.860604,36.611136],[-121.842263,36.630059],[-121.831995,36.644856],[-121.825052,36.657207],[-121.814462,36.682858],[-121.807062,36.714157],[-121.805643,36.750239],[-121.788278,36.803994],[-121.791544,36.815186],[-121.810552,36.850648]],[[-122.395056,38.864245],[-122.385184,38.852475],[-122.37696,38.849211],[-122.371552,38.844651],[-122.354304,38.837148],[-122.348624,38.83606],[-122.343552,38.841292],[-122.335439,38.843468],[-122.329759,38.842364],[-122.324047,38.846252],[-122.315359,38.839468],[-122.303007,38.842396],[-122.296031,38.838684],[-122.287998,38.839931],[-122.281647,38.82462],[-122.276607,38.81862],[-122.273983,38.809437],[-122.265599,38.796797],[-122.259647,38.789917],[-122.255695,38.781134],[-122.251983,38.767726],[-122.250111,38.755262],[-122.241487,38.743151],[-122.235135,38.740223],[-122.230815,38.730783],[-122.225038,38.722335],[-122.228415,38.720623],[-122.223038,38.704511],[-122.224206,38.699984],[-122.221646,38.696016],[-122.213822,38.693408],[-122.208206,38.695536],[-122.199726,38.683312],[-122.203422,38.677184],[-122.19803,38.669056],[-122.183245,38.657136],[-122.175644,38.658576],[-122.168301,38.655296],[-122.162333,38.644096],[-122.165949,38.640257],[-122.161212,38.635761],[-122.16254,38.632689],[-122.170429,38.629601],[-122.168349,38.619297],[-122.165965,38.617681],[-122.151468,38.625249],[-122.150021,38.621017],[-122.14198,38.609681],[-122.139388,38.609169],[-122.130476,38.590241],[-122.126187,38.575138],[-122.120731,38.559858],[-122.114075,38.537218],[-122.114955,38.53373],[-122.109595,38.521411],[-122.103281,38.513348]],[[-122.406786,38.155632],[-122.406793,38.15872],[-122.401363,38.161012],[-122.384774,38.160964],[-122.371116,38.15772],[-122.367561,38.158792],[-122.365582,38.166029],[-122.369751,38.175875],[-122.36679,38.183824],[-122.358565,38.181974],[-122.357051,38.190634],[-122.360257,38.197115],[-122.355128,38.196862],[-122.350502,38.192611],[-122.350681,38.201831],[-122.359241,38.209989],[-122.358267,38.218524],[-122.359924,38.230501],[-122.366787,38.247015],[-122.374587,38.244515],[-122.377187,38.248415],[-122.389744,38.260474],[-122.387242,38.273253],[-122.396717,38.272101],[-122.404592,38.281423],[-122.400823,38.289549],[-122.403589,38.299114],[-122.401739,38.30245],[-122.394917,38.304479],[-122.396336,38.309179],[-122.401953,38.314191],[-122.405401,38.322118],[-122.40914,38.320554],[-122.409719,38.325963],[-122.413732,38.330693],[-122.411993,38.334012],[-122.421514,38.339513],[-122.427329,38.34914],[-122.442283,38.359035],[-122.447196,38.359035],[-122.457741,38.367466],[-122.453574,38.374187],[-122.44789,38.379312],[-122.465891,38.390411],[-122.470191,38.397511],[-122.470591,38.404911],[-122.495492,38.423511],[-122.497475,38.424306],[-122.491391,38.43441],[-122.487107,38.431718],[-122.485507,38.437478],[-122.480003,38.44303],[-122.479955,38.448726],[-122.482991,38.45271],[-122.493691,38.45651],[-122.50155,38.455919],[-122.509469,38.457872],[-122.510049,38.46216],[-122.506092,38.464109],[-122.516244,38.470872],[-122.529592,38.469609],[-122.531396,38.478539],[-122.540536,38.488312],[-122.544901,38.496285],[-122.538201,38.497902],[-122.535534,38.501391],[-122.545527,38.506798],[-122.548807,38.511627],[-122.542367,38.513198],[-122.543893,38.519966],[-122.550623,38.522132],[-122.553677,38.525991],[-122.566644,38.525543],[-122.573999,38.540359],[-122.582148,38.549399],[-122.585076,38.549133],[-122.603282,38.558784],[-122.615031,38.558531],[-122.620846,38.560317],[-122.620281,38.56533],[-122.626095,38.569908],[-122.631451,38.569085],[-122.630494,38.579008],[-122.634996,38.586308],[-122.646314,38.598189],[-122.644695,38.603224],[-122.634732,38.614569],[-122.633588,38.619864],[-122.628293,38.623038],[-122.632996,38.627607],[-122.634096,38.636907],[-122.624196,38.649806],[-122.623785,38.664383],[-122.627396,38.667506]],[[-120.005316,39.316453],[-120.036657,39.316334],[-120.256345,39.316213],[-120.326159,39.316436],[-120.494466,39.315997],[-120.554585,39.315481],[-120.645795,39.315155],[-120.648739,39.31145],[-120.658104,39.3078],[-120.662552,39.310066],[-120.668602,39.308086],[-120.671433,39.310371],[-120.676187,39.307249],[-120.681992,39.306907],[-120.693017,39.301925],[-120.702509,39.299782],[-120.710419,39.292437],[-120.715128,39.292252],[-120.727893,39.288081],[-120.730066,39.285609],[-120.747225,39.274914],[-120.749171,39.270526],[-120.756282,39.264456],[-120.763881,39.263232],[-120.768718,39.256297],[-120.785069,39.248179],[-120.791447,39.241068],[-120.799152,39.238016],[-120.804028,39.233331],[-120.816647,39.229928],[-120.828673,39.223377],[-120.839223,39.215459],[-120.851713,39.212033],[-120.856588,39.20411],[-120.860808,39.192475],[-120.866934,39.189579],[-120.868849,39.180737],[-120.881552,39.179047],[-120.892251,39.175337],[-120.896942,39.176567],[-120.908805,39.170269],[-120.906289,39.165641],[-120.924503,39.160849],[-120.923368,39.157231],[-120.936904,39.151394],[-120.939581,39.146061],[-120.94749,39.143395],[-120.950062,39.136441],[-120.96608,39.127928],[-120.967886,39.122271],[-120.973171,39.119806],[-120.979315,39.110402],[-120.988717,39.111777],[-120.986324,39.102653],[-120.988951,39.084495],[-120.995853,39.081],[-120.991588,39.076878],[-120.998544,39.071916],[-120.997358,39.068056],[-121.002734,39.067534],[-121.002853,39.062725],[-121.007072,39.061218],[-121.008086,39.052667],[-121.02059,39.045346],[-121.021776,39.039165],[-121.02901,39.038427],[-121.031063,39.027955],[-121.037694,39.020805],[-121.037017,39.01755],[-121.041608,39.013791],[-121.052175,39.010686],[-121.061425,39.010208],[-121.068611,39.00516],[-121.080342,39.006862],[-121.080807,39.009699],[-121.090272,39.014267],[-121.096403,39.011649],[-121.104247,39.01185],[-121.10888,39.018209],[-121.118068,39.020107],[-121.125099,39.032451],[-121.133378,39.034376],[-121.136706,39.037706],[-121.150141,39.032227],[-121.152125,39.027043],[-121.16197,39.024428],[-121.172917,39.018465],[-121.179252,39.020004],[-121.18637,39.012867],[-121.19864,39.01748],[-121.204331,39.015743],[-121.205662,39.012055],[-121.221787,39.011962],[-121.228504,39.021575],[-121.233248,39.024748],[-121.240965,39.021374],[-121.248971,39.028671],[-121.253868,39.027645],[-121.265984,39.030379],[-121.273044,39.034183],[-121.279533,39.034618]],[[-120.003117,39.445044],[-120.00443,39.374908],[-120.00471,39.330488],[-120.005316,39.316453]],[[-117.673749,33.870831],[-117.674282,33.857956],[-117.662117,33.857499],[-117.63665,33.829975],[-117.607639,33.797731],[-117.580789,33.769477],[-117.569175,33.76461],[-117.536448,33.757665],[-117.533999,33.710355],[-117.497645,33.705575],[-117.474573,33.703811],[-117.459817,33.691714],[-117.413314,33.659302],[-117.415815,33.655268],[-117.457937,33.602189],[-117.496701,33.552615],[-117.51021,33.533999],[-117.509909,33.520546],[-117.503181,33.520405],[-117.503756,33.508945],[-117.509725,33.509062],[-117.509722,33.505019]],[[-117.509722,33.505019],[-117.509581,33.471633],[-117.515014,33.467739],[-117.538429,33.455643],[-117.557985,33.451633],[-117.57848,33.453927],[-117.593599,33.396819],[-117.59588,33.386629]],[[-117.59588,33.386629],[-117.607905,33.406317],[-117.631682,33.430528],[-117.645582,33.440728],[-117.684584,33.461927],[-117.689284,33.460155],[-117.691384,33.454028],[-117.715339,33.460553],[-117.726486,33.483427],[-117.761387,33.516326],[-117.784888,33.541525],[-117.801288,33.546324],[-117.814188,33.552224],[-117.840289,33.573523],[-117.87679,33.592322],[-117.89979,33.599622],[-117.927091,33.605521],[-117.940591,33.620021],[-118.000593,33.654319],[-118.029694,33.676418],[-118.064895,33.711018],[-118.088896,33.729817],[-118.101097,33.734117],[-118.116703,33.743549]],[[-120.005316,39.316453],[-120.005142,39.291258],[-120.005746,39.22521],[-120.002461,39.067489]],[[-121.141009,38.71198],[-121.151857,38.711502],[-121.198159,38.715009],[-121.299461,38.722201],[-121.327534,38.723916],[-121.411017,38.72992],[-121.484396,38.734598]],[[-121.436886,40.151905],[-121.44187,40.152075],[-121.446208,40.155874],[-121.442877,40.161856],[-121.442811,40.170049],[-121.445123,40.177692],[-121.436108,40.181878],[-121.439628,40.18782],[-121.444111,40.190745],[-121.439187,40.195085],[-121.412735,40.194314],[-121.407356,40.191404],[-121.401606,40.195346],[-121.400774,40.199811],[-121.395318,40.200428],[-121.385028,40.210297],[-121.368395,40.21223],[-121.361713,40.225581],[-121.367411,40.236005],[-121.364823,40.239135],[-121.367098,40.245572],[-121.356882,40.253371],[-121.349,40.265406],[-121.352671,40.268488],[-121.350322,40.275883],[-121.359133,40.276891],[-121.36303,40.281648],[-121.363195,40.287501],[-121.370265,40.287961],[-121.372248,40.294236],[-121.3768,40.297989],[-121.366689,40.301054],[-121.356626,40.29747],[-121.349041,40.306489],[-121.343024,40.306643],[-121.345571,40.312667],[-121.353544,40.315524],[-121.356331,40.319739],[-121.362372,40.322863],[-121.366133,40.321961],[-121.368909,40.32564],[-121.36796,40.331801],[-121.381826,40.340513],[-121.394092,40.339741],[-121.397478,40.342109],[-121.412066,40.342719],[-121.429353,40.350349],[-121.442738,40.34807],[-121.459431,40.350381],[-121.470395,40.350213],[-121.474458,40.357017],[-121.479111,40.360351],[-121.480992,40.366614],[-121.47354,40.374556],[-121.481972,40.381507],[-121.484117,40.388514],[-121.484278,40.396559],[-121.47997,40.411192],[-121.479598,40.419505],[-121.474029,40.423732],[-121.47689,40.42687],[-121.483197,40.427525],[-121.49788,40.432003],[-121.494509,40.441219],[-121.497635,40.445591]],[[-121.497635,40.445591],[-121.366111,40.445927],[-121.346531,40.449715],[-121.337575,40.445484],[-121.327826,40.445367]],[[-116.085165,33.425932],[-116.129863,33.42611],[-116.197591,33.428893],[-116.233551,33.428393],[-116.349881,33.427522],[-116.518401,33.426887],[-116.617687,33.427354],[-116.836747,33.426865],[-116.857095,33.426574],[-116.954054,33.427649],[-117.030861,33.426931],[-117.031381,33.430134],[-117.098815,33.43026],[-117.140275,33.432566],[-117.241271,33.431993],[-117.241668,33.448928],[-117.314651,33.472585],[-117.370925,33.490549],[-117.364272,33.505025],[-117.509722,33.505019]],[[-114.435429,34.079727],[-114.437683,34.071937],[-114.43934,34.057893],[-114.438602,34.050205],[-114.434949,34.037784],[-114.438266,34.022609],[-114.443821,34.016176],[-114.450206,34.012574],[-114.46283,34.008421],[-114.460264,33.996649],[-114.467932,33.992877],[-114.471138,33.98804],[-114.481455,33.981261],[-114.484784,33.975519],[-114.499883,33.961789],[-114.509568,33.957264],[-114.51586,33.958106],[-114.522002,33.955623],[-114.52868,33.947817],[-114.535478,33.934651],[-114.533679,33.926072],[-114.525361,33.922272],[-114.511511,33.911092],[-114.50792,33.903807],[-114.508708,33.90064],[-114.517808,33.894889],[-114.516501,33.885926],[-114.50434,33.876882],[-114.503017,33.867998],[-114.505638,33.864276],[-114.514673,33.858638],[-114.52453,33.858477],[-114.528451,33.854929],[-114.529597,33.848063],[-114.523409,33.835323],[-114.51997,33.825381],[-114.522714,33.818979],[-114.52805,33.814963],[-114.520094,33.799473],[-114.516734,33.788345],[-114.507089,33.76793],[-114.504863,33.760465],[-114.504483,33.750998],[-114.512348,33.734214],[-114.504176,33.728055],[-114.496565,33.719155],[-114.494197,33.707922],[-114.496489,33.696901],[-114.512409,33.691282],[-114.523959,33.685879],[-114.530348,33.679245],[-114.531523,33.675108],[-114.525201,33.658092],[-114.530244,33.65014],[-114.526947,33.637534],[-114.529662,33.622794],[-114.524619,33.61426],[-114.529186,33.60665],[-114.540617,33.591412],[-114.5403,33.580615],[-114.535965,33.569154],[-114.526834,33.557466],[-114.524599,33.552231],[-114.542011,33.542481],[-114.558898,33.531819],[-114.560963,33.516739],[-114.569533,33.509219],[-114.580468,33.506465],[-114.591554,33.499443],[-114.599713,33.484315],[-114.612472,33.470768],[-114.622918,33.456561],[-114.622283,33.447558],[-114.627125,33.433554]],[[-121.027084,38.300252],[-121.04057,38.297718],[-121.047494,38.291142],[-121.053475,38.293134],[-121.061672,38.29894],[-121.066653,38.299146],[-121.084232,38.286361],[-121.09544,38.281633],[-121.102203,38.283247],[-121.116829,38.277349],[-121.127782,38.277447],[-121.133825,38.271875],[-121.141997,38.268935],[-121.159908,38.26527],[-121.161201,38.26097],[-121.173079,38.255208],[-121.195752,38.254187],[-121.203407,38.248754],[-121.217451,38.2488],[-121.222512,38.244406],[-121.22925,38.247525],[-121.237498,38.247479],[-121.244785,38.244718],[-121.250828,38.24472],[-121.259036,38.250267],[-121.269228,38.252089],[-121.27767,38.249096],[-121.282267,38.249836],[-121.289951,38.242029],[-121.296154,38.23825],[-121.315661,38.236039],[-121.321962,38.232835],[-121.329199,38.232866],[-121.344024,38.22826],[-121.354682,38.231031],[-121.370914,38.229725],[-121.389672,38.23301],[-121.396042,38.227706],[-121.405172,38.22996],[-121.419103,38.236513],[-121.425607,38.243672],[-121.425081,38.250401],[-121.428643,38.253782],[-121.444916,38.256846],[-121.450426,38.254617],[-121.461574,38.259185],[-121.470958,38.259902],[-121.48007,38.253576],[-121.478741,38.245993],[-121.486613,38.240458],[-121.491669,38.22769],[-121.501008,38.226847],[-121.507487,38.222563],[-121.504335,38.212131],[-121.513551,38.202372],[-121.522128,38.201908],[-121.529152,38.193828],[-121.524455,38.185516],[-121.527831,38.18166],[-121.524614,38.174844],[-121.531398,38.1631],[-121.536151,38.158158],[-121.53631,38.151581],[-121.541671,38.151758],[-121.543399,38.147566],[-121.559176,38.143886],[-121.557688,38.136751],[-121.56244,38.135983],[-121.576968,38.12851],[-121.584074,38.120228],[-121.583502,38.113475],[-121.580783,38.111009],[-121.565751,38.105279],[-121.564035,38.101422],[-121.567184,38.097321],[-121.580022,38.094414]],[[-121.593273,38.313089],[-121.589816,38.322691],[-121.585221,38.325512],[-121.58348,38.3319],[-121.575216,38.327161],[-121.559353,38.342567],[-121.541103,38.346261],[-121.533929,38.349847],[-121.521001,38.361224],[-121.523728,38.374574],[-121.523241,38.380582],[-121.515817,38.385766],[-121.513097,38.396934],[-121.518521,38.410453],[-121.532425,38.429316],[-121.527046,38.434821],[-121.515352,38.434518],[-121.506585,38.437286],[-121.502665,38.44129],[-121.50116,38.451257],[-121.505168,38.469807],[-121.508867,38.472809],[-121.538766,38.474707],[-121.547467,38.481207],[-121.559167,38.498007],[-121.556747,38.50653],[-121.551866,38.513806],[-121.525178,38.518962],[-121.525566,38.523106],[-121.530767,38.527906],[-121.528467,38.532106],[-121.520366,38.535367],[-121.513199,38.540743],[-121.51129,38.54629],[-121.520965,38.566205],[-121.511566,38.575005],[-121.506275,38.586288],[-121.508668,38.596803],[-121.515766,38.602704],[-121.527667,38.604604],[-121.539067,38.601904],[-121.544567,38.597704],[-121.549869,38.599405],[-121.558268,38.608204],[-121.561568,38.618604],[-121.5651,38.642304],[-121.570469,38.647602],[-121.576068,38.648604],[-121.587169,38.642705],[-121.594069,38.644106],[-121.609569,38.661108],[-121.628014,38.674757],[-121.633774,38.686164],[-121.631214,38.696739],[-121.614222,38.709041],[-121.605278,38.719519],[-121.602894,38.735838]],[[-121.581354,36.899152],[-121.575797,36.893043],[-121.570515,36.897218],[-121.560272,36.897111],[-121.558452,36.910468],[-121.553415,36.915233],[-121.540016,36.920765],[-121.54068,36.925542],[-121.534463,36.930933],[-121.523591,36.93709],[-121.513813,36.945155],[-121.510231,36.954053],[-121.512275,36.959036],[-121.50528,36.964216],[-121.501488,36.971895],[-121.488949,36.983148],[-121.467939,36.976772],[-121.463561,36.978294],[-121.463656,36.984877],[-121.450607,36.988944],[-121.447346,36.982955],[-121.437697,36.97851],[-121.434563,36.973983],[-121.418538,36.960797],[-121.351395,36.960272],[-121.215406,36.961248]],[[-116.106181,32.618641],[-116.125848,32.616673],[-116.211033,32.610326],[-116.540708,32.583741],[-116.62705,32.576261],[-116.857154,32.557459],[-116.928055,32.550758],[-116.945956,32.550058],[-117.026358,32.542457],[-117.062759,32.539857],[-117.124862,32.534156],[-117.133363,32.575625],[-117.132963,32.597054],[-117.136664,32.618754],[-117.139464,32.627054],[-117.159865,32.660652],[-117.168866,32.671952],[-117.180366,32.681652],[-117.196767,32.688851],[-117.213068,32.687751],[-117.223868,32.683051],[-117.236237,32.671355],[-117.237294,32.667489],[-117.243738,32.662677],[-117.255169,32.700051],[-117.25757,32.72605],[-117.25537,32.745449],[-117.25257,32.752948],[-117.25497,32.786948],[-117.26107,32.803148],[-117.280971,32.822247],[-117.28217,32.839547],[-117.28117,32.843047],[-117.27387,32.851447],[-117.26497,32.848947],[-117.25617,32.859447],[-117.25167,32.874346],[-117.25447,32.900146],[-117.26047,32.931245],[-117.28077,33.012343],[-117.29337,33.034642],[-117.309771,33.07454],[-117.315278,33.093504],[-117.328359,33.121842],[-117.362572,33.168437],[-117.39148,33.202762],[-117.401926,33.213598],[-117.445583,33.268517],[-117.469794,33.296417],[-117.50565,33.334063],[-117.547693,33.365491],[-117.571722,33.378988],[-117.59588,33.386629]],[[-120.926449,38.077421],[-120.926545,38.073107],[-120.926347,37.886724],[-120.923251,37.793571],[-120.922645,37.759528],[-120.923245,37.757728],[-120.920665,37.738392],[-120.922367,37.737445],[-120.944445,37.742128],[-120.95416,37.738445],[-120.973165,37.747952],[-120.981775,37.756262],[-120.987333,37.756616],[-120.995696,37.760178],[-120.997771,37.755339],[-121.008,37.749091],[-121.012347,37.749528],[-121.011047,37.755027],[-121.01748,37.755406],[-121.028816,37.740704],[-121.037178,37.742525],[-121.045248,37.739424],[-121.046362,37.742634],[-121.051813,37.742507],[-121.052043,37.748522],[-121.059939,37.749263],[-121.066603,37.740091],[-121.076428,37.737574],[-121.083127,37.74184],[-121.088368,37.741052],[-121.089989,37.736601],[-121.096874,37.734423],[-121.099524,37.739824],[-121.110208,37.742043],[-121.111349,37.740028],[-121.10763,37.73228],[-121.116281,37.724661],[-121.128449,37.724227],[-121.131801,37.722051],[-121.137381,37.72414],[-121.141908,37.722716],[-121.146106,37.717499],[-121.155096,37.720323],[-121.160829,37.711142],[-121.15922,37.704439],[-121.165672,37.70425],[-121.163679,37.700377],[-121.168922,37.699125],[-121.176299,37.704047],[-121.180159,37.703416],[-121.175912,37.699421],[-121.181769,37.699001],[-121.180415,37.695829],[-121.183096,37.689984],[-121.187679,37.687635],[-121.195914,37.694802],[-121.198426,37.690273],[-121.201542,37.69615],[-121.208692,37.686302],[-121.216391,37.68787],[-121.223466,37.683608],[-121.22185,37.670329],[-121.229248,37.668928],[-121.229073,37.66434],[-121.23327,37.662512],[-121.240615,37.665231],[-121.246335,37.663319],[-121.271115,37.642487],[-121.273808,37.638285],[-121.32405,37.598831],[-121.333388,37.59105],[-121.375479,37.558408],[-121.471925,37.481783]],[[-120.648905,34.974393],[-120.63999,35.002963],[-120.63357,35.033085],[-120.629931,35.061515],[-120.629583,35.078362],[-120.630957,35.101941],[-120.635787,35.123805],[-120.644311,35.139616],[-120.651134,35.147768],[-120.662475,35.153357],[-120.675074,35.153061],[-120.686974,35.160708],[-120.698906,35.171192],[-120.714185,35.175998],[-120.734231,35.178472],[-120.74887,35.177795],[-120.754823,35.174701],[-120.756862,35.169208],[-120.756086,35.160459],[-120.760492,35.15971],[-120.778998,35.168897],[-120.786076,35.177666],[-120.805258,35.184973],[-120.846674,35.204429],[-120.856047,35.206487],[-120.873046,35.225688],[-120.89679,35.247877],[-120.896876,35.25399],[-120.889354,35.277819],[-120.87957,35.294184],[-120.8672,35.327154],[-120.862684,35.346776],[-120.862134,35.360744],[-120.866094,35.393008],[-120.869209,35.403276],[-120.884757,35.430196],[-120.896862,35.442243],[-120.907937,35.449069],[-120.946546,35.446715],[-120.950742,35.44802],[-120.955863,35.453743],[-120.969436,35.460197],[-120.976122,35.459028],[-121.003359,35.46071],[-121.025621,35.484598],[-121.05308,35.50753],[-121.059913,35.509671],[-121.101595,35.548814],[-121.126027,35.593058],[-121.133556,35.600455],[-121.143561,35.606046],[-121.166712,35.635399],[-121.188897,35.643138],[-121.195291,35.640734],[-121.251034,35.656641],[-121.272332,35.666708],[-121.284731,35.662508],[-121.284973,35.674109],[-121.289794,35.689428],[-121.296473,35.696824],[-121.304583,35.701794],[-121.314632,35.71331],[-121.315786,35.75252],[-121.326319,35.757531],[-121.324918,35.769347],[-121.332449,35.783106],[-121.346363,35.795183]],[[-122.081473,37.477838],[-122.096762,37.461905],[-122.096574,37.466138],[-122.111237,37.466288],[-122.113265,37.46753],[-122.123895,37.461117],[-122.121952,37.454182],[-122.127883,37.45269],[-122.138774,37.454802],[-122.141998,37.457728],[-122.153513,37.456677],[-122.157686,37.453495],[-122.165302,37.452843],[-122.175704,37.441884],[-122.182299,37.439362],[-122.185131,37.433769],[-122.190402,37.431472],[-122.191312,37.42545],[-122.187915,37.420016],[-122.187647,37.414747],[-122.192365,37.413868],[-122.194331,37.408867],[-122.189575,37.39128],[-122.190505,37.385253],[-122.201007,37.371215],[-122.202467,37.360272],[-122.193504,37.344997],[-122.185954,37.338701],[-122.182493,37.33264],[-122.175075,37.325741],[-122.183038,37.327314],[-122.186119,37.322489],[-122.192513,37.318795],[-122.186592,37.315546],[-122.18232,37.309528],[-122.175817,37.312749],[-122.170812,37.311982],[-122.166584,37.305617],[-122.16233,37.304413],[-122.165641,37.294864],[-122.154381,37.290423],[-122.152278,37.286055]],[[-122.292974,37.107318],[-122.306139,37.116383],[-122.313907,37.118161],[-122.322971,37.11546],[-122.330463,37.115338],[-122.337071,37.117382],[-122.338856,37.120854],[-122.337085,37.130795],[-122.337833,37.135936],[-122.344029,37.144099],[-122.359791,37.155574],[-122.36179,37.163593],[-122.367085,37.172817],[-122.37927,37.181128],[-122.390599,37.182988],[-122.397065,37.187249],[-122.405073,37.195791],[-122.407181,37.219465],[-122.408982,37.225258],[-122.415822,37.232839],[-122.419113,37.24147],[-122.418452,37.248521],[-122.411686,37.265844],[-122.401323,37.337009],[-122.40085,37.359225],[-122.409258,37.374805],[-122.423286,37.392542],[-122.443687,37.435941],[-122.445987,37.461541],[-122.452087,37.48054],[-122.467888,37.49814],[-122.472388,37.50054],[-122.493789,37.492341],[-122.499289,37.495341],[-122.516689,37.52134],[-122.519533,37.537302],[-122.513688,37.552239],[-122.518088,37.576138],[-122.517187,37.590637],[-122.501386,37.599637],[-122.496786,37.612136],[-122.494085,37.644035],[-122.496784,37.686433],[-122.502427,37.708133]],[[-122.391374,37.708331],[-122.39319,37.707531],[-122.387626,37.67906],[-122.374291,37.662206],[-122.3756,37.652389],[-122.387381,37.648462],[-122.386072,37.637662],[-122.365455,37.626208],[-122.35531,37.615736],[-122.358583,37.611155],[-122.370364,37.614427],[-122.373309,37.613773],[-122.378545,37.605592],[-122.360219,37.592501],[-122.317676,37.590865],[-122.315713,37.583666],[-122.305895,37.575484],[-122.262698,37.572866],[-122.251898,37.566321],[-122.244372,37.55814],[-122.214264,37.538505],[-122.196593,37.537196],[-122.194957,37.522469],[-122.168449,37.504143],[-122.155686,37.501198],[-122.149632,37.502671],[-122.140142,37.507907],[-122.130979,37.503652],[-122.127706,37.500053],[-122.116112,37.505386]],[[-121.472648,37.48217],[-121.486207,37.474146],[-121.484252,37.466032],[-121.477198,37.463248],[-121.473163,37.45726],[-121.462917,37.451489],[-121.46186,37.438799],[-121.469936,37.430872],[-121.46915,37.424733],[-121.472606,37.423345],[-121.466251,37.415034],[-121.463551,37.415934],[-121.456351,37.406735],[-121.456651,37.395535],[-121.448163,37.391677],[-121.436085,37.39613],[-121.42405,37.393635],[-121.412549,37.389435],[-121.409075,37.380672],[-121.415849,37.375916],[-121.41929,37.364445],[-121.42365,37.358837],[-121.41981,37.352807],[-121.42075,37.344737],[-121.40915,37.330637],[-121.411939,37.324445],[-121.405753,37.31099],[-121.414258,37.306509],[-121.42275,37.299138],[-121.423452,37.295287],[-121.431391,37.294994],[-121.436816,37.291971],[-121.443551,37.296638],[-121.44965,37.293939],[-121.448658,37.2903],[-121.454009,37.28405],[-121.459051,37.282739],[-121.453977,37.276427],[-121.454849,37.263141],[-121.457255,37.260943],[-121.45502,37.25555],[-121.45575,37.24944],[-121.441746,37.231127],[-121.431559,37.227816],[-121.422219,37.221934],[-121.421075,37.214826],[-121.416869,37.211262],[-121.415323,37.199001],[-121.410209,37.189596],[-121.411525,37.185407],[-121.408905,37.180842],[-121.413157,37.171953],[-121.407727,37.169006],[-121.407601,37.163241],[-121.404636,37.155989],[-121.400004,37.150863],[-121.393424,37.148131],[-121.392005,37.150256],[-121.383551,37.151487],[-121.381686,37.157635],[-121.384266,37.166201],[-121.379654,37.168006],[-121.372209,37.176962],[-121.364535,37.180318],[-121.360942,37.184321],[-121.354561,37.183893],[-121.346666,37.179914],[-121.342382,37.174192],[-121.332548,37.171277],[-121.328409,37.16595],[-121.314034,37.16791],[-121.311644,37.170041],[-121.305582,37.16661],[-121.29773,37.166429],[-121.290655,37.172132],[-121.290959,37.175427],[-121.286063,37.181139],[-121.281107,37.183603],[-121.275378,37.178739],[-121.262093,37.159323],[-121.23711,37.157204],[-121.236145,37.149724],[-121.232297,37.139893],[-121.226804,37.134774]],[[-122.498376,41.182675],[-122.399793,41.182806],[-122.317716,41.184851],[-122.19603,41.18444],[-122.147626,41.184554],[-122.126114,41.182969],[-122.018039,41.183232],[-121.807389,41.183285],[-121.718263,41.183387],[-121.446495,41.183484]],[[-121.497635,40.445591],[-121.514621,40.444922],[-121.532309,40.446265],[-121.565132,40.445797],[-121.57708,40.442454],[-121.581893,40.435813],[-121.589713,40.431282],[-121.600437,40.431763],[-121.608881,40.438294],[-121.615387,40.439063],[-121.639554,40.436857],[-121.645819,40.434752],[-121.655882,40.441882],[-121.686563,40.453088],[-121.696382,40.448876],[-121.708921,40.450841],[-121.719642,40.448658],[-121.721881,40.44524],[-121.734585,40.435632],[-121.776521,40.437706],[-121.787597,40.443635],[-121.78989,40.442289],[-121.804341,40.443533],[-121.806697,40.444978],[-121.813502,40.441369],[-121.830789,40.437656],[-121.838442,40.437536],[-121.850984,40.442601],[-121.864175,40.440388],[-121.872665,40.436181],[-121.877185,40.436907],[-121.892097,40.426925],[-121.89495,40.427305],[-121.901298,40.420915],[-121.913641,40.424202],[-121.921653,40.423122],[-121.926641,40.418587],[-121.941146,40.415363],[-121.950761,40.418938],[-121.960568,40.419283],[-121.96751,40.422115],[-121.989204,40.423392],[-121.994882,40.425652],[-121.997639,40.422795],[-122.00994,40.426767],[-122.015001,40.420938],[-122.020305,40.424153],[-122.030086,40.420987],[-122.030098,40.417717],[-122.035558,40.419687],[-122.044715,40.418478],[-122.052142,40.42038],[-122.05667,40.416845],[-122.072051,40.415301],[-122.08015,40.412281],[-122.091875,40.41114],[-122.09294,40.413754],[-122.098217,40.410206],[-122.098583,40.414758],[-122.112908,40.405074],[-122.118309,40.406452],[-122.121317,40.403357],[-122.129772,40.403038],[-122.129395,40.398763],[-122.149727,40.398084],[-122.159462,40.396954],[-122.163044,40.393176],[-122.177853,40.391839],[-122.182918,40.392501],[-122.187717,40.385344],[-122.180306,40.384791],[-122.172913,40.379159],[-122.183634,40.379339],[-122.192116,40.386024],[-122.193557,40.392311],[-122.199173,40.377943],[-122.206862,40.381787],[-122.214464,40.382587],[-122.217727,40.385285],[-122.229608,40.389057],[-122.233706,40.385578],[-122.251112,40.387194],[-122.255955,40.379919],[-122.264393,40.379786],[-122.280852,40.375787],[-122.294206,40.380462],[-122.299432,40.375493],[-122.309185,40.371155],[-122.322349,40.374875],[-122.328751,40.372825],[-122.33695,40.374174],[-122.342155,40.370901],[-122.355439,40.371926],[-122.364925,40.374165],[-122.380694,40.372193],[-122.388741,40.374279],[-122.394936,40.372062],[-122.403104,40.374386],[-122.412586,40.374536],[-122.416686,40.379289],[-122.422341,40.379244],[-122.432514,40.374503],[-122.445021,40.373398],[-122.451216,40.377894],[-122.462586,40.375467],[-122.470489,40.383932],[-122.479196,40.384111],[-122.482695,40.380517],[-122.494907,40.383647],[-122.499065,40.382295],[-122.505415,40.389526],[-122.513826,40.388386],[-122.519988,40.393675],[-122.525374,40.394294],[-122.521936,40.388115],[-122.525677,40.387613],[-122.53409,40.37956],[-122.540941,40.382422],[-122.541661,40.376518],[-122.551026,40.378122],[-122.550652,40.374873],[-122.564908,40.365503],[-122.578581,40.367996],[-122.585848,40.359277],[-122.595299,40.357993],[-122.602415,40.351011],[-122.610158,40.346409],[-122.620567,40.348235],[-122.625172,40.347455],[-122.621906,40.340385],[-122.632703,40.338121],[-122.633948,40.334138],[-122.645923,40.333184],[-122.650263,40.32863],[-122.663446,40.332205],[-122.673734,40.330444],[-122.675646,40.335434],[-122.689478,40.337997],[-122.693605,40.341596],[-122.705934,40.345176],[-122.710436,40.348253],[-122.731558,40.34692],[-122.730436,40.357939],[-122.740358,40.365],[-122.748608,40.365694],[-122.752079,40.360721],[-122.758151,40.363327],[-122.781164,40.35864],[-122.788057,40.355264],[-122.805573,40.355887],[-122.813463,40.35112],[-122.836368,40.348427],[-122.839597,40.345405],[-122.853671,40.342891],[-122.86291,40.345085],[-122.864312,40.34761],[-122.872274,40.348969],[-122.877891,40.346825],[-122.880529,40.34184],[-122.891086,40.333316],[-122.906228,40.317882],[-122.909696,40.312627],[-122.915177,40.311173],[-122.918213,40.306846],[-122.929964,40.307627],[-122.93411,40.313097],[-122.946227,40.310736],[-122.946715,40.30833],[-122.956888,40.310817],[-122.970354,40.310358],[-122.976505,40.315151],[-122.998696,40.307529],[-123.011917,40.306484],[-123.013548,40.303244],[-123.025233,40.303661],[-123.0338,40.298803],[-123.041255,40.290967],[-123.047839,40.291462],[-123.056668,40.285375],[-123.065426,40.286971]],[[-123.517906,42.000883],[-123.49883,42.000525],[-123.43477,42.001641],[-123.381776,41.999268],[-123.347562,41.999108],[-123.192361,42.005446],[-123.154908,42.008036],[-123.145959,42.009247],[-123.083956,42.005448],[-123.065655,42.004948],[-123.045254,42.003049],[-122.941597,42.003085],[-122.893961,42.002605],[-122.876148,42.003247],[-122.80008,42.004071],[-122.712942,42.004157],[-122.634739,42.004858],[-122.501135,42.00846],[-122.397984,42.008758],[-122.378193,42.009518],[-122.261127,42.007364],[-122.161328,42.007637],[-122.101922,42.005766],[-122.000319,42.003967],[-121.846712,42.00307],[-121.689159,42.000584],[-121.580865,41.998668],[-121.44754,41.997169]],[[-122.403514,38.150624],[-122.409798,38.136231],[-122.439577,38.116923],[-122.450377,38.116269],[-122.454958,38.118887],[-122.484411,38.11496],[-122.490727,38.109755]],[[-123.002911,38.295708],[-123.024333,38.310573],[-123.038742,38.313576],[-123.051061,38.310693],[-123.053504,38.299385],[-123.058239,38.298355],[-123.063671,38.302178],[-123.074684,38.322574],[-123.068437,38.33521],[-123.068265,38.359865],[-123.085572,38.390525],[-123.103706,38.415541],[-123.122379,38.437314],[-123.128825,38.450418],[-123.145325,38.459422],[-123.166428,38.474947],[-123.202277,38.494314],[-123.249797,38.511045],[-123.287156,38.540223],[-123.297151,38.543452],[-123.331899,38.565542],[-123.343338,38.590008],[-123.349612,38.596805],[-123.371876,38.607235],[-123.379303,38.621953],[-123.398166,38.647044],[-123.40301,38.649449],[-123.405663,38.656729],[-123.43272,38.687131],[-123.441774,38.699744],[-123.461291,38.717001],[-123.490021,38.732213],[-123.514784,38.741966],[-123.525152,38.753801],[-123.533535,38.768408]],[[-120.652673,37.831422],[-120.547596,37.754778],[-120.54188,37.749943],[-120.442102,37.674602],[-120.387613,37.633704]]]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/public/js/map-counties-ca-topo.json\n// module id = 65\n// module chunks = 0"],"sourceRoot":""}